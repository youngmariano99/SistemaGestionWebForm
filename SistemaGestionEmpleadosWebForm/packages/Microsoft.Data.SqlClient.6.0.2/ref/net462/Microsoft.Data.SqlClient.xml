<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Microsoft.Data.SqlClient</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Data.OperationAbortedException">
      <summary>
        This exception is thrown when an ongoing operation is aborted by the user.
      </summary>
    </member>
    <member name="T:Microsoft.Data.SqlDbTypeExtensions">
      <summary>Extensions for SqlDbType.</summary>
    </member>
    <member name="F:Microsoft.Data.SqlDbTypeExtensions.Json">
      <SqlJson name="default">
        <summary>Gets the <see cref="T:System.Data.SqlDbType" /> enum value for the JSON datatype.</summary>
        <returns>
          <see cref="T:System.Data.SqlDbType" /> enum value for JSON datatype.
      </returns>
      </SqlJson>
    </member>
    <member name="T:Microsoft.Data.Sql.SqlNotificationRequest">
      <summary>
        Represents a request for notification for a given command.
      </summary>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/query-notifications-sql-server">
        Using Query Notifications
      </seealso>
    </member>
    <member name="M:Microsoft.Data.Sql.SqlNotificationRequest.#ctor">
      <summary>
        Creates a new instance of the <see cref="T:Microsoft.Data.Sql.SqlNotificationRequest" /> class with default values.
      </summary>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/query-notifications-sql-server">
        Using Query Notifications
      </seealso>
    </member>
    <member name="M:Microsoft.Data.Sql.SqlNotificationRequest.#ctor(System.String,System.String,System.Int32)">
      <param name="userData">
        A string that contains an application-specific identifier for this notification. It is not used by the notifications infrastructure, but it allows you to associate notifications with the application state. The value indicated in this parameter is included in the Service Broker queue message.
      </param>
      <param name="options">
        A string that contains the Service Broker service name where notification messages are posted, and it must include a database name or a Service Broker instance GUID that restricts the scope of the service name lookup to a particular database. For more information about the format of the <paramref name="options" /> parameter, see <see cref="P:Microsoft.Data.Sql.SqlNotificationRequest.Options" />.
      </param>
      <param name="timeout">
        The time, in seconds, to wait for a notification message.
      </param>
      <summary>
        Creates a new instance of the <see cref="T:Microsoft.Data.Sql.SqlNotificationRequest" /> class with a user-defined string that identifies a particular notification request, the name of a predefined SQL Server 2005 Service Broker service name, and the time-out period, measured in seconds.
      </summary>
      <exception cref="T:System.ArgumentNullException">
        The value of the <paramref name="options" /> parameter is <see langword="null" />.
      </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="options" /> or <paramref name="userData" /> parameter is longer than <see cref="F:System.UInt16.MaxValue" /> or the value in the <paramref name="timeout" /> parameter is less than zero.
      </exception>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/query-notifications-sql-server">
        Using Query Notifications
      </seealso>
    </member>
    <member name="P:Microsoft.Data.Sql.SqlNotificationRequest.Options">
      <summary>
        Gets or sets the SQL Server Service Broker service name where notification messages are posted.
      </summary>
      <value>
        <see cref="T:System.String" /> that contains the SQL Server 2005 Service Broker service name where notification messages are posted and the database or service broker instance GUID to scope the server name lookup.
      </value>
      <exception cref="T:System.ArgumentNullException">
        The value is <see langword="null" />.
      </exception>
      <exception cref="T:System.ArgumentException">
        The value is longer than <see cref="F:System.UInt16.MaxValue" />.
      </exception>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/query-notifications-sql-server">
        Using Query Notifications
      </seealso>
    </member>
    <member name="P:Microsoft.Data.Sql.SqlNotificationRequest.Timeout">
      <summary>
        Gets or sets a value that specifies how long SQL Server waits for a change to occur before the operation times out.
      </summary>
      <value>
        A signed integer value that specifies, in seconds, how long SQL Server waits for a change to occur before the operation times out.
      </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The value is less than zero.
      </exception>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/query-notifications-sql-server">
        Using Query Notifications
      </seealso>
    </member>
    <member name="P:Microsoft.Data.Sql.SqlNotificationRequest.UserData">
      <summary>
        Gets or sets an application-specific identifier for this notification.
      </summary>
      <value>
        A <see cref="T:System.String" /> value of the application-specific identifier for this notification.
      </value>
      <exception cref="T:System.ArgumentException">
        The value is longer than <see cref="F:System.UInt16.MaxValue" />.
      </exception>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/query-notifications-sql-server">
        Using Query Notifications
      </seealso>
    </member>
    <member name="T:Microsoft.Data.Sql.SqlDataSourceEnumerator">
      <summary>
        Provides a mechanism for enumerating all available instances of SQL Server within the local network.
      </summary>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/enumerate-instances-sql-server">
        Enumerating Instances of SQL Server
      </seealso>
    </member>
    <member name="P:Microsoft.Data.Sql.SqlDataSourceEnumerator.Instance">
      <summary>
        Gets an instance of the <see cref="T:Microsoft.Data.Sql.SqlDataSourceEnumerator" /> , which can be used to retrieve information about available SQL Server instances.
      </summary>
      <value>
        An instance of the <see cref="T:Microsoft.Data.Sql.SqlDataSourceEnumerator" /> used to retrieve information about available SQL Server instances.
      </value>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/enumerate-instances-sql-server">
        Enumerating Instances of SQL Server
      </seealso>
    </member>
    <member name="M:Microsoft.Data.Sql.SqlDataSourceEnumerator.GetDataSources">
      <summary>
        Retrieves a <see cref="T:System.Data.DataTable" /> containing information about all visible SQL Server instances.
      </summary>
      <returns>
        A <see cref="T:System.Data.DataTable" /> containing information about the visible SQL Server instances.
      </returns>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/enumerate-instances-sql-server">
        Enumerating Instances of SQL Server
      </seealso>
    </member>
    <member name="T:Microsoft.Data.SqlClient.ActiveDirectoryAuthenticationProvider">
      <summary>
        This class implements <see cref="T:Microsoft.Data.SqlClient.SqlAuthenticationProvider" /> and is used for active directory federated authentication mechanisms.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.ActiveDirectoryAuthenticationProvider.#ctor">
      <summary>
        Initializes the <see cref="T:Microsoft.Data.SqlClient.ActiveDirectoryAuthenticationProvider" /> class.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.ActiveDirectoryAuthenticationProvider.#ctor(System.String)">
      <param name="applicationClientId">
        Client Application Id to be used for acquiring an access token for federated authentication. The driver uses its own application client id by default.
      </param>
      <summary>
        Initializes the <see cref="T:Microsoft.Data.SqlClient.ActiveDirectoryAuthenticationProvider" /> class with the provided application client id.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.ActiveDirectoryAuthenticationProvider.ClearUserTokenCache">
      <summary>
        Clears cached user tokens from the token provider.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.ActiveDirectoryAuthenticationProvider.#ctor(System.Func{Microsoft.Identity.Client.DeviceCodeResult,System.Threading.Tasks.Task},System.String)">
      <param name="deviceCodeFlowCallbackMethod">
        The callback method to be used with 'Active Directory Device Code Flow' authentication.
      </param>
      <param name="applicationClientId">
        (Optional) Client Application Id to be used for acquiring an access token for federated authentication. The driver uses its own application client id by default.
      </param>
      <summary>
        Initializes the <see cref="T:Microsoft.Data.SqlClient.ActiveDirectoryAuthenticationProvider" /> class with the provided device code flow callback method and application client id.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.ActiveDirectoryAuthenticationProvider.AcquireTokenAsync(Microsoft.Data.SqlClient.SqlAuthenticationParameters)">
      <param name="parameters">
        The Active Directory authentication parameters passed to authentication providers.
      </param>
      <summary>
        Acquires a security token from the authority.
      </summary>
      <returns>
        Represents an asynchronous operation that returns the authentication token.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.ActiveDirectoryAuthenticationProvider.SetDeviceCodeFlowCallback(System.Func{Microsoft.Identity.Client.DeviceCodeResult,System.Threading.Tasks.Task})">
      <param name="deviceCodeFlowCallbackMethod">
        The callback method to be used with 'Active Directory Device Code Flow' authentication.
      </param>
      <summary>
        Sets the callback method, overriding the default implementation that processes the result for 'Active Directory Device Code Flow' authentication.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.ActiveDirectoryAuthenticationProvider.SetAcquireAuthorizationCodeAsyncCallback(System.Func{System.Uri,System.Uri,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Uri}})">
      <param name="acquireAuthorizationCodeAsyncCallback">
        The callback method to be called by MSAL.NET to delegate the Web user interface with the Secure Token Service (STS).
      </param>
      <summary>
        Sets a callback method which is invoked with a custom Web UI instance that will let the user sign-in with Azure Active Directory, present consent if needed, and get back the authorization code. Applicable when working with Active Directory Interactive authentication.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.ActiveDirectoryAuthenticationProvider.SetIWin32WindowFunc(System.Func{System.Windows.Forms.IWin32Window})">
      <param name="iWin32WindowFunc">
        A function to return the current window.
      </param>
      <summary>
        Sets a reference to the current <see cref="T:System.Windows.Forms.IWin32Window" /> that triggers the browser to be shown. Used to center the browser pop-up onto this window."
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.ActiveDirectoryAuthenticationProvider.IsSupported(Microsoft.Data.SqlClient.SqlAuthenticationMethod)">
      <param name="authentication">The authentication method.</param>
      <summary>Indicates whether the specified authentication method is supported.</summary>
      <returns>
        <see langword="true" /> if the specified authentication method is supported; otherwise, <see langword="false" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.ActiveDirectoryAuthenticationProvider.BeforeLoad(Microsoft.Data.SqlClient.SqlAuthenticationMethod)">
      <param name="authentication">
        The authentication method.
      </param>
      <summary>
        This method is called immediately before the provider is added to authentication provider registry.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.ActiveDirectoryAuthenticationProvider.BeforeUnload(Microsoft.Data.SqlClient.SqlAuthenticationMethod)">
      <param name="authentication">
        The authentication method.
      </param>
      <summary>
        This method is called immediately before the provider is removed from the authentication provider registry.
      </summary>
    </member>
    <member name="T:Microsoft.Data.SqlClient.ApplicationIntent">
      <summary>
        Specifies a value for <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent" />. Possible values are <see cref="F:Microsoft.Data.SqlClient.ApplicationIntent.ReadWrite" /> and <see cref="F:Microsoft.Data.SqlClient.ApplicationIntent.ReadOnly" />.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.ApplicationIntent.ReadOnly">
      <summary>
        The application workload type when connecting to a server is read only.
      </summary>
      <returns>1</returns>
      <value>1</value>
    </member>
    <member name="F:Microsoft.Data.SqlClient.ApplicationIntent.ReadWrite">
      <summary>
        The application workload type when connecting to a server is read write.
      </summary>
      <returns>0</returns>
      <value>0</value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.OnChangeEventHandler">
      <OnChangeEventHandler>
        <param name="sender">The source of the event.</param>
        <param name="e">
        A <see cref="T:Microsoft.Data.SqlClient.SqlNotificationEventArgs" /> object that contains the event data.
      </param>
        <summary>
        Handles the <see cref="E:Microsoft.Data.SqlClient.SqlDependency.OnChange" /> event that is fired when a notification is received for any of the commands associated with a <see cref="T:Microsoft.Data.SqlClient.SqlDependency" /> object.
      </summary>
      </OnChangeEventHandler>
    </member>
    <member name="T:Microsoft.Data.SqlClient.PoolBlockingPeriod">
      <summary>Specifies a value for the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod" /> property.</summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.PoolBlockingPeriod.AlwaysBlock">
      <summary>Blocking period ON for all SQL servers including Azure SQL servers.</summary>
      <value>1</value>
    </member>
    <member name="F:Microsoft.Data.SqlClient.PoolBlockingPeriod.Auto">
      <summary>Blocking period OFF for Azure SQL servers, but ON for all other SQL servers.</summary>
      <value>0</value>
    </member>
    <member name="F:Microsoft.Data.SqlClient.PoolBlockingPeriod.NeverBlock">
      <summary>Blocking period OFF for all SQL servers, including Azure SQL servers.</summary>
      <value>2</value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SortOrder">
      <summary>Specifies how rows of data are sorted.</summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SortOrder.Unspecified">
      <summary>The default. No sort order is specified.</summary>
      <value>-1</value>
      <returns>-1</returns>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SortOrder.Ascending">
      <summary>Rows are sorted in ascending order.</summary>
      <value>0</value>
      <returns>0</returns>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SortOrder.Descending">
      <summary>Rows are sorted in descending order.</summary>
      <value>1</value>
      <returns>1</returns>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlAuthenticationInitializer">
      <summary>
        Called during the opening of the first <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> instance to specify an Authentication connection string attribute.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlAuthenticationInitializer.#ctor">
      <summary>
        Default constructor to instantiate the <see cref="T:Microsoft.Data.SqlClient.SqlAuthenticationInitializer" /> class.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlAuthenticationInitializer.Initialize">
      <summary>
        When overridden in a derived class, initializes the authentication initializer. This method is called immediately after the <see cref="M:Microsoft.Data.SqlClient.SqlAuthenticationInitializer.#ctor" /> constructor during the opening of the first <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> instance to specify an Authentication connection string attribute.
      </summary>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlAuthenticationMethod">
      <summary>Describes the different SQL authentication methods that can be used by a client connecting to Azure SQL Database. For details, see <see href="https://learn.microsoft.com/azure/azure-sql/database/authentication-aad-overview">Use Microsoft Entra Authentication</see>.</summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlAuthenticationMethod.NotSpecified">
      <summary>The authentication method is not specified.</summary>
      <value>0</value>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlAuthenticationMethod.SqlPassword">
      <summary>The authentication method uses Sql Password. Use Sql Password to connect to a SQL Database using SQL Server authentication.</summary>
      <value>1</value>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlAuthenticationMethod.ActiveDirectoryPassword">
      <summary>The authentication method uses Active Directory Password. Use Active Directory Password to connect to a SQL Database using a Microsoft Entra principal name and password.</summary>
      <value>2</value>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlAuthenticationMethod.ActiveDirectoryIntegrated">
      <summary>The authentication method uses Active Directory Integrated. Use Active Directory Integrated to connect to a SQL Database using integrated Windows authentication.</summary>
      <value>3</value>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlAuthenticationMethod.ActiveDirectoryInteractive">
      <summary>The authentication method uses Active Directory Interactive. Use Active Directory Interactive to connect to a SQL Database with an interactive authentication flow.</summary>
      <value>4</value>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlAuthenticationMethod.ActiveDirectoryServicePrincipal">
      <summary>The authentication method uses Active Directory Service Principal. Use Active Directory Service Principal to connect to a SQL Database using the client ID and secret of a service principal identity.</summary>
      <value>5</value>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlAuthenticationMethod.ActiveDirectoryDeviceCodeFlow">
      <summary>The authentication method uses Active Directory Device Code Flow. Use Active Directory Device Code Flow to connect to a SQL Database from devices and operating systems that do not provide a Web browser, using another device to perform interactive authentication.</summary>
      <value>6</value>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlAuthenticationMethod.ActiveDirectoryManagedIdentity">
      <summary>The authentication method uses Active Directory Managed Identity. Use System Assigned or User Assigned Managed Identity to connect to SQL Database from Azure client environments that have enabled support for Managed Identity. For User Assigned Managed Identity, 'User Id' or 'UID' is required to be set to the "client ID" of the user identity.</summary>
      <value>7</value>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlAuthenticationMethod.ActiveDirectoryMSI">
      <summary>Alias for "Active Directory Managed Identity" authentication method. Use System Assigned or User Assigned Managed Identity to connect to SQL Database from Azure client environments that have enabled support for Managed Identity. For User Assigned Managed Identity, 'User Id' or 'UID' is required to be set to the "client ID" of the user identity.</summary>
      <value>8</value>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlAuthenticationMethod.ActiveDirectoryDefault">
      <summary>The authentication method uses Active Directory Default. Use this mode to connect to a SQL Database using multiple non-interactive authentication methods tried sequentially to acquire an access token. This method does not fallback to the "Active Directory Interactive" authentication method.</summary>
      <value>9</value>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlAuthenticationMethod.ActiveDirectoryWorkloadIdentity">
      <summary>The authentication method uses Active Directory Workload Identity. Use a federated User Assigned Managed Identity to connect to SQL Database from Azure client environments that have enabled support for Workload Identity. The 'User Id' or 'UID' is required to be set to the "client ID" of the user identity.</summary>
      <value>10</value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlAuthenticationParameters">
      <summary>
        Represents AD authentication parameters passed by a driver to authentication providers.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlAuthenticationParameters.#ctor(Microsoft.Data.SqlClient.SqlAuthenticationMethod,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Int32)">
      <param name="authenticationMethod">One of the enumeration values that specifies the authentication method.</param>
      <param name="serverName">The server name.</param>
      <param name="databaseName">The database name.</param>
      <param name="resource">The resource URI.</param>
      <param name="authority">The authority URI.</param>
      <param name="userId">The user login name/ID.</param>
      <param name="password">The user password.</param>
      <param name="connectionId">The connection ID.</param>
      <param name="connectionTimeout">The connection timeout value in seconds.</param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlAuthenticationParameters" /> class using the specified authentication method, server name, database name, resource URI, authority URI, user login name/ID, user password, connection ID and connection timeout value.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlAuthenticationParameters.AuthenticationMethod">
      <summary>Gets the authentication method.</summary>
      <value>The authentication method.</value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlAuthenticationParameters.Authority">
      <summary>Gets the authority URI.</summary>
      <value>The authority URI.</value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlAuthenticationParameters.ConnectionId">
      <summary>Gets the connection ID.</summary>
      <value>The connection ID.</value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlAuthenticationParameters.DatabaseName">
      <summary>Gets the database name.</summary>
      <value>The database name.</value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlAuthenticationParameters.Password">
      <summary>Gets the user password.</summary>
      <value>The user password.</value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlAuthenticationParameters.Resource">
      <summary>The resource URIs.</summary>
      <value>The resource URI.</value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlAuthenticationParameters.ServerName">
      <summary>Gets the server name.</summary>
      <value>The server name.</value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlAuthenticationParameters.UserId">
      <summary>Gets the user login name/ID.</summary>
      <value>The user login name/ID.</value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlAuthenticationParameters.ConnectionTimeout">
      <summary>Gets the connection timeout value.</summary>
      <value>The connection timeout value to be passed to Cancellation Token Source.</value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlAuthenticationProvider">
      <summary>Defines the core behavior of authentication providers and provides a base class for derived classes.</summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlAuthenticationProvider.#ctor">
      <summary>
        Called from constructors in derived classes to initialize the <see cref="T:Microsoft.Data.SqlClient.SqlAuthenticationProvider" /> class.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlAuthenticationProvider.AcquireTokenAsync(Microsoft.Data.SqlClient.SqlAuthenticationParameters)">
      <param name="parameters">The Active Directory authentication parameters passed by the driver to authentication providers.</param>
      <summary>Acquires a security token from the authority.</summary>
      <returns>Represents an asynchronous operation that returns the AD authentication token.</returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlAuthenticationProvider.BeforeLoad(Microsoft.Data.SqlClient.SqlAuthenticationMethod)">
      <param name="authenticationMethod">The authentication method.</param>
      <summary>This method is called immediately before the provider is added to the SQL authentication provider registry.</summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlAuthenticationProvider.BeforeUnload(Microsoft.Data.SqlClient.SqlAuthenticationMethod)">
      <param name="authenticationMethod">The authentication method.</param>
      <summary>This method is called immediately before the provider is removed from the SQL authentication provider registry.</summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlAuthenticationProvider.GetProvider(Microsoft.Data.SqlClient.SqlAuthenticationMethod)">
      <param name="authenticationMethod">The authentication method.</param>
      <summary>Gets an authentication provider by method.</summary>
      <returns>The authentication provider or <see langword="null" /> if not found.</returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlAuthenticationProvider.IsSupported(Microsoft.Data.SqlClient.SqlAuthenticationMethod)">
      <param name="authenticationMethod">The authentication method.</param>
      <summary>Indicates whether the specified authentication method is supported.</summary>
      <returns>
        <see langword="true" /> if the specified authentication method is supported; otherwise, <see langword="false" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlAuthenticationProvider.SetProvider(Microsoft.Data.SqlClient.SqlAuthenticationMethod,Microsoft.Data.SqlClient.SqlAuthenticationProvider)">
      <param name="authenticationMethod">The authentication method.</param>
      <param name="provider">The authentication provider.</param>
      <summary>Sets an authentication provider by method.</summary>
      <returns>
        <see langword="true" /> if the operation succeeded; otherwise, <see langword="false" /> (for example, the existing provider disallows overriding).
      </returns>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlAuthenticationToken">
      <summary>Represents an authentication token.</summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlAuthenticationToken.#ctor(System.String,System.DateTimeOffset)">
      <param name="accessToken">The access token.</param>
      <param name="expiresOn">The token expiration time.</param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlAuthenticationToken" /> class.
      </summary>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="accessToken" /> parameter is <see langword="null" /> or empty.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlAuthenticationToken.AccessToken">
      <summary>Gets the token string.</summary>
      <value>The token string.</value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlAuthenticationToken.ExpiresOn">
      <summary>Gets the token expiration time.</summary>
      <value>The token expiration time.</value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlBulkCopy">
      <summary>
        Lets you efficiently bulk load a SQL Server table with data from another source.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.#ctor(Microsoft.Data.SqlClient.SqlConnection)">
      <param name="connection">
        The already open <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> instance that will be used to perform the bulk copy operation. If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> class using the specified open instance of <see cref="T:Microsoft.Data.SqlClient.SqlConnection" />.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.#ctor(Microsoft.Data.SqlClient.SqlConnection,Microsoft.Data.SqlClient.SqlBulkCopyOptions,Microsoft.Data.SqlClient.SqlTransaction)">
      <param name="connection">
        The already open <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> instance that will be used to perform the bulk copy. If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.
      </param>
      <param name="copyOptions">
        A combination of values from the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyOptions" /> enumeration that determines which data source rows are copied to the destination table.
      </param>
      <param name="externalTransaction">
        An existing <see cref="T:Microsoft.Data.SqlClient.SqlTransaction" /> instance under which the bulk copy will occur.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> class using the supplied existing open instance of <see cref="T:Microsoft.Data.SqlClient.SqlConnection" />. The <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> instance behaves according to options supplied in the <paramref name="copyOptions" /> parameter. If a non-null <see cref="T:Microsoft.Data.SqlClient.SqlTransaction" /> is supplied, the copy operations will be performed within that transaction.
      </summary>
      <related type="Article" href="https://learn.microsoft.com/sql/connect/ado-net/sql/bulk-copy-operations-sql-server">
        Performing Bulk Copy Operations
      </related>
      <related type="Article" href="https://learn.microsoft.com/sql/connect/ado-net/overview-sqlclient-driver">
        Overview of the SqlClient driver
      </related>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
      <param name="connectionString">
        <para>
          The string defining the connection that will be opened for use by the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> instance.  
        </para>
        <para>
          If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.#ctor(Microsoft.Data.SqlClient.SqlConnection)" /> or <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.#ctor(Microsoft.Data.SqlClient.SqlConnection,Microsoft.Data.SqlClient.SqlBulkCopyOptions,Microsoft.Data.SqlClient.SqlTransaction)" /> and <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string. 
        </para>
      </param>
      <summary>
        Initializes and opens a new instance of <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> based on the supplied <paramref name="connectionString" />. The constructor uses the <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> to initialize a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> class.
      </summary>
      <exception cref="T:System.ArgumentException">
        If <paramref name="connectionString" /> is an empty string, an <see cref="T:System.ArgumentException" /> is thrown.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.#ctor(System.String,Microsoft.Data.SqlClient.SqlBulkCopyOptions)">
      <param name="connectionString">
        The string defining the connection that will be opened for use by the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> instance. If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.#ctor(Microsoft.Data.SqlClient.SqlConnection)" /> or <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.#ctor(Microsoft.Data.SqlClient.SqlConnection,Microsoft.Data.SqlClient.SqlBulkCopyOptions,Microsoft.Data.SqlClient.SqlTransaction)" /> and <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.
      </param>
      <param name="copyOptions">
        A combination of values from the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyOptions" /> enumeration that determines which data source rows are copied to the destination table.
      </param>
      <summary>
        Initializes and opens a new instance of <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> based on the supplied <paramref name="connectionString" />. The constructor uses that <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> to initialize a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> class. The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> instance behaves according to options supplied in the <paramref name="copyOptions" /> parameter.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlBulkCopy.BatchSize">
      <summary>
        Number of rows in each batch. At the end of each batch, the rows in the batch are sent to the server.
      </summary>
      <value>
        The integer value of the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.BatchSize" /> property, or zero if no value has been set.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
      <summary>
        Number of seconds for the operation to complete before it times out.
      </summary>
      <value>
        The integer value of the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" /> property. The default is 30 seconds. A value of 0 indicates no limit; the bulk copy will wait indefinitely.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlBulkCopy.ColumnMappings">
      <summary>
        Returns a collection of <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping" /> items. Column mappings define the relationships between columns in the data source and columns in the destination.
      </summary>
      <value>
        A collection of column mappings. By default, it is an empty collection.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlBulkCopy.ColumnOrderHints">
      <summary>
        Returns a collection of <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> items. Column order hints describe the sort order of columns in the clustered index of the destination table.
      </summary>
      <value>
        A collection of column order hints. By default, it is an empty collection.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlBulkCopy.DestinationTableName">
      <summary>
        Name of the destination table on the server.
      </summary>
      <value>
        The string value of the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property, or null if none as been supplied.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlBulkCopy.EnableStreaming">
      <summary>
        Enables or disables a <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object to stream data from an <see cref="T:System.Data.IDataReader" /> object
      </summary>
      <value>
        <see langword="true" /> if a <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object can stream data from an <see cref="T:System.Data.IDataReader" /> object; otherwise, false. The default is <see langword="false" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlBulkCopy.NotifyAfter">
      <summary>
        Defines the number of rows to be processed before generating a notification event.
      </summary>
      <value>
        The integer value of the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> property, or zero if the property has not been set.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlBulkCopy.RowsCopied">
      <summary>
        The number of rows processed in the ongoing bulk copy operation.
      </summary>
      <value>
        The integer value of the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.RowsCopied" /> property.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlBulkCopy.RowsCopied64">
      <summary>
        The number of rows processed in the ongoing bulk copy operation.
      </summary>
      <value>
        The long value of the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.RowsCopied64" /> property.
      </value>
    </member>
    <member name="E:Microsoft.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
      <summary>
        Occurs every time that the number of rows specified by the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> property have been processed.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.Close">
      <summary>
        Closes the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> instance.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
      <summary>
        Releases all resources used by the current instance of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> class.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)">
      <param name="reader">
        A <see cref="T:System.Data.Common.DbDataReader" /> whose rows will be copied to the destination table.
      </param>
      <summary>
        Copies all rows from the supplied <see cref="T:System.Data.Common.DbDataReader" /> array to a destination table specified by the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object.
      </summary>
      <exception cref="T:System.InvalidOperationException">
        A <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> did not specify a valid destination column name.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
      <param name="table">
        A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.
      </param>
      <summary>
        Copies all rows in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object.
      </summary>
      <exception cref="T:System.InvalidOperationException">
        A <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> did not specify a valid destination column name.
      </exception>
      <related type="Article" href="https://learn.microsoft.com/sql/connect/ado-net/sql/bulk-copy-operations-sql-server">
        Performing Bulk Copy Operations
      </related>
      <related type="Article" href="https://learn.microsoft.com/sql/connect/ado-net/overview-sqlclient-driver">
        Overview of the SqlClient driver
      </related>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
      <param name="table">
        A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.
      </param>
      <param name="rowState">
        A value from the <see cref="T:System.Data.DataRowState" /> enumeration. Only rows matching the row state are copied to the destination.
      </param>
      <summary>
        Copies only rows that match the supplied row state in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object.
      </summary>
      <exception cref="T:System.InvalidOperationException">
        A <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> did not specify a valid destination column name.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
      <param name="rows">
        An array of <see cref="T:System.Data.DataRow" /> objects that will be copied to the destination table.
      </param>
      <summary>
        Copies all rows from the supplied <see cref="T:System.Data.DataRow" /> array to a destination table specified by the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.
      </summary>
      <exception cref="T:System.InvalidOperationException">
        A <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> did not specify a valid destination column name.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
      <param name="reader">
        A <see cref="T:System.Data.IDataReader" /> whose rows will be copied to the destination table.
      </param>
      <summary>
        Copies all rows in the supplied <see cref="T:System.Data.IDataReader" /> to a destination table specified by the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object.
      </summary>
      <exception cref="T:System.InvalidOperationException">
        A <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> did not specify a valid destination column name.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)">
      <param name="reader">
        A <see cref="T:System.Data.IDataReader" /> whose rows will be copied to the destination table.
      </param>
      <summary>
        The asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />,
        which copies all rows in the supplied <see cref="T:System.Data.IDataReader" /> to a destination table specified by the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object.
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>Calling <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> multiple times for the same instance before task completion.</item>
          <item>Calling <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> and <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> for the same instance before task completion.</item>
          <item>The connection drops or is closed during <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> execution.</item>
          <item>Returned in the task object, the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</item>
          <item>Returned in the task object, there was a connection pool timeout.</item>
          <item>Returned in the task object, the <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> object is closed before method execution.</item>
          <item>The <see cref="T:System.Data.IDataReader" /> was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</item>
          <item>The <see cref="T:System.Data.IDataReader" /> 's associated connection was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</item>
          <item>A <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> did not specify a valid destination column name.</item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        Returned in the task object, any error returned by SQL Server that occurred while opening the connection.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
      <param name="reader">
        A <see cref="T:System.Data.Common.DbDataReader" /> whose rows will be copied to the destination table.
      </param>
      <param name="cancellationToken">
        The cancellation instruction. A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" />.
      </param>
      <summary>
        The asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />,
        which copies all rows from the supplied <see cref="T:System.Data.Common.DbDataReader" /> array to a destination table specified by the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object.
        The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
      <param name="rows">
        An array of <see cref="T:System.Data.DataRow" /> objects that will be copied to the destination table.
      </param>
      <summary>
        The asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />,
        which copies all rows from the supplied <see cref="T:System.Data.DataRow" /> array to a destination table specified by the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object.
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>Calling <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> multiple times for the same instance before task completion. Calling <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> and <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> for the same instance before task completion.</item>
          <item>The connection drops or is closed during <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> execution.</item>
          <item>Returned in the task object, the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</item>
          <item>Returned in the task object, there was a connection pool timeout.</item>
          <item>Returned in the task object, the <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> object is closed before method execution.</item>
          <item>A <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> did not specify a valid destination column name.</item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        Returned in the task object, any error returned by SQL Server that occurred while opening the connection.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
      <param name="rows">
        An array of <see cref="T:System.Data.DataRow" /> objects that will be copied to the destination table.
      </param>
      <param name="cancellationToken">
        The cancellation instruction. A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.
      </param>
      <summary>
        The asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />,
        which copies all rows from the supplied <see cref="T:System.Data.DataRow" /> array to a destination table specified by the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object.
        The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>Calling <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> multiple times for the same instance before task completion.</item>
          <item>Calling <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> and <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> for the same instance before task completion.</item>
          <item>The connection drops or is closed during <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> execution.</item>
          <item>Returned in the task object, the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</item>
          <item>Returned in the task object, there was a connection pool timeout.</item>
          <item>Returned in the task object, the <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> object is closed before method execution.</item>
          <item>A <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> did not specify a valid destination column name.</item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        Returned in the task object, any error returned by SQL Server that occurred while opening the connection.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
      <param name="table">
        A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.
      </param>
      <summary>
        The asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />,
        which copies all rows in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object.
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>Calling <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> multiple times for the same instance before task completion.</item>
          <item>Calling <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> and <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> for the same instance before task completion.</item>
          <item>The connection drops or is closed during <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> execution.</item>
          <item>Returned in the task object, the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</item>
          <item>Returned in the task object, there was a connection pool timeout.</item>
          <item>Returned in the task object, the <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> object is closed before method execution.</item>
          <item>A <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> did not specify a valid destination column name.</item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        Returned in the task object, any error returned by SQL Server that occurred while opening the connection.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
      <param name="table">
        A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.
      </param>
      <param name="rowState">
        A value from the <see cref="T:System.Data.DataRowState" /> enumeration. Only rows matching the row state are copied to the destination.
      </param>
      <summary>
        The asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />,
        which copies only rows that match the supplied row state in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object.
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>Calling <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> multiple times for the same instance before task completion.</item>
          <item>Calling <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> and <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> for the same instance before task completion.</item>
          <item>The connection drops or is closed during <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> execution.</item>
          <item>Returned in the task object, the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</item>
          <item>Returned in the task object, there was a connection pool timeout.</item>
          <item>Returned in the task object, the <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> object is closed before method execution.</item>
          <item>A <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> did not specify a valid destination column name.</item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        Returned in the task object, any error returned by SQL Server that occurred while opening the connection.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
      <param name="table">
        A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.
      </param>
      <param name="rowState">
        A value from the <see cref="T:System.Data.DataRowState" /> enumeration. Only rows matching the row state are copied to the destination.
      </param>
      <param name="cancellationToken">
        The cancellation instruction. A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.
      </param>
      <summary>
        The asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />,
        which copies only rows that match the supplied row state in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object.
        The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>Calling <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> multiple times for the same instance before task completion.</item>
          <item>Calling <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> and <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> for the same instance before task completion.</item>
          <item>The connection drops or is closed during <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> execution.</item>
          <item>Returned in the task object, the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</item>
          <item>Returned in the task object, there was a connection pool timeout.</item>
          <item>Returned in the task object, the <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> object is closed before method execution.</item>
          <item>A <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> did not specify a valid destination column name.</item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        Returned in the task object, any error returned by SQL Server that occurred while opening the connection.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
      <param name="table">
        A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.
      </param>
      <param name="cancellationToken">
        The cancellation instruction. A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.
      </param>
      <summary>
        The asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />,
        which copies all rows in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object.
        The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>Calling <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> multiple times for the same instance before task completion.</item>
          <item>Calling <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> and <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> for the same instance before task completion.</item>
          <item>The connection drops or is closed during <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> execution.</item>
          <item>Returned in the task object, the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</item>
          <item>Returned in the task object, there was a connection pool timeout.</item>
          <item>Returned in the task object, the <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> object is closed before method execution.</item>
          <item>A <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> did not specify a valid destination column name.</item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        Returned in the task object, any error returned by SQL Server that occurred while opening the connection.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
      <param name="reader">
        A <see cref="T:System.Data.IDataReader" /> whose rows will be copied to the destination table.
      </param>
      <summary>
        The asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />,
        which copies all rows in the supplied <see cref="T:System.Data.IDataReader" /> to a destination table specified by the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object.
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>Calling <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> multiple times for the same instance before task completion.</item>
          <item>Calling <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> and <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> for the same instance before task completion.</item>
          <item>The connection drops or is closed during <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> execution.</item>
          <item>Returned in the task object, the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</item>
          <item>Returned in the task object, there was a connection pool timeout.</item>
          <item>Returned in the task object, the <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> object is closed before method execution.</item>
          <item>The <see cref="T:System.Data.IDataReader" /> was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</item>
          <item>The <see cref="T:System.Data.IDataReader" /> 's associated connection was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</item>
          <item>A <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> did not specify a valid destination column name.</item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        Returned in the task object, any error returned by SQL Server that occurred while opening the connection.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
      <param name="reader">
        A <see cref="T:System.Data.IDataReader" /> whose rows will be copied to the destination table.
      </param>
      <param name="cancellationToken">
        The cancellation instruction. A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.
      </param>
      <summary>
        The asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />,
        which copies all rows in the supplied <see cref="T:System.Data.IDataReader" /> to a destination table specified by the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object.
        The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>Calling <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> multiple times for the same instance before task completion.</item>
          <item>Calling <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> and <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> for the same instance before task completion.</item>
          <item>The connection drops or is closed during <see cref="M:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> execution.</item>
          <item>Returned in the task object, the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</item>
          <item>Returned in the task object, there was a connection pool timeout.</item>
          <item>Returned in the task object, the <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> object is closed before method execution.</item>
          <item>The <see cref="T:System.Data.IDataReader" /> was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</item>
          <item>The <see cref="T:System.Data.IDataReader" /> 's associated connection was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</item>
          <item>A <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> did not specify a valid destination column name.</item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        Returned in the task object, any error returned by SQL Server that occurred while opening the connection.
      </exception>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping">
      <summary>
        Defines the mapping between a column in a <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> instance's data source and a column in the instance's destination table.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping.#ctor">
      <summary>
        Parameterless constructor that initializes a new <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping" /> object.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping.#ctor(System.Int32,System.Int32)">
      <!-- No matching elements were found for the following include tag -->
      <include file="../../../../doc/snippets/Microsoft.Data.SqlClient/SqlBulkCopyColumnMapping.xml" path="docs/members[@name=&quot;SqlBulkCopyColumnMapping&quot;]/ctor[@name=&quot;sourceColumnOrdinalIntegerAnddestinationOrdinalInteger&quot;]/*" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping.#ctor(System.Int32,System.String)">
      <!-- No matching elements were found for the following include tag -->
      <include file="../../../../doc/snippets/Microsoft.Data.SqlClient/SqlBulkCopyColumnMapping.xml" path="docs/members[@name=&quot;SqlBulkCopyColumnMapping&quot;]/ctor[@name=&quot;sourceColumnOrdinalIntegerAnddestinationColumnString&quot;]/*" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping.#ctor(System.String,System.Int32)">
      <!-- No matching elements were found for the following include tag -->
      <include file="../../../../doc/snippets/Microsoft.Data.SqlClient/SqlBulkCopyColumnMapping.xml" path="docs/members[@name=&quot;SqlBulkCopyColumnMapping&quot;]/ctor[@name=&quot;sourceColumnStringAnddestinationOrdinalInteger&quot;]/*" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping.#ctor(System.String,System.String)">
      <!-- No matching elements were found for the following include tag -->
      <include file="../../../../doc/snippets/Microsoft.Data.SqlClient/SqlBulkCopyColumnMapping.xml" path="docs/members[@name=&quot;SqlBulkCopyColumnMapping&quot;]/ctor[@name=&quot;sourceColumnStringAnddestinationColumnString&quot;]/*" />
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationColumn">
      <summary>
        Name of the column being mapped in the destination database table.
      </summary>
      <value>
        The string value of the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationColumn" /> property.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationOrdinal">
      <summary>
        Ordinal value of the destination column within the destination table.
      </summary>
      <value>
        The integer value of the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationOrdinal" /> property, or -1 if the property has not been set.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping.SourceColumn">
      <summary>
        Name of the column being mapped in the data source.
      </summary>
      <value>
        The string value of the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping.SourceColumn" /> property.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping.SourceOrdinal">
      <summary>
        The ordinal position of the source column within the data source.
      </summary>
      <value>
        The integer value of the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping.SourceOrdinal" /> property.
      </value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection">
      <summary>
        Collection of <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping" /> objects that inherits from <see cref="T:System.Collections.CollectionBase" />.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item(System.Int32)">
      <param name="index">
        The zero-based index of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping" /> to find.
      </param>
      <summary>
        Gets the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping" /> object at the specified index.
      </summary>
      <value>
        A <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping" /> object.
      </value>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping)">
      <param name="bulkCopyColumnMapping">
        The <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping" /> object that describes the mapping to be added to the collection.
      </param>
      <summary>
        Adds the specified mapping to the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />.
      </summary>
      <returns>
        A <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping" /> object.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)">
      <!-- No matching elements were found for the following include tag -->
      <include file="../../../../doc/snippets/Microsoft.Data.SqlClient/SqlBulkCopyColumnMappingCollection.xml" path="docs/members[@name=&quot;SqlBulkCopyColumnMappingCollection&quot;]/Add[@name=&quot;sourceColumnIndexIntegerAnddestinationColumnIndexInteger&quot;]/*" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)">
      <!-- No matching elements were found for the following include tag -->
      <include file="../../../../doc/snippets/Microsoft.Data.SqlClient/SqlBulkCopyColumnMappingCollection.xml" path="docs/members[@name=&quot;SqlBulkCopyColumnMappingCollection&quot;]/Add[@name=&quot;sourceColumnIndexIntegerAnddestinationColumnString&quot;]/*" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)">
      <!-- No matching elements were found for the following include tag -->
      <include file="../../../../doc/snippets/Microsoft.Data.SqlClient/SqlBulkCopyColumnMappingCollection.xml" path="docs/members[@name=&quot;SqlBulkCopyColumnMappingCollection&quot;]/Add[@name=&quot;sourceColumnStringAnddestinationColumnIndexInteger&quot;]/*" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)">
      <!-- No matching elements were found for the following include tag -->
      <include file="../../../../doc/snippets/Microsoft.Data.SqlClient/SqlBulkCopyColumnMappingCollection.xml" path="docs/members[@name=&quot;SqlBulkCopyColumnMappingCollection&quot;]/Add[@name=&quot;sourceColumnStringAnddestinationColumnString&quot;]/*" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear">
      <summary>
        Clears the contents of the collection.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains(Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping)">
      <param name="value">
        A valid <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping" /> object.
      </param>
      <summary>
        Gets a value indicating whether a specified <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping" /> object exists in the collection.
      </summary>
      <returns>
        <see langword="true" /> if the specified mapping exists in the collection; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo(Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping[],System.Int32)">
      <param name="array">
        The one-dimensional <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping" /> array that is the destination of the elements copied from <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />. The array must have zero-based indexing.
      </param>
      <param name="index">
        The zero-based index in <paramref name="array" /> at which copying begins.
      </param>
      <summary>
        Copies the elements of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /> to an array of <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping" /> items, starting at a particular index.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf(Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping)">
      <param name="value">
        The <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping" /> object for which to search.
      </param>
      <summary>
        Gets the index of the specified <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping" /> object.
      </summary>
      <returns>
        The zero-based index of the column mapping, or -1 if the column mapping is not found in the collection.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert(System.Int32,Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping)">
      <param name="index">
        Integer value of the location within the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /> at which to insert the new <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping" />.
      </param>
      <param name="value">
        <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping" /> object to be inserted in the collection.</param>
      <summary>
        Insert a new <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping" /> at the index specified.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping)">
      <param name="value">
        <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping" /> object to be removed from the collection.</param>
      <summary>
        Removes the specified <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping" /> element from the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)">
      <param name="index">
        The zero-based index of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnMapping" /> object to be removed from the collection.
      </param>
      <summary>
        Removes the mapping at the specified index from the collection.
      </summary>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint">
      <summary>
        Defines the sort order for a column in a <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> instance's destination table, according to the clustered index on the table.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint.#ctor(System.String,Microsoft.Data.SqlClient.SortOrder)">
      <!-- No matching elements were found for the following include tag -->
      <include file="../../../../doc/snippets/Microsoft.Data.SqlClient/SqlBulkCopyColumnOrderHint.xml" path="docs/members[@name=&quot;SqlBulkCopyColumnOrderHint&quot;]/ctor[@name=&quot;columnStringAndsortOrderSortOrder&quot;]/*" />
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint.Column">
      <summary>
        Name of the destination column in the destination table for which the hint is being provided.
      </summary>
      <value>
        The string value of the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint.Column" /> property.
      </value>
      <exception cref="T:System.ArgumentException">
        The value is null or empty.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint.SortOrder">
      <summary>
        The sort order of the destination column in the destination table.
      </summary>
      <value>
        The SortOrder value of the <see cref="P:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint.SortOrder" /> property.
      </value>
      <exception cref="T:System.ArgumentException">
        The sort order cannot be unspecified for a column order hint.
      </exception>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection">
      <summary>
        Collection of <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> objects that inherits from <see cref="T:System.Collections.CollectionBase" />.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection.Item(System.Int32)">
      <param name="index">
        The zero-based index of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> to find.
      </param>
      <summary>
        Gets the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object at the specified index.
      </summary>
      <value>
        A <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object.
      </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The index must be non-negative and less than the size of the collection.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection.Add(Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint)">
      <param name="columnOrderHint">
        The <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object that describes the order hint to be added to the collection.
      </param>
      <summary>
        Adds the specified order hint to the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection" />.
      </summary>
      <returns>
        A <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object.
      </returns>
      <exception cref="T:System.ArgumentException">
        The value is null.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection.Add(System.String,Microsoft.Data.SqlClient.SortOrder)">
      <!-- No matching elements were found for the following include tag -->
      <include file="../../../../doc/snippets/Microsoft.Data.SqlClient/SqlBulkCopyColumnOrderHintCollection.xml" path="docs/members[@name=&quot;SqlBulkCopyColumnOrderHintCollection&quot;]/Add[@name=&quot;columnStringAndsortOrderSortOrder&quot;]/*" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection.Clear">
      <summary>
        Clears the contents of the collection.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection.Contains(Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint)">
      <param name="value">
        A valid <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object.
      </param>
      <summary>
        Gets a value indicating whether a specified <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object exists in the collection.
      </summary>
      <returns>
        <see langword="true" /> if the specified column order hint exists in the collection; otherwise <see langword="false" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection.CopyTo(Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint[],System.Int32)">
      <param name="array">
        The one-dimensional <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> array that is the destination of the elements copied from <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection" />. The array must have zero-based indexing.
      </param>
      <param name="index">
        The zero-based index in <paramref name="array" /> at which copying begins.
      </param>
      <summary>
        Copies the elements of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection" /> to an array of <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> items, starting at a particular index.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection.IndexOf(Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint)">
      <param name="value">
        The <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object for which to search.
      </param>
      <summary>
        Gets the index of the specified <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object.
      </summary>
      <returns>
        The zero-based index of the column order hint, or -1 if the column order hint is not found in the collection.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection.Insert(System.Int32,Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint)">
      <param name="index">
        Integer value of the location within the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection" /> at which to insert the new <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" />.
      </param>
      <param name="columnOrderHint">
        <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object to be inserted in the collection.
      </param>
      <summary>
        Insert a new <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> at the index specified.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The index is less than zero or greater than the size of the collection.
      </exception>
      <exception cref="T:System.ArgumentNullException">
        A null column order hint cannot be added to the collection.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection.Remove(Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint)">
      <param name="columnOrderHint">
        <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object to be removed from the collection.</param>
      <summary>
        Removes the specified <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> element from the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection" />.
      </summary>
      <exception cref="T:System.ArgumentNullException">
        The value is null.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection.RemoveAt(System.Int32)">
      <param name="index">
        The zero-based index of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object to be removed from the collection.
      </param>
      <summary>
        Removes the column order hint at the specified index from the collection.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The index must be non-negative and less than the size of the collection.
      </exception>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlBulkCopyOptions">
      <summary>
        Bitwise flag that specifies one or more options to use with an instance of <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" />.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlBulkCopyOptions.AllowEncryptedValueModifications">
      <summary>
        <para>
          When specified, <b>AllowEncryptedValueModifications</b> enables bulk copying of encrypted data between tables or databases, without decrypting the data. Typically, an application would select data from encrypted columns from one table without decrypting the data (the app would connect to the database with the column encryption setting keyword set to disabled) and then would use this option to bulk insert the data, which is still encrypted.
        </para>
        <para>
          Use caution when specifying <b>AllowEncryptedValueModifications</b> as this may lead to corrupting the database because the driver does not check if the data is indeed encrypted, or if it is correctly encrypted using the same encryption type, algorithm and key as the target column.
        </para>
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlBulkCopyOptions.CheckConstraints">
      <summary>
        Check constraints while data is being inserted. By default, constraints are not checked.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlBulkCopyOptions.Default">
      <summary>
        Use the default values for all options.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlBulkCopyOptions.FireTriggers">
      <summary>
        When specified, cause the server to fire the insert triggers for the rows being inserted into the database.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlBulkCopyOptions.KeepIdentity">
      <summary>
        Preserve source identity values. When not specified, identity values are assigned by the destination.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlBulkCopyOptions.KeepNulls">
      <summary>
        Preserve null values in the destination table regardless of the settings for default values. When not specified, null values are replaced by default values where applicable.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlBulkCopyOptions.TableLock">
      <summary>
        Obtain a bulk update lock for the duration of the bulk copy operation. When not specified, row locks are used.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction">
      <summary>
        When specified, each batch of the bulk-copy operation will occur within a transaction. If you indicate this option and also provide a <see cref="T:Microsoft.Data.SqlClient.SqlTransaction" /> object to the constructor, an <see cref="T:System.ArgumentException" /> occurs.
      </summary>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlClientFactory">
      <summary>
        Represents a set of methods for creating instances of the <see cref="N:Microsoft.Data.SqlClient" /> provider's implementation of the data source classes.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlClientFactory.Instance">
      <summary>
        Gets an instance of the <see cref="T:Microsoft.Data.SqlClient.SqlClientFactory" />. This can be used to retrieve strongly typed data objects.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlClientFactory.CanCreateDataSourceEnumerator">
      <summary>
        Gets a value that indicates whether a <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" /> can be created.
      </summary>
      <value>
        <see langword="true" /> if a <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" /> can be created; otherwise, <see langword="false" />.
      </value>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlClientFactory.CreateCommand">
      <summary>
        Returns a strongly typed <see cref="T:System.Data.Common.DbCommand" /> instance.
      </summary>
      <returns>
        A new strongly typed instance of <see cref="T:System.Data.Common.DbCommand" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlClientFactory.CreateCommandBuilder">
      <summary>
        Returns a strongly typed <see cref="T:System.Data.Common.DbCommandBuilder" /> instance.
      </summary>
      <returns>
        A new strongly typed instance of <see cref="T:System.Data.Common.DbCommandBuilder" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlClientFactory.CreateConnection">
      <summary>
        Returns a strongly typed <see cref="T:System.Data.Common.DbConnection" /> instance.
      </summary>
      <returns>
        A new strongly typed instance of <see cref="T:System.Data.Common.DbConnection" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlClientFactory.CreateConnectionStringBuilder">
      <summary>
        Returns a strongly typed <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> instance.
      </summary>
      <returns>
        A new strongly typed instance of <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlClientFactory.CreateDataAdapter">
      <summary>
        Returns a strongly typed <see cref="T:System.Data.Common.DbDataAdapter" /> instance.
      </summary>
      <returns>
        A new strongly typed instance of <see cref="T:System.Data.Common.DbDataAdapter" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlClientFactory.CreateDataSourceEnumerator">
      <summary>
        Returns a new <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" />.
      </summary>
      <returns>
        A new data source enumerator.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlClientFactory.CreateParameter">
      <summary>
        Returns a strongly typed <see cref="T:System.Data.Common.DbParameter" /> instance.
      </summary>
      <returns>
        A new strongly typed instance of <see cref="T:System.Data.Common.DbParameter" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlClientFactory.CreatePermission(System.Security.Permissions.PermissionState)">
      <param name="state">
        A member of the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.
      </param>
      <summary>
        Returns a new <see cref="T:System.Security.CodeAccessPermission" />.
      </summary>
      <returns>
        A strongly typed instance of <see cref="T:System.Security.CodeAccessPermission" />.
      </returns>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlClientLogger">
      <summary>
        Represents a SQL client logger.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlClientLogger.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlClientLogger" /> class.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlClientLogger.IsLoggingEnabled">
      <summary>
        Gets a value that indicates whether bid tracing is enabled.
      </summary>
      <value>
        <see langword="true" /> if bid tracing is enabled; otherwise, <see langword="false" />.
      </value>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlClientLogger.LogWarning(System.String,System.String,System.String)">
      <param name="type">
        The type to be logged.
      </param>
      <param name="method">
        The logging method.
      </param>
      <param name="message">
        The message to be logged.
      </param>
      <summary>
        Logs warning through a specified method of the current instance type.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlClientLogger.LogAssert(System.Boolean,System.String,System.String,System.String)">
      <param name="value">
        <see langword="false" /> to log the message; otherwise, <see langword="true" />.
      </param>
      <param name="type">
        The type to be logged.
      </param>
      <param name="method">
        The logging method.
      </param>
      <param name="message">
        The message to be logged.
      </param>
      <summary>
        Logs the specified message if <paramref name="value" /> is <see langword="false" />.
      </summary>
      <returns>
        <see langword="true" /> if the message is not logged; otherwise, <see langword="false" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlClientLogger.LogError(System.String,System.String,System.String)">
      <param name="type">
        The type to be logged.
      </param>
      <param name="method">
        The logging method.
      </param>
      <param name="message">
        The message to be logged.
      </param>
      <summary>
        Logs an error through a specified method of the current instance type.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlClientLogger.LogInfo(System.String,System.String,System.String)">
      <param name="type">
        The type to be logged.
      </param>
      <param name="method">
        The logging method.
      </param>
      <param name="message">
        The message to be logged.
      </param>
      <summary>
        Logs information through a specified method of the current instance type.
      </summary>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlClientMetaDataCollectionNames">
      <summary>
        Provides a list of constants for use with the <see cref="M:Microsoft.Data.SqlClient.SqlConnection.GetSchema(System.String)" /> method to retrieve metadata collections.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlClientMetaDataCollectionNames.Columns">
      <summary>
        A constant for use with the <see cref="M:Microsoft.Data.SqlClient.SqlConnection.GetSchema(System.String)" /> method that represents the <b>Columns</b> collection.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlClientMetaDataCollectionNames.Databases">
      <summary>
        A constant for use with the <see cref="M:Microsoft.Data.SqlClient.SqlConnection.GetSchema(System.String)" /> method that represents the <b>Databases</b> collection.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlClientMetaDataCollectionNames.ForeignKeys">
      <summary>
        A constant for use with the <see cref="M:Microsoft.Data.SqlClient.SqlConnection.GetSchema(System.String)" /> method that represents the <b>ForeignKeys</b> collection.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlClientMetaDataCollectionNames.IndexColumns">
      <summary>
        A constant for use with the <see cref="M:Microsoft.Data.SqlClient.SqlConnection.GetSchema(System.String)" /> method that represents the <b>IndexColumns</b> collection.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlClientMetaDataCollectionNames.Indexes">
      <summary>
        A constant for use with the <see cref="M:Microsoft.Data.SqlClient.SqlConnection.GetSchema(System.String)" /> method that represents the <b>Indexes</b> collection.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlClientMetaDataCollectionNames.ProcedureParameters">
      <summary>
        A constant for use with the <see cref="M:Microsoft.Data.SqlClient.SqlConnection.GetSchema(System.String)" /> method that represents the <b>ProcedureParameters</b> collection.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlClientMetaDataCollectionNames.Procedures">
      <summary>
        A constant for use with the <see cref="M:Microsoft.Data.SqlClient.SqlConnection.GetSchema(System.String)" /> method that represents the <b>Procedures</b> collection.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlClientMetaDataCollectionNames.Tables">
      <summary>
        A constant for use with the <see cref="M:Microsoft.Data.SqlClient.SqlConnection.GetSchema(System.String)" /> method that represents the <b>Tables</b> collection.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlClientMetaDataCollectionNames.UserDefinedTypes">
      <summary>
        A constant for use with the <see cref="M:Microsoft.Data.SqlClient.SqlConnection.GetSchema(System.String)" /> method that represents the <b>UserDefinedTypes</b> collection.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlClientMetaDataCollectionNames.Users">
      <summary>
        A constant for use with the <see cref="M:Microsoft.Data.SqlClient.SqlConnection.GetSchema(System.String)" /> method that represents the <b>Users</b> collection.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlClientMetaDataCollectionNames.ViewColumns">
      <summary>
        A constant for use with the <see cref="M:Microsoft.Data.SqlClient.SqlConnection.GetSchema(System.String)" /> method that represents the <b>ViewColumns</b> collection.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlClientMetaDataCollectionNames.Views">
      <summary>
        A constant for use with the <see cref="M:Microsoft.Data.SqlClient.SqlConnection.GetSchema(System.String)" /> method that represents the <b>Views</b> collection.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlClientMetaDataCollectionNames.AllColumns">
      <summary>
        A constant for use with the <see cref="M:Microsoft.Data.SqlClient.SqlConnection.GetSchema(System.String)" /> method that represents the <b>AllColumns</b> collection.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlClientMetaDataCollectionNames.ColumnSetColumns">
      <summary>
        A constant for use with the <see cref="M:Microsoft.Data.SqlClient.SqlConnection.GetSchema(System.String)" /> method that represents the <b>ColumnSetColumns</b> collection.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlClientMetaDataCollectionNames.StructuredTypeMembers">
      <summary>
        A constant for use with the <see cref="M:Microsoft.Data.SqlClient.SqlConnection.GetSchema(System.String)" /> method that represents the <b>StructuredTypeMembers</b> collection.
      </summary>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlClientPermission">
      <summary>
        Enables the .NET Framework Data Provider for SQL Server to help make sure that a user has a security level sufficient to access a data source.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlClientPermission.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlClientPermission" /> class.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)">
      <param name="state">
        One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.
      </param>
      <see cref="T:System.Security.Permissions.PermissionState" />
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlClientPermission" /> class.
      </summary>
      <see cref="T:Microsoft.Data.SqlClient.SqlClientPermission" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <param name="state">
        One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.
      </param>
      <see cref="T:System.Security.Permissions.PermissionState" />
      <param name="allowBlankPassword">
        Indicates whether a blank password is allowed.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlClientPermission" /> class.
      </summary>
      <see cref="T:Microsoft.Data.SqlClient.SqlClientPermission" />
      <see cref="T:System.Security.Permissions.PermissionState" />
      <see cref="P:System.Data.Common.DBDataPermission.AllowBlankPassword" />
      <see cref="P:System.Data.Common.DBDataPermission.AllowBlankPassword" />
      <see langword="false" />
      <see cref="T:System.Security.Permissions.PermissionState" />
      <c>None</c>
      <see href="https://learn.microsoft.com/dotnet/framework/data/adonet/code-access-security">Code Access Security and ADO.NET</see>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <param name="connectionString">
        The connection string.
      </param>
      <param name="restrictions">
        The key restrictions.
      </param>
      <param name="behavior">
        One of the <see cref="T:System.Data.KeyRestrictionBehavior" /> enumerations.
      </param>
      <summary>
        Adds a new connection string and a set of restricted keywords to the <see cref="T:Microsoft.Data.SqlClient.SqlClientPermission" /> object.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlClientPermission.Copy">
      <summary>
        Returns the <see cref="T:Microsoft.Data.SqlClient.SqlClientPermission" /> as an <see cref="T:System.Security.IPermission" />.
      </summary>
      <returns>
        A copy of the current permission object.
      </returns>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlClientPermissionAttribute">
      <summary>
        Associates a security action with a custom security attribute.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlClientPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <param name="action">
        One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values representing an action that can be performed by using declarative security.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlClientPermissionAttribute" /> class.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlClientPermissionAttribute.CreatePermission">
      <summary>
        Returns a <see cref="T:Microsoft.Data.SqlClient.SqlClientPermission" /> object that is configured according to the attribute properties.
      </summary>
      <returns>
        A <see cref="T:Microsoft.Data.SqlClient.SqlClientPermission" /> object.
      </returns>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider">
      <summary>
        The implementation of the key store provider for Windows Certificate Store. This class enables using certificates stored in the Windows Certificate Store as column master keys. For details, see <see href="https://learn.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.ProviderName">
      <summary>
        The provider name.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.#ctor">
      <summary>
        Key store provider for Windows Certificate Store.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])">
      <param name="masterKeyPath">
        The master key path.
      </param>
      <param name="encryptionAlgorithm">
        The encryption algorithm. Currently, the only valid value is: <c>RSA_OAEP</c></param>
      <param name="encryptedColumnEncryptionKey">
        The encrypted column encryption key.
      </param>
      <summary>
        Decrypts the specified encrypted value of a column encryption key. The encrypted value is expected to be encrypted using the certificate with the specified key path and using the specified algorithm. The format of the key path should be "Local Machine/My/&lt;certificate_thumbprint&gt;" or "Current User/My/&lt;certificate_thumbprint&gt;".
      </summary>
      <returns>
        Returns <see cref="T:System.Byte" />. The decrypted column encryption key.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])">
      <param name="masterKeyPath">
        The master key path.
      </param>
      <param name="encryptionAlgorithm">
        The encryption algorithm. Currently, the only valid value is: <c>RSA_OAEP</c></param>
      <param name="columnEncryptionKey">
        The plaintext column encryption key.
      </param>
      <summary>
        Encrypts a column encryption key using the certificate with the specified key path and using the specified algorithm. The format of the key path should be "Local Machine/My/&lt;certificate_thumbprint&gt;" or "Current User/My/&lt;certificate_thumbprint&gt;".
      </summary>
      <returns>
        Returns <see cref="T:System.Byte" />. The encrypted column encryption key.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)">
      <param name="masterKeyPath">
        The column master key path.
      </param>
      <param name="allowEnclaveComputations">
        <see langword="true" /> to indicate that the column master key supports enclave computations; otherwise, <see langword="false" />.
      </param>
      <summary>
        Digitally signs the column master key metadata with the column master key referenced by the <paramref name="masterKeyPath" /> parameter.
      </summary>
      <returns>
        The signature of the column master key metadata.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])">
      <param name="masterKeyPath">
        The complete path of an asymmetric key. The path format is specific to a key store provider.
      </param>
      <param name="allowEnclaveComputations">
        A Boolean that indicates if this key can be sent to the trusted enclave.
      </param>
      <param name="signature">
        The master key metadata signature.
      </param>
      <summary>
        This function must be implemented by the corresponding Key Store providers. This function should use an asymmetric key identified by a key path and verify the masterkey metadata consisting of (masterKeyPath, allowEnclaveComputations, providerName).
      </summary>
      <returns>
        A Boolean value that indicates if the master key metadata can be verified based on the provided signature.
      </returns>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlColumnEncryptionCngProvider">
      <summary>
        The CMK Store provider implementation for using the Microsoft Cryptography API: Next Generation (CNG) with <see href="https://learn.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlColumnEncryptionCngProvider.ProviderName">
      <summary>
        A constant string for the provider name <c>MSSQL_CNG_STORE</c>&gt;.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlColumnEncryptionCngProvider.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlColumnEncryptionCngProvider" /> class.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])">
      <param name="masterKeyPath">
        The master key path.
      </param>
      <param name="encryptionAlgorithm">
        The encryption algorithm.
      </param>
      <param name="encryptedColumnEncryptionKey">
        The encrypted column encryption key.
      </param>
      <summary>
        Decrypts the given encrypted value using an asymmetric key specified by the key path and the specified algorithm. The key path will be in the format of <c>[ProviderName]/KeyIdentifier</c> and should be an asymmetric key stored in the specified CNG key store provider. The valid algorithm used to encrypt/decrypt the CEK is <c>RSA_OAEP</c>.
      </summary>
      <returns>
        The decrypted column encryption key.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])">
      <param name="masterKeyPath">
        The master key path.
      </param>
      <param name="encryptionAlgorithm">
        The encryption algorithm.
      </param>
      <param name="columnEncryptionKey">
        The plaintext column encryption key.
      </param>
      <summary>
        Encrypts the given plain text column encryption key using an asymmetric key specified by the key path and the specified algorithm. The key path will be in the format of <c>[ProviderName]/KeyIdentifier</c> and should be an asymmetric key stored in the specified CNG key store provider. The valid algorithm used to encrypt/decrypt the CEK is <c>RSA_OAEP</c>.
      </summary>
      <returns>
        The encrypted column encryption key.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)">
      <param name="masterKeyPath">
        The column master key path. The path format is specific to a key store provider.
      </param>
      <param name="allowEnclaveComputations">
        <see langword="true" /> to indicate that the column master key supports enclave computations; otherwise, <see langword="false" />.
      </param>
      <summary>
        Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.
      </summary>
      <returns>
        The signature of the column master key metadata.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlColumnEncryptionCngProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])">
      <param name="masterKeyPath">
        The complete path of an asymmetric key. The path format is specific to a key store provider.
      </param>
      <param name="allowEnclaveComputations">
        A Boolean that indicates if this key can be sent to the trusted enclave.
      </param>
      <param name="signature">
        The master key metadata signature.
      </param>
      <summary>
        This function must be implemented by the corresponding Key Store providers. This function should use an asymmetric key identified by a key path and verify the master key metadata consisting of (masterKeyPath, allowEnclaveComputations, providerName).
      </summary>
      <returns>
        A Boolean that indicates if the master key metadata can be verified based on the provided signature.
      </returns>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlColumnEncryptionCspProvider">
      <summary>
        The CMK Store provider implementation for using Microsoft CAPI based Cryptographic Service Providers (CSP) with <see href="https://learn.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlColumnEncryptionCspProvider.ProviderName">
      <summary>
        A constant string for the provider name <c>MSSQL_CSP_PROVIDER</c>.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlColumnEncryptionCspProvider.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlColumnEncryptionCspProvider" /> class.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlColumnEncryptionCspProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])">
      <param name="masterKeyPath">
        The master key path.
      </param>
      <param name="encryptionAlgorithm">
        The encryption algorithm.
      </param>
      <param name="encryptedColumnEncryptionKey">
        The encrypted column encryption key.
      </param>
      <summary>
        Decrypts the given encrypted value using an asymmetric key specified by the key path and algorithm. The key path will be in the format of <c>[ProviderName]/KeyIdentifier</c> and should be an asymmetric key stored in the specified CSP provider. The valid algorithm used to encrypt/decrypt the CEK is <c>RSA_OAEP</c>'.
      </summary>
      <returns>
        The decrypted column encryption key.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlColumnEncryptionCspProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])">
      <param name="masterKeyPath">
        The master key path.
      </param>
      <param name="encryptionAlgorithm">
        The encryption algorithm.
      </param>
      <param name="columnEncryptionKey">
        The plaintext column encryption key.
      </param>
      <summary>
        Encrypts the given plain text column encryption key using an asymmetric key specified by the key path and the specified algorithm. The key path will be in the format of <c>[ProviderName]/KeyIdentifier</c> and should be an asymmetric key stored in the specified CSP provider. The valid algorithm used to encrypt/decrypt the CEK is <c>RSA_OAEP</c>.
      </summary>
      <returns>
        The encrypted column encryption key.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlColumnEncryptionCspProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)">
      <param name="masterKeyPath">
        The column master key path. The path format is specific to a key store provider.
      </param>
      <param name="allowEnclaveComputations">
        <see langword="true" /> to indicate that the column master key supports enclave computations; otherwise, <see langword="false" />.
      </param>
      <summary>
        Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.
      </summary>
      <returns>
        The signature of the column master key metadata.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlColumnEncryptionCspProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])">
      <param name="masterKeyPath">
        The complete path of an asymmetric key. The path format is specific to a key store provider.
      </param>
      <param name="allowEnclaveComputations">
        A boolean that indicates if this key can be sent to the trusted enclave.
      </param>
      <param name="signature">
        Master key metadata signature.
      </param>
      <summary>
        This function must be implemented by the corresponding Key Store providers. This function should use an asymmetric key identified by a key path and sign the masterkey metadata consisting of (<paramref name="masterKeyPath" />, <paramref name="allowEnclaveComputations" />, <see cref="P:Microsoft.Data.SqlClient.SqlColumnEncryptionCspProvider.ProviderName" />).
      </summary>
      <returns>
        A Boolean that indicates if the master key metadata can be verified based on the provided signature.
      </returns>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider">
      <summary>
        Base class for all key store providers. A custom provider must derive from this class and override its member functions and then register it using <see cref="M:Microsoft.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,Microsoft.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})" />, <see cref="M:Microsoft.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProvidersOnConnection(System.Collections.Generic.IDictionary{System.String,Microsoft.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})" /> or <see cref="M:Microsoft.Data.SqlClient.SqlCommand.RegisterColumnEncryptionKeyStoreProvidersOnCommand(System.Collections.Generic.IDictionary{System.String,Microsoft.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})" />. For details see, <see href="https://learn.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])">
      <param name="masterKeyPath">
        The master key path.
      </param>
      <param name="encryptionAlgorithm">
        The encryption algorithm.
      </param>
      <param name="encryptedColumnEncryptionKey">
        The encrypted column encryption key.
      </param>
      <summary>
        Decrypts the specified encrypted value of a column encryption key. The encrypted value is expected to be encrypted using the column master key with the specified key path and using the specified algorithm.
      </summary>
      <returns>
        Returns <see cref="T:System.Byte" />. The decrypted column encryption key.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])">
      <param name="masterKeyPath">
        The master key path.
      </param>
      <param name="encryptionAlgorithm">
        The encryption algorithm.
      </param>
      <param name="columnEncryptionKey">
        The plaintext column encryption key.
      </param>
      <summary>
        Encrypts a column encryption key using the column master key with the specified key path and using the specified algorithm.
      </summary>
      <returns>
        Returns <see cref="T:System.Byte" />. The encrypted column encryption key.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)">
      <param name="masterKeyPath">
        The column master key path.
      </param>
      <param name="allowEnclaveComputations">
        <see langword="true" /> to indicate that the column master key supports enclave computations; otherwise, <see langword="false" />.
      </param>
      <summary>
        When implemented in a derived class, digitally signs the column master key metadata with the column master key referenced by the <paramref name="masterKeyPath" /> parameter. The input values used to generate the signature should be the specified values of the <paramref name="masterKeyPath" /> and <paramref name="allowEnclaveComputations" /> parameters.
      </summary>
      <returns>
        The signature of the column master key metadata.
      </returns>
      <exception cref="T:System.NotImplementedException">
        In all cases.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])">
      <param name="masterKeyPath">
        The column master key path.
      </param>
      <param name="allowEnclaveComputations">
        Indicates whether the column master key supports enclave computations.
      </param>
      <param name="signature">
        The signature of the column master key metadata.
      </param>
      <summary>
        When implemented in a derived class, this method is expected to verify the specified signature is valid for the column master key with the specified key path and the specified enclave behavior. The default implementation throws `NotImplementedException`.
      </summary>
      <returns>
        When implemented in a derived class, the method is expected to return true if the specified signature is valid, or false if the specified signature is not valid. The default implementation throws `NotImplementedException`.
      </returns>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.ColumnEncryptionKeyCacheTtl">
      <summary>
        Gets or sets the lifespan of the decrypted column encryption key in the cache. Once the timespan has elapsed, the decrypted column encryption key is discarded and must be revalidated.
      </summary>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlCommand">
      <summary>
        Represents a Transact-SQL statement or stored procedure to execute against a SQL Server database. This class cannot be inherited.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> class.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.#ctor(System.String)">
      <param name="cmdText">
        The text of the query.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> class with the text of the query.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.#ctor(System.String,Microsoft.Data.SqlClient.SqlConnection)">
      <param name="cmdText">
        The text of the query.
      </param>
      <param name="connection">
        A <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> that represents the connection to an instance of SQL Server.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> class with the text of the query and a <see cref="T:Microsoft.Data.SqlClient.SqlConnection" />.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.#ctor(System.String,Microsoft.Data.SqlClient.SqlConnection,Microsoft.Data.SqlClient.SqlTransaction)">
      <param name="cmdText">
        The text of the query.
      </param>
      <param name="connection">
        A <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> that represents the connection to an instance of SQL Server.
      </param>
      <param name="transaction">
        The <see cref="T:Microsoft.Data.SqlClient.SqlTransaction" /> in which the <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> executes.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> class with the text of the query, a <see cref="T:Microsoft.Data.SqlClient.SqlConnection" />, and the <see cref="T:Microsoft.Data.SqlClient.SqlTransaction" />.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.#ctor(System.String,Microsoft.Data.SqlClient.SqlConnection,Microsoft.Data.SqlClient.SqlTransaction,Microsoft.Data.SqlClient.SqlCommandColumnEncryptionSetting)">
      <param name="cmdText">
        The text of the query.
      </param>
      <param name="connection">
        A <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> that represents the connection to an instance of SQL Server.
      </param>
      <param name="transaction">
        The <see cref="T:Microsoft.Data.SqlClient.SqlTransaction" /> in which the <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> executes.
      </param>
      <param name="columnEncryptionSetting">
        The encryption setting. For more information, see <see href="https://learn.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> class with specified command text, connection, transaction, and encryption setting.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommand.ColumnEncryptionSetting">
      <summary>
        Gets the column encryption setting for this command.
      </summary>
      <value>
        The column encryption setting for this command.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommand.CommandText">
      <summary>
        Gets or sets the Transact-SQL statement, table name or stored procedure to execute at the data source.
      </summary>
      <value>
        The Transact-SQL statement or stored procedure to execute. The default is an empty string.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommand.CommandTimeout">
      <summary>
        Gets or sets the wait time (in seconds) before terminating the attempt to execute a command and generating an error. The default is 30 seconds.
      </summary>
      <value>
        The time in seconds to wait for the command to execute. The default is 30 seconds.
      </value>
      <exception cref="T:System.ArgumentException">
        The value set is less than 0.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommand.CommandType">
      <summary>
        Gets or sets a value indicating how the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.CommandText" /> property is to be interpreted.
      </summary>
      <value>
        One of the <see cref="T:System.Data.CommandType" /> values. The default is <see langword="Text" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommand.Connection">
      <summary>
        Gets or sets the <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> used by this instance of the <see cref="T:Microsoft.Data.SqlClient.SqlCommand" />.
      </summary>
      <value>
        The connection to a data source. The default value is <see langword="null" />.
      </value>
      <exception cref="T:System.InvalidOperationException">
        The <see cref="P:Microsoft.Data.SqlClient.SqlCommand.Connection" /> property was changed while the command was enlisted in a transaction.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommand.DbConnection">
      <summary>
        To be added.
      </summary>
      <value>
        To be added.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommand.DbParameterCollection">
      <summary>
        Gets the collection of <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> objects.
      </summary>
      <value>
        The parameters of the SQL statement or stored procedure.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommand.DbTransaction">
      <summary>
        To be added.
      </summary>
      <value>
        To be added.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommand.DesignTimeVisible">
      <summary>
        Gets or sets a value indicating whether the command object should be visible in a Windows Form Designer control.
      </summary>
      <value>
        A value indicating whether the command object should be visible in a control. The default is <see langword="true" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommand.EnableOptimizedParameterBinding">
      <summary>
        Gets or sets a value indicating whether the command object should optimize parameter performance by disabling Output and InputOutput directions when submitting the command to the SQL Server. <br /> This option is only used when the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.CommandType" /> is <see cref="F:System.Data.CommandType.Text" /> otherwise it is ignored.
      </summary>
      <value>
        A value indicating whether the command object should optimize parameter performance by disabling Output and InputOutput parameter directions when submitting the command to the SQL Server. The default is <see langword="false" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommand.Parameters">
      <summary>
        Gets the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </summary>
      <value>
        The parameters of the Transact-SQL statement or stored procedure. The default is an empty collection.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommand.Transaction">
      <summary>
        Gets or sets the <see cref="T:Microsoft.Data.SqlClient.SqlTransaction" /> within which the <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> executes.
      </summary>
      <value>
        The <see cref="T:Microsoft.Data.SqlClient.SqlTransaction" />. The default value is <see langword="null" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommand.UpdatedRowSource">
      <summary>
        Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the <c>Update</c> method of the <see cref="T:System.Data.Common.DbDataAdapter" />.
      </summary>
      <value>
        One of the <see cref="T:System.Data.UpdateRowSource" /> values.
      </value>
    </member>
    <member name="E:Microsoft.Data.SqlClient.SqlCommand.StatementCompleted">
      <summary>
        Occurs when the execution of a Transact-SQL statement completes.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
      <summary>
        Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:Microsoft.Data.SqlClient.SqlCommand" />.
      </summary>
      <returns>
        An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:Microsoft.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />, which returns the number of affected rows.
      </returns>
      <exception cref="T:System.InvalidCastException">
        <list type="bullet">
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Binary</c> or <c>VarBinary</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Char</c>, <c>NChar</c>, <c>NVarChar</c>, <c>VarChar</c>, or <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.
          </item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        <list type="bullet">
          <item>
            Any error that occurred while executing the command text.
          </item>
          <item>
            A timeout occurred during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>
            The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            <see cref="P:Microsoft.Data.SqlClient.SqlCommand.EnableOptimizedParameterBinding" /> is set to true and a parameter with direction Output or InputOutput has been added to the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.Parameters" /> collection.
          </item>
        </list>
      </exception>
      <exception cref="T:System.IO.IOException">
        An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.ObjectDisposedException">
        The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
      <param name="callback">
        An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the command's execution has completed. Pass <see langword="null" /> (<see langword="Nothing" /> in Microsoft Visual Basic) to indicate that no callback is required.
      </param>
      <param name="stateObject">
        A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the <see cref="P:System.IAsyncResult.AsyncState" /> property.
      </param>
      <summary>
        Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:Microsoft.Data.SqlClient.SqlCommand" />, given a callback procedure and state information.
      </summary>
      <returns>
        An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:Microsoft.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />, which returns the number of affected rows.
      </returns>
      <exception cref="T:System.InvalidCastException">
        <list type="bullet">
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Binary</c> or <c>VarBinary</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Char</c>, <c>NChar</c>, <c>NVarChar</c>, <c>VarChar</c>, or <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.
          </item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        <list type="bullet">
          <item>
            Any error that occurred while executing the command text.
          </item>
          <item>
            A timeout occurred during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>
            The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            <see cref="P:Microsoft.Data.SqlClient.SqlCommand.EnableOptimizedParameterBinding" /> is set to true and a parameter with direction Output or InputOutput has been added to the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.Parameters" /> collection.
          </item>
        </list>
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.BeginExecuteReader">
      <summary>
        Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:Microsoft.Data.SqlClient.SqlCommand" />, and retrieves one or more result sets from the server.
      </summary>
      <returns>
        An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:Microsoft.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, which returns a <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> instance that can be used to retrieve the returned rows.
      </returns>
      <exception cref="T:System.InvalidCastException">
        <list type="bullet">
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Binary</c> or <c>VarBinary</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Char</c>, <c>NChar</c>, <c>NVarChar</c>, <c>VarChar</c>, or <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.
          </item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        <list type="bullet">
          <item>
            Any error that occurred while executing the command text.
          </item>
          <item>
            A timeout occurred during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>
            The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            <see cref="P:Microsoft.Data.SqlClient.SqlCommand.EnableOptimizedParameterBinding" /> is set to true and a parameter with direction Output or InputOutput has been added to the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.Parameters" /> collection.
          </item>
        </list>
      </exception>
      <exception cref="T:System.IO.IOException">
        An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.ObjectDisposedException">
        The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
      <!-- No matching elements were found for the following include tag -->
      <include file="../../../../doc/snippets/Microsoft.Data.SqlClient/SqlCommand.xml" path="docs/members[@name=&quot;SqlCommand&quot;]/BeginExecuteReader[@name=&quot;AsyncCallbackAndstateObject&quot;]/*" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
      <!-- No matching elements were found for the following include tag -->
      <include file="../../../../doc/snippets/Microsoft.Data.SqlClient/SqlCommand.xml" path="docs/members[@name=&quot;SqlCommand&quot;]/BeginExecuteReader[@name=&quot;AsyncCallbackAndstateObjectAndCommandBehavior&quot;]/*" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
      <param name="behavior">
        One of the <see cref="T:System.Data.CommandBehavior" /> values, indicating options for statement execution and data retrieval.
      </param>
      <summary>
        Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.
      </summary>
      <returns>
        An <see cref="T:System.IAsyncResult" /> that can be used to poll, wait for results, or both; this value is also needed when invoking <see cref="M:Microsoft.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, which returns a <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> instance that can be used to retrieve the returned rows.
      </returns>
      <exception cref="T:System.InvalidCastException">
        <list type="bullet">
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Binary</c> or <c>VarBinary</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Char</c>, <c>NChar</c>, <c>NVarChar</c>, <c>VarChar</c>, or <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.
          </item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        <list type="bullet">
          <item>
            Any error that occurred while executing the command text.
          </item>
          <item>
            A timeout occurred during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>
            The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            <see cref="P:Microsoft.Data.SqlClient.SqlCommand.EnableOptimizedParameterBinding" /> is set to true and a parameter with direction Output or InputOutput has been added to the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.Parameters" /> collection.
          </item>
        </list>
      </exception>
      <exception cref="T:System.IO.IOException">
        An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.ObjectDisposedException">
        The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
      <summary>
        Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> and returns results as an <see cref="T:System.Xml.XmlReader" /> object.
      </summary>
      <returns>
        An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see langword="EndExecuteXmlReader" />, which returns a single XML value.
      </returns>
      <exception cref="T:System.InvalidCastException">
        <list type="bullet">
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Binary</c> or <c>VarBinary</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Char</c>, <c>NChar</c>, <c>NVarChar</c>, <c>VarChar</c>, or <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.
          </item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        <list type="bullet">
          <item>
            Any error that occurred while executing the command text.
          </item>
          <item>
            A timeout occurred during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>
            The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            <see cref="P:Microsoft.Data.SqlClient.SqlCommand.EnableOptimizedParameterBinding" /> is set to true and a parameter with direction Output or InputOutput has been added to the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.Parameters" /> collection.
          </item>
        </list>
      </exception>
      <exception cref="T:System.IO.IOException">
        An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.ObjectDisposedException">
        The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
      <!-- No matching elements were found for the following include tag -->
      <include file="../../../../doc/snippets/Microsoft.Data.SqlClient/SqlCommand.xml" path="docs/members[@name=&quot;SqlCommand&quot;]/BeginExecuteXmlReader[@name=&quot;AsyncCallbackAndstateObject&quot;]/*" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.Cancel">
      <summary>
        Tries to cancel the execution of a <see cref="T:Microsoft.Data.SqlClient.SqlCommand" />.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.Clone">
      <summary>
        Creates a new <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object that is a copy of the current instance.
      </summary>
      <returns>
        A new <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object that is a copy of this instance.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.CreateDbParameter">
      <summary>
        To be added.
      </summary>
      <returns>
        To be added.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.CreateParameter">
      <summary>
        Creates a new instance of a <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object.
      </summary>
      <returns>
        A <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.Dispose(System.Boolean)">
      <param name="disposing">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
      <param name="asyncResult">
        The <see cref="T:System.IAsyncResult" /> returned by the call to <see cref="M:Microsoft.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />.
      </param>
      <summary>
        Finishes asynchronous execution of a Transact-SQL statement.
      </summary>
      <returns>
        The number of rows affected (the same behavior as <see cref="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteNonQuery" />).
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> parameter is null (<see langword="Nothing" /> in Microsoft Visual Basic)
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Microsoft.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <see cref="M:Microsoft.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> to complete execution of a call to <see cref="M:Microsoft.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />.
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        <list type="bullet">
          <item>
            The amount of time specified in <see cref="P:Microsoft.Data.SqlClient.SqlCommand.CommandTimeout" /> elapsed and the asynchronous operation specified with <see cref="M:Microsoft.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> is not complete.
          </item>
          <item>
            In some situations, <see cref="T:System.IAsyncResult" /> can set <see cref="P:System.IAsyncResult.IsCompleted" /> incorrectly. If this occurs and <see cref="M:Microsoft.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> is called, EndExecuteNonQuery could raise a SqlException error if the amount of time specified in <see cref="P:Microsoft.Data.SqlClient.SqlCommand.CommandTimeout" /> elapsed and the asynchronous operation specified with <see cref="M:Microsoft.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> is not complete. To correct this situation, you should either increase the value of CommandTimeout or reduce the work being done by the asynchronous operation.
          </item>
        </list>
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
      <!-- No matching elements were found for the following include tag -->
      <include file="../../../../doc/snippets/Microsoft.Data.SqlClient/SqlCommand.xml" path="docs/members[@name=&quot;SqlCommand&quot;]/EndExecuteReader[@name=&quot;IAsyncResult2&quot;]/*" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
      <param name="asyncResult">
        The <see cref="T:System.IAsyncResult" /> returned by the call to <see cref="M:Microsoft.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />.
      </param>
      <summary>
        Finishes asynchronous execution of a Transact-SQL statement, returning the requested data as XML.
      </summary>
      <returns>
        An <see cref="T:System.Xml.XmlReader" /> object that can be used to fetch the resulting XML data.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> parameter is null (<see langword="Nothing" /> in Microsoft Visual Basic)
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Microsoft.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <see cref="M:Microsoft.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> to complete execution of a call to <see cref="M:Microsoft.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
      <param name="behavior">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
      <returns>
        To be added.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <param name="behavior">
        To be added.
      </param>
      <param name="cancellationToken">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
      <returns>
        To be added.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteNonQuery">
      <summary>
        Executes a Transact-SQL statement against the connection and returns the number of rows affected.
      </summary>
      <returns>
        The number of rows affected.
      </returns>
      <exception cref="T:System.InvalidCastException">
        <list type="bullet">
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Binary</c> or <c>VarBinary</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Char</c>, <c>NChar</c>, <c>NVarChar</c>, <c>VarChar</c>, or <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.
          </item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        <list type="bullet">
          <item>
            An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.
          </item>
          <item>
            A timeout occurred during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:System.IO.IOException">
        An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.InvalidOperationException">
        The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.ObjectDisposedException">
        The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <param name="cancellationToken">
        The cancellation instruction.
      </param>
      <summary>
        An asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteNonQuery" />, which executes a Transact-SQL statement against the connection and returns the number of rows affected. The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidCastException">
        <list type="bullet">
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Binary</c> or <c>VarBinary</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Char</c>, <c>NChar</c>, <c>NVarChar</c>, <c>VarChar</c>, or <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.
          </item>
        </list>
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>
            Calling <see cref="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.
          </item>
          <item>
            The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        <list type="bullet">
          <item>
            SQL Server returned an error while executing the command text.
          </item>
          <item>
            A timeout occurred during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:System.IO.IOException">
        An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.ObjectDisposedException">
        The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteReader">
      <summary>
        Sends the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.Connection" /> and builds a <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" />.
      </summary>
      <returns>
        A <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> object.
      </returns>
      <exception cref="T:System.InvalidCastException">
        <list type="bullet">
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Binary</c> or <c>VarBinary</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Char</c>, <c>NChar</c>, <c>NVarChar</c>, <c>VarChar</c>, or <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.
          </item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        <list type="bullet">
          <item>
            An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.
          </item>
          <item>
            A timeout occurred during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>
            The current state of the connection is closed. <see cref="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteReader" /> requires an open <see cref="T:Microsoft.Data.SqlClient.SqlConnection" />.
          </item>
          <item>
            The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:System.IO.IOException">
        An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.ObjectDisposedException">
        The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
      <param name="behavior">
        One of the <see cref="T:System.Data.CommandBehavior" /> values.
      </param>
      <summary>
        Sends the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.Connection" />, and builds a <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.
      </summary>
      <returns>
        A <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> object.
      </returns>
      <exception cref="T:System.InvalidCastException">
        <list type-="bullet">
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Binary</c> or <c>VarBinary</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Char</c>, <c>NChar</c>, <c>NVarChar</c>, <c>VarChar</c>, or <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.
          </item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        A timeout occurred during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.IO.IOException">
        An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.InvalidOperationException">
        The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.ObjectDisposedException">
        The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
      <summary>
        An asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteReader" />, which sends the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.Connection" /> and builds a <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" />. Exceptions will be reported via the returned Task object.
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidCastException">
        <list type="bullet">
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Binary</c> or <c>VarBinary</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Char</c>, <c>NChar</c>, <c>NVarChar</c>, <c>VarChar</c>, or <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.
          </item>
        </list>
      </exception>
      <exception cref="T:System.ArgumentException">
        An invalid <see cref="T:System.Data.CommandBehavior" /> value.
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>
            Calling <see cref="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteReaderAsync" /> more than once for the same instance before task completion.
          </item>
          <item>
            The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        <list type="bullet">
          <item>
            SQL Server returned an error while executing the command text.
          </item>
          <item>
            A timeout occurred during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:System.IO.IOException">
        An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.ObjectDisposedException">
        The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
      <param name="behavior">
        Options for statement execution and data retrieval. When is set to <see langword="Default" />, <see cref="M:Microsoft.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> reads the entire row before returning a complete Task.
      </param>
      <summary>
        An asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />, which sends the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.Connection" />, and builds a <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" />. Exceptions will be reported via the returned Task object.
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidCastException">
        <list type="bullet">
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Binary</c> or <c>VarBinary</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Char</c>, <c>NChar</c>, <c>NVarChar</c>, <c>VarChar</c>, or <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.
          </item>
        </list>
      </exception>
      <exception cref="T:System.ArgumentException">
        An invalid <see cref="T:System.Data.CommandBehavior" /> value.
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>
            Calling <see cref="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" /> more than once for the same instance before task completion.
          </item>
          <item>
            <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        <list type="bullet">
          <item>
            SQL Server returned an error while executing the command text.
          </item>
          <item>
            A timeout occurred during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:System.IO.IOException">
        An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.ObjectDisposedException">
        The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <param name="behavior">
        Options for statement execution and data retrieval. When is set to <see langword="Default" />, <see cref="M:Microsoft.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> reads the entire row before returning a complete Task.
      </param>
      <param name="cancellationToken">
        The cancellation instruction.
      </param>
      <summary>
        An asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />, which sends the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.Connection" />, and builds a <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidCastException">
        <list type="bullet">
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Binary</c> or <c>VarBinary</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Char</c>, <c>NChar</c>, <c>NVarChar</c>, <c>VarChar</c>, or <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.
          </item>
        </list>
      </exception>
      <exception cref="T:System.ArgumentException">
        An invalid <see cref="T:System.Data.CommandBehavior" /> value.
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>
            Calling <see cref="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> more than once for the same instance before task completion.
          </item>
          <item>
            The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        <list type="bullet">
          <item>
            SQL Server returned an error while executing the command text.
          </item>
          <item>
            A timeout occurred during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:System.IO.IOException">
        An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.ObjectDisposedException">
        The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <param name="cancellationToken">
        The cancellation instruction.
      </param>
      <summary>
        An asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteReader" />, which sends the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.Connection" /> and builds a <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" />. The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidCastException">
        <list type="bullet">
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Binary</c> or <c>VarBinary</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Char</c>, <c>NChar</c>, <c>NVarChar</c>, <c>VarChar</c>, or <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.
          </item>
        </list>
      </exception>
      <exception cref="T:System.ArgumentException">
        An invalid <see cref="T:System.Data.CommandBehavior" /> value.
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>
            Calling <see cref="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> more than once for the same instance before task completion.
          </item>
          <item>
            The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        <list type="bullet">
          <item>
            SQL Server returned an error while executing the command text.
          </item>
          <item>
            A timeout occurred during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:System.IO.IOException">
        An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.ObjectDisposedException">
        The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteScalar">
      <summary>
        Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
      </summary>
      <returns>
        The first column of the first row in the result set, or a null reference (<see langword="Nothing" /> in Visual Basic) if the result set is empty. Returns a maximum of 2033 characters.
      </returns>
      <exception cref="T:System.InvalidCastException">
        <list type="bullet">
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Binary</c> or <c>VarBinary</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Char</c>, <c>NChar</c>, <c>NVarChar</c>, <c>VarChar</c>, or <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.
          </item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        <list type="bullet">
          <item>
            An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.
          </item>
          <item>
            A timeout occurred during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:System.InvalidOperationException">
        The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.IO.IOException">
        An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.ObjectDisposedException">
        The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
      <param name="cancellationToken">
        The cancellation instruction.
      </param>
      <summary>
        An asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteScalar" />, which executes the query asynchronously and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored. The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidCastException">
        <list type="bullet">
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Binary</c> or <c>VarBinary</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Char</c>, <c>NChar</c>, <c>NVarChar</c>, <c>VarChar</c>, or <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.
          </item>
        </list>
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>
            Calling <see cref="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.
          </item>
          <item>
            The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        <list type="bullet">
          <item>
            SQL Server returned an error while executing the command text.
          </item>
          <item>
            A timeout occurred during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:System.IO.IOException">
        An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.ObjectDisposedException">
        The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteXmlReader">
      <summary>
        Sends the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.Connection" /> and builds an <see cref="T:System.Xml.XmlReader" /> object.
      </summary>
      <returns>
        An <see cref="T:System.Xml.XmlReader" /> object.
      </returns>
      <exception cref="T:System.InvalidCastException">
        <list type="bullet">
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Binary</c> or <c>VarBinary</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Char</c>, <c>NChar</c>, <c>NVarChar</c>, <c>VarChar</c>, or <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.
          </item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        <list type="bullet">
          <item>
            An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.
          </item>
          <item>
            A timeout occurred during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:System.InvalidOperationException">
        The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.IO.IOException">
        An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.ObjectDisposedException">
        The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
      <summary>
        An asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteXmlReader" />, which sends the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.Connection" /> and builds an <see cref="T:System.Xml.XmlReader" /> object.
        Exceptions will be reported via the returned Task object.
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidCastException">
        <list type="bullet">
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Binary</c> or <c>VarBinary</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Char</c>, <c>NChar</c>, <c>NVarChar</c>, <c>VarChar</c>, or <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.
          </item>
        </list>
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>
            Calling <see cref="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.
          </item>
          <item>
            The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        <list type="bullet">
          <item>
            SQL Server returned an error while executing the command text.
          </item>
          <item>
            A timeout occurred during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:System.IO.IOException">
        An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.ObjectDisposedException">
        The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
      <param name="cancellationToken">
        The cancellation instruction.
      </param>
      <summary>
        An asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteXmlReader" />, which sends the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.Connection" /> and builds an <see cref="T:System.Xml.XmlReader" /> object. The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidCastException">
        <list type="bullet">
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Binary</c> or <c>VarBinary</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Char</c>, <c>NChar</c>, <c>NVarChar</c>, <c>VarChar</c>, or <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.
          </item>
          <item>
            A <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType" /> other than <c>Xml</c> was used when <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.
          </item>
        </list>
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>
            Calling <see cref="M:Microsoft.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.
          </item>
          <item>
            The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        <list type="bullet">
          <item>
            SQL Server returned an error while executing the command text.
          </item>
          <item>
            A timeout occurred during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
          </item>
        </list>
      </exception>
      <exception cref="T:System.IO.IOException">
        An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
      <exception cref="T:System.ObjectDisposedException">
        The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation. For more information about streaming, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sqlclient-streaming-support">SqlClient Streaming Support</see>.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.Prepare">
      <summary>
        Creates a prepared version of the command on an instance of SQL Server.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommand.Notification">
      <summary>
        Gets or sets a value that specifies the <see cref="T:Microsoft.Data.Sql.SqlNotificationRequest" /> object bound to this command.
      </summary>
      <value>
        When set to null (default), no notification should be requested.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
      <summary>
        Gets or sets a value indicating whether the application should automatically receive query notifications from a common <see cref="T:Microsoft.Data.SqlClient.SqlDependency" /> object.
      </summary>
      <value>
        <see langword="true" /> if the application should automatically receive query notifications; otherwise <see langword="false" />. The default value is <see langword="true" />.</value>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.RegisterColumnEncryptionKeyStoreProvidersOnCommand(System.Collections.Generic.IDictionary{System.String,Microsoft.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})">
      <param name="customProviders">
        Dictionary of custom column encryption key providers
      </param>
      <summary>
        Registers the encryption key store providers on the <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> instance. If this function has been called, any providers registered using the <see cref="M:Microsoft.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,Microsoft.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})" /> or <see cref="M:Microsoft.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProvidersOnConnection(System.Collections.Generic.IDictionary{System.String,Microsoft.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})" /> methods will be ignored. This function can be called more than once. This does shallow copying of the dictionary so that the app cannot alter the custom provider list once it has been set.
      </summary>
      <exception cref="T:System.ArgumentNullException">
        <list type="bullet">
          <item>A null dictionary was provided.</item>
          <item>A string key in the dictionary was null or empty.</item>
          <item>
            A <see cref="T:Microsoft.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" /> value in the dictionary was null.
          </item>
        </list>
      </exception>
      <exception cref="T:System.ArgumentException">
        A string key in the dictionary started with "MSSQL_". This prefix is reserved for system providers.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommand.ResetCommandTimeout">
      <summary>
        Resets the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.CommandTimeout" /> property to its default value.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommand.RetryLogicProvider">
      <summary>
        Gets or sets a value that specifies the <see cref="T:Microsoft.Data.SqlClient.SqlRetryLogicBaseProvider" /> object bound to this command.
      </summary>
      <value>
        When set to null (default), the default non-retryable provider will be used.
      </value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlCommandBuilder">
      <summary>
        Automatically generates single-table commands that are used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated SQL Server database. This class cannot be inherited.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommandBuilder.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlCommandBuilder" /> class.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommandBuilder.#ctor(Microsoft.Data.SqlClient.SqlDataAdapter)">
      <param name="adapter">
        The name of the <see cref="T:Microsoft.Data.SqlClient.SqlDataAdapter" />.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlCommandBuilder" /> class with the associated <see cref="T:Microsoft.Data.SqlClient.SqlDataAdapter" /> object.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommandBuilder.CatalogLocation">
      <summary>
        Sets or gets the <see cref="T:System.Data.Common.CatalogLocation" /> for an instance of the <see cref="T:Microsoft.Data.SqlClient.SqlCommandBuilder" /> class.
      </summary>
      <value>
        A <see cref="T:System.Data.Common.CatalogLocation" /> object.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommandBuilder.CatalogSeparator">
      <summary>
        Sets or gets a string used as the catalog separator for an instance of the <see cref="T:Microsoft.Data.SqlClient.SqlCommandBuilder" /> class.
      </summary>
      <value>
        A string that indicates the catalog separator for use with an instance of the <see cref="T:Microsoft.Data.SqlClient.SqlCommandBuilder" /> class.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommandBuilder.DataAdapter">
      <summary>
        Gets or sets a <see cref="T:Microsoft.Data.SqlClient.SqlDataAdapter" /> object for which Transact-SQL statements are automatically generated.
      </summary>
      <value>
        A <see cref="T:Microsoft.Data.SqlClient.SqlDataAdapter" /> object.
      </value>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommandBuilder.DeriveParameters(Microsoft.Data.SqlClient.SqlCommand)">
      <param name="command">
        The <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> referencing the stored procedure from which the parameter information is to be derived. The derived parameters are added to the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.Parameters" /> collection of the <see cref="T:Microsoft.Data.SqlClient.SqlCommand" />.
      </param>
      <summary>
        Retrieves parameter information from the stored procedure specified in the <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> and populates the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.Parameters" /> collection of the specified <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object.
      </summary>
      <exception cref="T:System.InvalidOperationException">
        The command text is not a valid stored procedure name.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
      <summary>
        Gets or sets the starting character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.
      </summary>
      <value>
        The starting character or characters to use. The default is an empty string.
      </value>
      <exception cref="T:System.InvalidOperationException">
        This property cannot be changed after an INSERT, UPDATE, or DELETE command has been generated.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
      <summary>
        Gets or sets the ending character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.
      </summary>
      <value>
        The ending character or characters to use. The default is an empty string.
      </value>
      <exception cref="T:System.InvalidOperationException">
        This property cannot be changed after an insert, update, or delete command has been generated.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
      <summary>
        Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.
      </summary>
      <value>
        The character to be used as the schema separator.
      </value>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
      <param name="parameter">
        To be added.
      </param>
      <param name="datarow">
        To be added.
      </param>
      <param name="statementType">
        To be added.
      </param>
      <param name="whereClause">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
      <summary>
        Gets the automatically generated <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object required to perform deletions on the database.
      </summary>
      <returns>
        The automatically generated <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object required to perform deletions.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
      <param name="useColumnsForParameterNames">
        If <see langword="true" />, generate parameter names matching column names if possible. If <see langword="false" />, generate <c>@p1</c>, <c>@p2</c>, and so on.
      </param>
      <summary>
        Gets the automatically generated <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object that is required to perform deletions on the database.
      </summary>
      <returns>
        The automatically generated <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object that is required to perform deletions.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
      <summary>
        Gets the automatically generated <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object required to perform insertions on the database.
      </summary>
      <returns>
        The automatically generated <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object required to perform insertions.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
      <param name="useColumnsForParameterNames">
        If <see langword="true" />, generate parameter names matching column names if possible. If <see langword="false" />, generate <c>@p1</c>, <c>@p2</c>, and so on.
      </param>
      <summary>
        Gets the automatically generated <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object that is required to perform insertions on the database.
      </summary>
      <returns>
        The automatically generated <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object that is required to perform insertions.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.Int32)">
      <param name="parameterOrdinal">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
      <returns>
        To be added.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.String)">
      <param name="parameterName">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
      <returns>
        To be added.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder(System.Int32)">
      <param name="parameterOrdinal">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
      <returns>
        To be added.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
      <param name="srcCommand">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
      <returns>
        To be added.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
      <summary>
        Gets the automatically generated <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object required to perform updates on the database.
      </summary>
      <returns>
        The automatically generated <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object that is required to perform updates.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
      <param name="useColumnsForParameterNames">
        If <see langword="true" />, generate parameter names matching column names if possible. If <see langword="false" />, generate <c>@p1</c>, <c>@p2</c>, and so on.
      </param>
      <summary>
        Gets the automatically generated <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object required to perform updates on the database.
      </summary>
      <returns>
        The automatically generated <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object required to perform updates.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
      <param name="command">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
      <returns>
        To be added.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
      <param name="unquotedIdentifier">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
      <returns>
        To be added.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
      <param name="adapter">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)">
      <param name="quotedIdentifier">
        The identifier that will have its embedded quotes removed.
      </param>
      <summary>
        Given a quoted identifier, returns the correct unquoted form of that identifier. This includes correctly unescaping any embedded quotes in the identifier.
      </summary>
      <returns>
        The unquoted identifier, with embedded quotes properly unescaped.
      </returns>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/retrieving-modifying-data">
        Connecting and Retrieving Data in ADO.NET
      </seealso>
      <seealso type="Article" href="https://learn.microsoft.com/sql/connect/ado-net/sql/">
        Using the .NET Framework Data Provider for SQL Server
      </seealso>
      <seealso type="Article" href="https://learn.microsoft.com/sql/connect/ado-net/overview-sqlclient-driver">
        Overview of the SqlClient driver
      </seealso>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlCommandColumnEncryptionSetting">
      <summary>
        Note that these settings cannot be used to bypass encryption and gain access to plaintext data. For details, see <see href="https://learn.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted (Database Engine)</see>.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlCommandColumnEncryptionSetting.Disabled">
      <summary>
        Specifies the connection does not use Always Encrypted. Should be used if no queries sent over the connection access encrypted columns.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlCommandColumnEncryptionSetting.Enabled">
      <summary>
        Enables Always Encrypted for the query.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlCommandColumnEncryptionSetting.ResultSetOnly">
      <summary>
        Specifies that only the results of the command should be processed by the Always Encrypted routine in the driver. Use this value when the command has no parameters that require encryption.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlCommandColumnEncryptionSetting.UseConnectionSetting">
      <summary>
        Specifies that the command should default to the Always Encrypted setting in the connection string.
      </summary>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlConnection">
      <summary>
        Represents a connection to a SQL Server database. This class cannot be inherited.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> class.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)">
      <param name="connectionString">
        The connection used to open the SQL Server database.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> class when given a string that contains the connection string.
      </summary>
      <exception cref="T:System.ArgumentException">
        The supplied connection string argument failed <see cref="P:Microsoft.Data.SqlClient.SqlConnection.ConnectionString" /> validation.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String,Microsoft.Data.SqlClient.SqlCredential)">
      <param name="connectionString">
        A connection string that does not use any of the following connection string keywords: <c>Integrated Security = true</c>, <c>UserId</c>, or <c>Password</c>; or that does not use <c>ConnectionContext = true</c>.
      </param>
      <param name="credential">
        A <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> object. If <paramref name="credential" /> is null, <see cref="M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String,Microsoft.Data.SqlClient.SqlCredential)" /> is functionally equivalent to <see cref="M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)" />.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> class given a connection string, that does not use <c>Integrated Security = true</c> and a <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> object that contains the user ID and password.
      </summary>
      <exception cref="T:System.ArgumentException">
        The supplied arguments failed validation, including <see cref="P:Microsoft.Data.SqlClient.SqlConnection.ConnectionString" /> validation.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.AccessToken">
      <summary>
        Gets or sets the access token for the connection.
      </summary>
      <value>
        The access token for the connection.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.AccessTokenCallback">
      <summary>
        Gets or sets the access token callback for the connection.
      </summary>
      <value>
        The Func that takes a <see cref="T:Microsoft.Data.SqlClient.SqlAuthenticationParameters" /> and <see cref="T:System.Threading.CancellationToken" /> and returns a <see cref="T:Microsoft.Data.SqlClient.SqlAuthenticationToken" />.
      </value>
      <exception cref="T:System.InvalidOperationException">
        The <see cref="P:Microsoft.Data.SqlClient.SqlConnection.AccessTokenCallback" /> is combined with other conflicting authentication configurations.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.ClientConnectionId">
      <summary>
        The connection ID of the most recent connection attempt, regardless of whether the attempt succeeded or failed.
      </summary>
      <value>
        The connection ID of the most recent connection attempt.
      </value>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.System#ICloneable#Clone">
      <summary>
        Creates a new object that is a copy of the current instance.
      </summary>
      <returns>
        A new object that is a copy of this instance.
      </returns>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl">
      <summary>
        Gets or sets the time-to-live for column encryption key entries in the column encryption key cache for the <see href="https://learn.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see> feature. The default value is 2 hours. 0 means no caching at all.
      </summary>
      <value>
        The time interval.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled">
      <summary>
        Gets or sets a value that indicates whether query metadata caching is enabled (true) or not (false) for parameterized queries running against <see href="https://learn.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see> enabled databases. The default value is true.
      </summary>
      <value>
        Returns true if query metadata caching is enabled; otherwise false. true is the default.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths">
      <summary>
        Allows you to set a list of trusted key paths for a database server. If while processing an application query the driver receives a key path that is not on the list, the query will fail. This property provides additional protection against security attacks that involve a compromised SQL Server providing fake key paths, which may lead to leaking key store credentials.
      </summary>
      <value>
        The list of trusted master key paths for the column encryption.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.CommandTimeout">
      <summary>
        Gets the default wait time (in seconds) before terminating the attempt to execute a command and generating an error. The default is 30 seconds.
      </summary>
      <value>
        The time in seconds to wait for the command to execute. The default is 30 seconds.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.ConnectionString">
      <summary>
        Gets or sets the string used to open a SQL Server database.
      </summary>
      <value>
        The connection string that includes the source database name, and other parameters needed to establish the initial connection. The default value is an empty string.
      </value>
      <exception cref="T:System.ArgumentException">
        An invalid connection string argument has been supplied, or a required connection string argument has not been supplied.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.ConnectionTimeout">
      <summary>
        Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.
      </summary>
      <value>
        The time (in seconds) to wait for a connection to open. The default value is 15 seconds.
      </value>
      <exception cref="T:System.ArgumentException">
        The value set is less than 0.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.Credential">
      <summary>
        Gets or sets the <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> object for this connection.
      </summary>
      <value>
        The <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> object for this connection.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.Database">
      <summary>
        Gets the name of the current database or the database to be used after a connection is opened.
      </summary>
      <value>
        The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.DataSource">
      <summary>
        Gets the name of the instance of SQL Server to which to connect.
      </summary>
      <value>
        The name of the instance of SQL Server to which to connect. The default value is an empty string.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.DbProviderFactory">
      <summary>
        To be added.
      </summary>
      <value>
        To be added.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
      <summary>
        Gets or sets the <see cref="P:Microsoft.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> property.
      </summary>
      <value>
        <see langword="true" /> if the <see cref="P:Microsoft.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> property has been set; otherwise <see langword="false" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.PacketSize">
      <summary>
        Gets the size (in bytes) of network packets used to communicate with an instance of SQL Server.
      </summary>
      <value>
        The size (in bytes) of network packets. The default value is 8000.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.ServerVersion">
      <summary>
        Gets a string that contains the version of the instance of SQL Server to which the client is connected.
      </summary>
      <value>
        The version of the instance of SQL Server.
      </value>
      <exception cref="T:System.InvalidOperationException">
        The connection is closed. <see cref="P:Microsoft.Data.SqlClient.SqlConnection.ServerVersion" /> was called while the returned Task was not completed and the connection was not opened after a call to <see cref="M:Microsoft.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.ServerProcessId">
      <summary>
        Gets the server process ID (SPID) of the active connection.
      </summary>
      <value>
        The server process ID (SPID) of the active connection.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.State">
      <summary>
        Indicates the state of the <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> during the most recent network operation performed on the connection.
      </summary>
      <value>
        An <see cref="T:System.Data.ConnectionState" /> enumeration.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.StatisticsEnabled">
      <summary>
        When set to <see langword="true" />, enables statistics gathering for the current connection.
      </summary>
      <value>
        Returns <see langword="true" /> if statistics gathering is enabled; otherwise <see langword="false" />. <see langword="false" /> is the default.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.WorkstationId">
      <summary>
        Gets a string that identifies the database client.
      </summary>
      <value>
        A string that identifies the database client. If not specified, the name of the client computer. If neither is specified, the value is an empty string.
      </value>
    </member>
    <member name="E:Microsoft.Data.SqlClient.SqlConnection.InfoMessage">
      <summary>
        Occurs when SQL Server returns a warning or informational message.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)">
      <param name="isolationLevel">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
      <returns>
        To be added.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.BeginTransaction">
      <summary>
        Starts a database transaction.
      </summary>
      <returns>
        An object representing the new transaction.
      </returns>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).
      </exception>
      <exception cref="T:System.InvalidOperationException">
        Parallel transactions are not supported.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
      <param name="iso">
        The isolation level under which the transaction should run.
      </param>
      <summary>
        Starts a database transaction with the specified isolation level.
      </summary>
      <returns>
        An object representing the new transaction.
      </returns>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).
      </exception>
      <exception cref="T:System.InvalidOperationException">
        Parallel transactions are not supported.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
      <param name="iso">
        The isolation level under which the transaction should run.
      </param>
      <param name="transactionName">
        The name of the transaction.
      </param>
      <summary>
        Starts a database transaction with the specified isolation level and transaction name.
      </summary>
      <returns>
        An object representing the new transaction.
      </returns>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).
      </exception>
      <exception cref="T:System.InvalidOperationException">
        Parallel transactions are not supported.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
      <param name="transactionName">
        The name of the transaction.
      </param>
      <summary>
        Starts a database transaction with the specified transaction name.
      </summary>
      <returns>
        An object representing the new transaction.
      </returns>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).
      </exception>
      <exception cref="T:System.InvalidOperationException">
        Parallel transactions are not supported.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
      <param name="database">
        The name of the database to use instead of the current database.
      </param>
      <summary>
        Changes the current database for an open <see cref="T:Microsoft.Data.SqlClient.SqlConnection" />.
      </summary>
      <exception cref="T:System.ArgumentException">
        The database name is not valid.
      </exception>
      <exception cref="T:System.InvalidOperationException">
        The connection is not open.
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        Cannot change the database.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.ChangePassword(System.String,Microsoft.Data.SqlClient.SqlCredential,System.Security.SecureString)">
      <param name="connectionString">
        The connection string that contains enough information to connect to a server. The connection string should not use any of the following connection string keywords: <c>Integrated Security = true</c>, <c>UserId</c>, or <c>Password</c> ; or <c>ContextConnection = true</c>.
      </param>
      <param name="credential">
        A <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> object.
      </param>
      <param name="newSecurePassword">
        The new password. <paramref name="newSecurePassword" /> must be read only. The password must also comply with any password security policy set on the server (for example, minimum length and requirements for specific characters).
      </param>
      <summary>
        Changes the SQL Server password for the user indicated in the <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> object.
      </summary>
      <exception cref="T:System.ArgumentException">
        <list type="bullet">
          <item>
            The connection string contains any combination of <c>UserId</c>, <c>Password</c>, or <c>Integrated Security=true</c>.
          </item>
          <item>
            <paramref name="newSecurePassword" /> is greater than 128 characters.
          </item>
          <item>
            <paramref name="newSecurePassword" /> is not read only.
          </item>
          <item>
            <paramref name="newSecurePassword" /> is an empty string.
          </item>
        </list>
      </exception>
      <exception cref="T:System.ArgumentNullException">
        One of the parameters (<paramref name="connectionString" />, <paramref name="credential" />, or <paramref name="newSecurePassword" />) is null.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
      <param name="connectionString">
        The connection string that contains enough information to connect to the server that you want. The connection string must contain the user ID and the current password.
      </param>
      <param name="newPassword">
        The new password to set. This password must comply with any password security policy set on the server, including minimum length, requirements for specific characters, and so on.
      </param>
      <summary>
        Changes the SQL Server password for the user indicated in the connection string to the supplied new password.
      </summary>
      <exception cref="T:System.ArgumentException">
        <list type="bullet">
          <item>
            The connection string includes the option to use integrated security.
          </item>
          <item>
            The <paramref name="newPassword" /> exceeds 128 characters.
          </item>
        </list>
      </exception>
      <exception cref="T:System.ArgumentNullException">
        Either the <paramref name="connectionString" /> or the <paramref name="newPassword" /> parameter is null.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.ClearAllPools">
      <summary>
        Empties the connection pool.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.ClearPool(Microsoft.Data.SqlClient.SqlConnection)">
      <param name="connection">
        The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> to be cleared from the pool.
      </param>
      <summary>
        Empties the connection pool associated with the specified connection.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.Close">
      <summary>
        Closes the connection to the database. This is the preferred method of closing any open connection.
      </summary>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        The connection-level error that occurred while opening the connection.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.CreateCommand">
      <summary>
        Creates and returns a <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object associated with the <see cref="T:Microsoft.Data.SqlClient.SqlConnection" />.
      </summary>
      <returns>
        A <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.CreateDbCommand">
      <summary>
        To be added.
      </summary>
      <returns>
        To be added.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.Dispose(System.Boolean)">
      <param name="disposing">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
      <param name="transaction">
        A reference to an existing <see cref="T:System.EnterpriseServices.ITransaction" /> in which to enlist.
      </param>
      <summary>
        Enlists in the specified transaction as a distributed transaction.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)">
      <param name="transaction">
        A reference to an existing <see cref="T:System.Transactions.Transaction" /> in which to enlist.
      </param>
      <summary>
        Enlists in the specified transaction as a distributed transaction.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.GetSchema">
      <summary>
        Returns schema information for the data source of this <see cref="T:Microsoft.Data.SqlClient.SqlConnection" />. For more information about scheme, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sql-server-schema-collections">SQL Server Schema Collections</see>.
      </summary>
      <returns>
        A <see cref="T:System.Data.DataTable" /> that contains schema information.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.GetSchema(System.String)">
      <param name="collectionName">
        Specifies the name of the schema to return.
      </param>
      <summary>
        Returns schema information for the data source of this <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> using the specified string for the schema name.
      </summary>
      <returns>
        A <see cref="T:System.Data.DataTable" /> that contains schema information.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionName" /> is specified as null.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
      <param name="collectionName">
        Specifies the name of the schema to return.
      </param>
      <param name="restrictionValues">
        A set of restriction values for the requested schema.
      </param>
      <summary>
        Returns schema information for the data source of this <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> using the specified string for the schema name and the specified string array for the restriction values.
      </summary>
      <returns>
        A <see cref="T:System.Data.DataTable" /> that contains schema information.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionName" /> is specified as null.
      </exception>
      <seealso cref="M:Microsoft.Data.SqlClient.SqlConnection.GetSchema" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.Open">
      <summary>
        Opens a database connection with the property settings specified by the <see cref="P:Microsoft.Data.SqlClient.SqlConnection.ConnectionString" />.
      </summary>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>Cannot open a connection without specifying a data source or server.</item>
          <item>The connection is already open.</item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        <para>
          A connection-level error occurred while opening the connection. If the <see cref="P:Microsoft.Data.SqlClient.SqlException.Number" /> property contains the value 18487 or 18488, this indicates that the specified password has expired or must be reset. See the <see cref="M:Microsoft.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" /> method for more information.
        </para>
        <para>
          The <c>&lt;system.data.localdb&gt;</c> tag in the app.config file has invalid or unknown elements.
        </para>
      </exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        There are two entries with the same name in the <c>&lt;localdbinstances&gt;</c> section.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.Open(Microsoft.Data.SqlClient.SqlConnectionOverrides)">
      <param name="overrides">
        Options to override default connection open behavior.
      </param>
      <summary>
        Opens a database connection with the property settings specified by the <see cref="P:Microsoft.Data.SqlClient.SqlConnection.ConnectionString" />.
      </summary>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>Cannot open a connection without specifying a data source or server.</item>
          <item>The connection is already open.</item>
        </list>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        A connection-level error occurred while opening the connection. If the <see cref="P:Microsoft.Data.SqlClient.SqlException.Number" /> property contains the value 18487 or 18488, this indicates that the specified password has expired or must be reset. See the <see cref="M:Microsoft.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" /> method for more information. The <c>&lt;system.data.localdb&gt;</c> tag in the app.config file has invalid or unknown elements.
      </exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        There are two entries with the same name in the <c>&lt;localdbinstances&gt;</c> section.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
      <param name="cancellationToken">
        The cancellation instruction.
      </param>
      <summary>
        An asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlConnection.Open" />, which opens a database connection with the property settings specified by the <see cref="P:Microsoft.Data.SqlClient.SqlConnection.ConnectionString" />. The cancellation token can be used to request that the operation be abandoned before the connection timeout elapses. Exceptions will be propagated via the returned Task. If the connection timeout time elapses without successfully connecting, the returned Task will be marked as faulted with an Exception. The implementation returns a Task without blocking the calling thread for both pooled and non-pooled connections.
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidOperationException">
        <para>
          Calling <see cref="M:Microsoft.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.
        </para>
        <para>
          A connection was not available from the connection pool before the connection time out elapsed.
        </para>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        Any error returned by SQL Server that occurred while opening the connection.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.OpenAsync(Microsoft.Data.SqlClient.SqlConnectionOverrides,System.Threading.CancellationToken)">
      <param name="overrides">
        Options to override default connection open behavior.
      </param>
      <param name="cancellationToken">
        The cancellation instruction.
      </param>
      <summary>
        An asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlConnection.Open" />, which opens a database connection with the property settings specified by the <see cref="P:Microsoft.Data.SqlClient.SqlConnection.ConnectionString" />. The cancellation token can be used to request that the operation be abandoned before the connection timeout elapses.  Exceptions will be propagated via the returned Task. If the connection timeout time elapses without successfully connecting, the returned Task will be marked as faulted with an Exception. The implementation returns a Task without blocking the calling thread for both pooled and non-pooled connections.
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidOperationException">
        <para>
          Calling <see cref="M:Microsoft.Data.SqlClient.SqlConnection.OpenAsync(Microsoft.Data.SqlClient.SqlConnectionOverrides,System.Threading.CancellationToken)" /> more than once for the same instance before task completion.
        </para>
        <para>
          A connection was not available from the connection pool before the connection time out elapsed.
        </para>
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        Any error returned by SQL Server that occurred while opening the connection.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,Microsoft.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})">
      <param name="customProviders">
        Dictionary of custom column encryption key store providers
      </param>
      <summary>
        <para>
          Registers the column encryption key store providers. This function should only be called once in an app. This does shallow copying of the dictionary so that the app cannot alter the custom provider list once it has been set.
        </para>
        <para>
          The built-in column master key store providers that are available for the Windows Certificate Store, CNG Store and CSP are pre-registered.
        </para>
      </summary>
      <exception cref="T:System.ArgumentNullException">
        <list type="bullet">
          <item>A null dictionary was provided.</item>
          <item>A string key in the dictionary was null or empty.</item>
          <item>A <see cref="T:Microsoft.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" /> value in the dictionary was null.</item>
        </list>
      </exception>
      <exception cref="T:System.ArgumentException">
        A string key in the dictionary started with "MSSQL_". This prefix is reserved for system providers.
      </exception>
      <exception cref="T:System.InvalidOperationException">
        This function was called more than once.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProvidersOnConnection(System.Collections.Generic.IDictionary{System.String,Microsoft.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})">
      <param name="customProviders">
        Dictionary of custom column encryption key providers
      </param>
      <summary>
        Registers the encryption key store providers on the <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> instance. If this function has been called, any providers registered using the static <see cref="M:Microsoft.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,Microsoft.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})" /> methods will be ignored. This function can be called more than once. This does shallow copying of the dictionary so that the app cannot alter the custom provider list once it has been set.
      </summary>
      <exception cref="T:System.ArgumentNullException">
        <list type="bullet">
          <item>A null dictionary was provided.</item>
          <item>A string key in the dictionary was null or empty.</item>
          <item>A <see cref="T:Microsoft.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" /> value in the dictionary was null.</item>
        </list>
      </exception>
      <exception cref="T:System.ArgumentException">
        A string key in the dictionary started with "MSSQL_". This prefix is reserved for system providers.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.ResetStatistics">
      <summary>
        If statistics gathering is enabled, all values are reset to zero.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.RetrieveStatistics">
      <summary>
        Returns a name value pair collection of statistics at the point in time the method is called.
      </summary>
      <returns>
        Returns a reference of type <see cref="T:System.Collections.IDictionary" /> of <see cref="T:System.Collections.DictionaryEntry" /> items.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnection.RetrieveInternalInfo">
      <summary>
        Returns a name value pair collection of internal properties at the point in time the method is called.
      </summary>
      <returns>
        Returns a reference of type <see cref="T:System.Collections.Generic.IDictionary`2" /> of (string, object) items.
      </returns>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnection.RetryLogicProvider">
      <summary>
        Gets or sets a value that specifies the <see cref="T:Microsoft.Data.SqlClient.SqlRetryLogicBaseProvider" /> object bound to this command.
      </summary>
      <value>
        When set to null (default), the default non-retryable provider will be applied.
      </value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlConnectionColumnEncryptionSetting">
      <summary>
        Note that these settings cannot be used to bypass encryption and gain access to plaintext data. For details, see <see href="https://learn.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted (Database Engine)</see>.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlConnectionColumnEncryptionSetting.Disabled">
      <summary>
        Specifies the connection does not use Always Encrypted. Should be used if no queries sent over the connection access encrypted columns.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlConnectionColumnEncryptionSetting.Enabled">
      <summary>
        Enables Always Encrypted functionality for the connection. Query parameters that correspond to encrypted columns will be transparently encrypted and query results from encrypted columns will be transparently decrypted.
      </summary>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlConnectionAttestationProtocol">
      <summary>
        Specifies a value for Attestation Protocol.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlConnectionAttestationProtocol.NotSpecified">
      <summary>
        If the attestation protocol is not specified. Use this as default value.
      </summary>
      <value>
        0
      </value>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlConnectionAttestationProtocol.AAS">
      <summary>
        Attestation protocol for Azure Attestation Service
      </summary>
      <value>
        1
      </value>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlConnectionAttestationProtocol.None">
      <summary>
        Attestation protocol for no attestation. Only compatible with Virtualization-based security (VBS) enclaves. An Enclave Attestation Url is not required when using this protocol.
      </summary>
      <value>
        2
      </value>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlConnectionAttestationProtocol.HGS">
      <summary>
        Attestation protocol for Host Guardian Service
      </summary>
      <value>
        3
      </value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlConnectionIPAddressPreference">
      <summary>
        Specifies a value for IP address preference during a TCP connection.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlConnectionIPAddressPreference.IPv4First">
      <summary>
        Connects using IPv4 address(es) first. If the connection fails, try IPv6 address(es), if provided. This is the default value.
      </summary>
      <value>0</value>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlConnectionIPAddressPreference.IPv6First">
      <summary>
        Connect using IPv6 address(es) first. If the connection fails, try IPv4 address(es), if available.
      </summary>
      <value>1</value>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlConnectionIPAddressPreference.UsePlatformDefault">
      <summary>
        Connects with IP addresses in the order the underlying platform or operating system provides them.
      </summary>
      <value>2</value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlConnectionEncryptOption">
      <summary>
        These options are used to control encryption behavior of the communication between the server and the client.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnectionEncryptOption.Parse(System.String)">
      <summary>
        Converts the specified string representation of a logical value to its <see cref="T:Microsoft.Data.SqlClient.SqlConnectionEncryptOption" /> equivalent.
      </summary>
      <param name="value">
        A string containing the value to convert.
      </param>
      <returns>
        An object that is equivalent to <see cref="T:Microsoft.Data.SqlClient.SqlConnectionEncryptOption" /> contained in <paramref name="value" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        Throws exception if provided <paramref name="value" /> is not convertible to <see cref="T:Microsoft.Data.SqlClient.SqlConnectionEncryptOption" /> type.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnectionEncryptOption.TryParse(System.String,Microsoft.Data.SqlClient.SqlConnectionEncryptOption@)">
      <summary>
        Converts the specified string representation of a logical value to its <see cref="T:Microsoft.Data.SqlClient.SqlConnectionEncryptOption" /> equivalent and returns a value that indicates whether the conversion succeeded.
      </summary>
      <param name="value">
        A string containing the value to convert.
      </param>
      <param name="result">
        An object that is equivalent to <see cref="T:Microsoft.Data.SqlClient.SqlConnectionEncryptOption" /> contained in <paramref name="value" />. <see langword="null" /> if conversion fails.
      </param>
      <returns>
        <see langword="true" /> if the <paramref name="value" /> parameter was converted successfully; otherwise, <see langword="false" />.
      </returns>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionEncryptOption.Optional">
      <summary>
        Specifies that TLS encryption is optional when connecting to the server. If the server requires encryption, encryption will be negotiated.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionEncryptOption.Mandatory">
      <summary>
        Specifies that TLS encryption is required when connecting to the server. If the server doesn't support encryption, the connection will fail.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionEncryptOption.Strict">
      <summary>
        Enables and requires TDS 8.0, TLS encryption to the server. If the server doesn't support TDS 8.0, TLS encryption, the connection will fail.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnectionEncryptOption.op_Implicit(System.Boolean)~Microsoft.Data.SqlClient.SqlConnectionEncryptOption">
      <param name="value">
        The boolean value to be used for implicit comparison.
      </param>
      <summary>
        Enables implicit conversion of a boolean to a <see cref="T:Microsoft.Data.SqlClient.SqlConnectionEncryptOption" />. A value of <see langword="true" /> converts to <see cref="P:Microsoft.Data.SqlClient.SqlConnectionEncryptOption.Mandatory" />. A value of <see langword="false" /> converts to <see cref="P:Microsoft.Data.SqlClient.SqlConnectionEncryptOption.Optional" />.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnectionEncryptOption.op_Implicit(Microsoft.Data.SqlClient.SqlConnectionEncryptOption)~System.Boolean">
      <param name="value">
        The <see cref="T:Microsoft.Data.SqlClient.SqlConnectionEncryptOption" /> value to be used for implicit comparison.
      </param>
      <summary>
        Enables implicit conversion of a <see cref="T:Microsoft.Data.SqlClient.SqlConnectionEncryptOption" /> to a boolean. <see cref="P:Microsoft.Data.SqlClient.SqlConnectionEncryptOption.Mandatory" /> and <see cref="P:Microsoft.Data.SqlClient.SqlConnectionEncryptOption.Strict" /> convert to <see langword="true" />. <see cref="P:Microsoft.Data.SqlClient.SqlConnectionEncryptOption.Optional" /> converts to <see langword="false" />.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnectionEncryptOption.ToString">
      <summary>
        Returns the string value of <see cref="T:Microsoft.Data.SqlClient.SqlConnectionEncryptOption" />.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnectionEncryptOption.Equals(System.Object)">
      <summary>
        Compares the <see cref="M:Microsoft.Data.SqlClient.SqlConnectionEncryptOption.ToString" /> representation of <see cref="T:Microsoft.Data.SqlClient.SqlConnectionEncryptOption" /> to another <see cref="T:Microsoft.Data.SqlClient.SqlConnectionEncryptOption" />.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnectionEncryptOption.GetHashCode">
      <summary>
        Returns the hash code of the <see cref="M:Microsoft.Data.SqlClient.SqlConnectionEncryptOption.ToString" /> value.
      </summary>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlConnectionOverrides">
      <summary>
        Specifies a value for Overrides.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlConnectionOverrides.None">
      <summary>
        No overrides.
      </summary>
      <value>
        0
      </value>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlConnectionOverrides.OpenWithoutRetry">
      <summary>
        Disable transient fault handling during the initial <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /><see cref="M:Microsoft.Data.SqlClient.SqlConnection.Open" /> attempt.
      </summary>
      <value>
        1
      </value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlConnectionStringBuilder">
      <summary>
        Provides a simple way to create and manage the contents of connection strings used by the <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> class.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlConnectionStringBuilder" /> class.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.#ctor(System.String)">
      <param name="connectionString">
        The basis for the object's internal connection information. Parsed into name/value pairs. Invalid key names raise <see cref="T:System.Collections.Generic.KeyNotFoundException" /> .
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlConnectionStringBuilder" /> class. The provided connection string provides the data for the instance's internal connection information.
      </summary>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
        Invalid key name within the connection string.
      </exception>
      <exception cref="T:System.FormatException">
        Invalid value within the connection string (specifically, when a Boolean or numeric value was expected but not supplied).
      </exception>
      <exception cref="T:System.ArgumentException">
        The supplied <paramref name="connectionString" /> is not valid.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent">
      <summary>
        Declares the application workload type when connecting to a database in an SQL Server Availability Group. You can set the value of this property with <see cref="T:Microsoft.Data.SqlClient.ApplicationIntent" />. For more information about SqlClient support for Always On Availability Groups, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sql/sqlclient-support-high-availability-disaster-recovery">SqlClient Support for High Availability, Disaster Recovery</see>.
      </summary>
      <value>
        Returns the current value of the property.
      </value>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/overview-sqlclient-driver">
        Overview of the SqlClient driver
      </seealso>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName">
      <summary>
        Gets or sets the name of the application associated with the connection string.
      </summary>
      <value>
        The name of the application. If no name has been supplied, "Framework Microsoft SqlClient Data Provider" when running on .NET Framework and "Core Microsoft SqlClient Data Provider" otherwise.
      </value>
      <exception cref="T:System.ArgumentNullException">
        To set the value to null, use <see cref="F:System.DBNull.Value" /> .
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename">
      <summary>
        Gets or sets a string that contains the name of the primary data file. This includes the full path name of an attachable database.
      </summary>
      <value>
        The value of the <see langword="AttachDBFilename" /> property, or <see cref="P:System.String.Empty" /> if no value has been supplied.
      </value>
      <exception cref="T:System.ArgumentNullException">
        To set the value to null, use <see cref="F:System.DBNull.Value" /> .
      </exception>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/connection-strings">
        Working with Connection Strings
      </seealso>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/overview-sqlclient-driver">
        Overview of the SqlClient driver
      </seealso>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.Authentication">
      <summary>
        Gets or sets the authentication method used for <see href="https://learn.microsoft.com/azure/azure-sql/database/authentication-aad-overview#connect-with-microsoft-entra-to-azure-sql-resources">Connect with Microsoft Entra to Azure SQL resources</see>.
      </summary>
      <value>
        The authentication method of the connection string.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting">
      <summary>
        Gets or sets the column encryption settings for the connection string builder.
      </summary>
      <value>
        The column encryption settings for the connection string builder.This property enables or disables <see href="https://learn.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see> functionality for the connection.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.CommandTimeout">
      <summary>
        The default wait time (in seconds) before terminating the attempt to execute a command and generating an error. The default is 30 seconds.
      </summary>
      <value>
        The time in seconds to wait for the command to execute. The default is 30 seconds.
      </value>
      <exception cref="T:System.ArgumentException">
        The value set is less than 0.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset">
      <summary>
        Obsolete. Gets or sets a Boolean value that indicates whether the connection is reset when drawn from the connection pool.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset" /> property, or true if no value has been supplied.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount">
      <summary>
        The number of reconnections attempted after identifying that there was an idle connection failure. This must be an integer between 0 and 255. The default value for non Azure endpoints is 1. For Azure SQL endpoints, the default is 2. Starting in version 5.x, for Azure SQL serverless or on demand endpoints, the default is 5 to improve connection success for connections to an idle or paused instance. Set to 0 to disable reconnecting on idle connection failures. An <see cref="T:System.ArgumentException" /> will be thrown if set to a value outside the allowed range.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval">
      <summary>
        Amount of time (in seconds) between each reconnection attempt after identifying that there was an idle connection failure. This must be an integer between 1 and 60. The default is 10 seconds.
      </summary>
      <value>
        Amount of time (in seconds) between each reconnection attempt after identifying that there was an idle connection failure.
      </value>
      <exception cref="T:System.ArgumentException">
        Value is outside the allowed range.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout">
      <summary>
        Gets or sets the length of time (in seconds) to wait for a connection to the server before terminating the attempt and generating an error.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout" /> property, or 15 seconds if no value has been supplied.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage">
      <summary>
        Gets or sets the language used for database server warning or error messages..
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage" /> property, or <c>string.Empty</c> if no value has been supplied.
      </value>
      <exception cref="T:System.ArgumentNullException">
        To set the value to null, use <see cref="F:System.DBNull.Value" /> .
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.DataSource">
      <summary>
        Gets or sets the name or network address of the instance of SQL Server to connect to.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.DataSource" /> property, or <see langword="String.Empty" /> if none has been supplied.
      </value>
      <exception cref="T:System.ArgumentNullException">
        To set the value to null, use <see cref="F:System.DBNull.Value" /> .
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.EnclaveAttestationUrl">
      <summary>
        Gets or sets the enclave attestation URL to be used with enclave based Always Encrypted.
      </summary>
      <value>
        The enclave attestation URL.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.AttestationProtocol">
      <summary>
        Gets or sets the value of Attestation Protocol.
      </summary>
      <value>
        The attestation protocol.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.IPAddressPreference">
      <summary>
        Gets or sets the IP address family preference when establishing TCP connections.
      </summary>
      <returns>
        Returns the IP address preference.
      </returns>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.Encrypt">
      <summary>
        Gets or sets a <see cref="T:Microsoft.Data.SqlClient.SqlConnectionEncryptOption" /> value since version 5.0 or a <see cref="T:System.Boolean" /> value for the earlier versions that indicates whether TLS encryption is required for all data sent between the client and server.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.Encrypt" /> property.
      </value>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/connection-strings">
        Working with Connection Strings
      </seealso>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/overview-sqlclient-driver">
        Overview of the SqlClient driver
      </seealso>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.HostNameInCertificate">
      <summary>
        Gets or sets the host name to use when validating the server certificate for the connection. When not specified, the server name from the <c>Data Source</c> is used for certificate validation. (Only available in v5.0+)
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.HostNameInCertificate" /> property, or <see langword="String.Empty" /> if none has been supplied.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.ServerCertificate">
      <summary>
        Gets or sets the path to a certificate file to match against the SQL Server TLS/SSL certificate for the connection. The accepted certificate formats are PEM, DER, and CER. If specified, the SQL Server certificate is checked by verifying if the `ServerCertificate` provided is an exact match. (Only available in v5.1+)
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.ServerCertificate" /> property, or <c>string.Empty</c> if none has been supplied.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.Enlist">
      <summary>
        Gets or sets a Boolean value that indicates whether the SQL Server connection pooler automatically enlists the connection in the creation thread's current transaction context.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.Enlist" /> property, or <see langword="true" /> if none has been supplied.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner">
      <summary>
        Gets or sets the name or address of the partner server to connect to if the primary server is down.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner" /> property, or <see langword="String.Empty" /> if none has been supplied.
      </value>
      <exception cref="T:System.ArgumentNullException">
        To set the value to null, use <see cref="F:System.DBNull.Value" /> .
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartnerSPN">
      <summary>
        Gets or sets the service principal name (SPN) of the failover partner for the connection.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartnerSPN" /> property, or <see langword="String.Empty" /> if none has been supplied.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog">
      <summary>
        Gets or sets the name of the database associated with the connection.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog" /> property, or <c>string.Empty</c> if none has been supplied.
      </value>
      <exception cref="T:System.ArgumentNullException">
        To set the value to null, use <see cref="F:System.DBNull.Value" /> .
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity">
      <summary>
        Gets or sets a Boolean value that indicates whether User ID and Password are specified in the connection (when <see langword="false" /> ) or whether the current Windows account credentials are used for authentication (when <see langword="true" /> ).
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity" /> property, or <see langword="false" /> if none has been supplied.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize">
      <summary>
        Gets a value that indicates whether the <see cref="T:Microsoft.Data.SqlClient.SqlConnectionStringBuilder" /> has a fixed size.
      </summary>
      <value>
        <see langword="true" /> in every case, because the <see cref="T:Microsoft.Data.SqlClient.SqlConnectionStringBuilder" /> supplies a fixed-size collection of key/value pairs.
      </value>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/connection-strings">
        Working with Connection Strings
      </seealso>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/overview-sqlclient-driver">
        Overview of the SqlClient driver
      </seealso>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)">
      <param name="keyword">
        The key of the item to get or set.
      </param>
      <summary>
        Gets or sets the value associated with the specified key. In C#, this property is the indexer.
      </summary>
      <value>
        The value associated with the specified key.
      </value>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> is a null reference (<see langword="Nothing" /> in Visual Basic).
      </exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
        Tried to add a key that does not exist within the available keys.
      </exception>
      <exception cref="T:System.FormatException">
        Invalid value within the connection string (specifically, a Boolean or numeric value was expected but not supplied).
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.Keys">
      <summary>
        Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:Microsoft.Data.SqlClient.SqlConnectionStringBuilder" />.
      </summary>
      <value>
        An <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:Microsoft.Data.SqlClient.SqlConnectionStringBuilder" />.
      </value>
      <seealso cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.Values" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)" />
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout">
      <summary>
        Gets or sets the minimum time, in seconds, for the connection to live in the connection pool before being destroyed.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout" /> property, or 0 if none has been supplied.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize">
      <summary>
        Gets or sets the maximum number of connections allowed in the connection pool for this specific connection string.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize" /> property, or 100 if none has been supplied.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize">
      <summary>
        Gets or sets the minimum number of connections allowed in the connection pool for this specific connection string.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize" /> property, or 0 if none has been supplied.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets">
      <summary>
        When true, an application can maintain multiple active result sets (MARS). When false, an application must process or cancel all result sets from one batch before it can execute any other batch on that connection. For more information, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sql/multiple-active-result-sets-mars">Multiple Active Result Sets (MARS)</see>.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets" /> property, or <see langword="false" /> if none has been supplied.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover">
      <summary>
        If your application is connecting to an AlwaysOn availability group (AG) on different subnets, setting <c>MultiSubnetFailover=true</c> provides faster detection of and connection to the (currently) active server. For more information about SqlClient support for Always On Availability Groups, see <see href="https://learn.microsoft.com/sql/connect/ado-net/sql/sqlclient-support-high-availability-disaster-recovery">SqlClient Support for High Availability, Disaster Recovery</see>.
      </summary>
      <value>
        Returns <see cref="T:System.Boolean" /> indicating the current value of the property.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary">
      <summary>
        Gets or sets a string that contains the name of the network library used to establish a connection to the SQL Server.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary" /> property, or <see langword="String.Empty" /> if none has been supplied.
      </value>
      <exception cref="T:System.ArgumentNullException">
        To set the value to null, use <see cref="F:System.DBNull.Value" /> .
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.PacketSize">
      <summary>
        Gets or sets the size in bytes of the network packets used to communicate with an instance of SQL Server.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.PacketSize" /> property, or 8000 if none has been supplied.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.Password">
      <summary>
        Gets or sets the password for the SQL Server account.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.Password" /> property, or <see langword="String.Empty" /> if none has been supplied.
      </value>
      <exception cref="T:System.ArgumentNullException">
        The password was incorrectly set to null.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo">
      <summary>
        Gets or sets a Boolean value indicating if security-sensitive information, such as the password or access token, should be returned as part of the connection string on a connection created with this <see cref="T:Microsoft.Data.SqlClient.SqlConnectionStringBuilder" /> after that connection has ever been in an open state. This property should only be set to <see langword="true" /> if your application has a specific need to read the password out of an already-opened database connection. The default value of <see langword="false" /> is the more secure setting; using <see langword="true" /> for this property opens your application to security risks such as accidentally logging or tracing the database password.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo" /> property, or <see langword="false" /> if none has been supplied.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod">
      <summary>
        The blocking period behavior for a connection pool.
      </summary>
      <value>
        The available blocking period settings.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.Pooling">
      <summary>
        Gets or sets a Boolean value that indicates whether the connection will be pooled or explicitly opened every time that the connection is requested.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.Pooling" /> property, or <see langword="true" /> if none has been supplied.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.Replication">
      <summary>
        Gets or sets a Boolean value that indicates whether replication is supported using the connection.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.Replication" /> property, or false if none has been supplied.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.ServerSPN">
      <summary>
        Gets or sets the service principal name (SPN) of the data source.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.ServerSPN" /> property, or <see langword="String.Empty" /> if none has been supplied.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding">
      <summary>
        Gets or sets a string value that indicates how the connection maintains its association with an enlisted <see langword="System.Transactions" /> transaction.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding" /> property, or <c>Implicit Unbind</c> if none has been supplied.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution">
      <summary>
        When the value of this key is set to <see langword="true" />, the application is required to retrieve all IP addresses for a particular DNS entry and attempt to connect with the first one in the list. If the connection is not established within 0.5 seconds, the application will try to connect to all others in parallel. When the first answers, the application will establish the connection with the respondent IP address.
      </summary>
      <value>
        A boolean value.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate">
      <summary>
        Gets or sets a value that indicates whether the channel will be encrypted while bypassing walking the certificate chain to validate trust.
      </summary>
      <value>
        A boolean. The default is <see langword="false" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion">
      <summary>
        Gets or sets a string value that indicates the type system the application expects.
      </summary>
      <value>
        The following table shows the possible values for the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion" /> property:
        <list type="table"><listheader><term>Value</term><description>Description</description></listheader><item><term>SQL Server 2005</term><description>Uses the SQL Server 2005 type system. No conversions are made for the current version of ADO.NET.</description></item><item><term>SQL Server 2008</term><description>Uses the SQL Server 2008 type system.</description></item><item><term>Latest</term><description>
              Use the latest version than this client-server pair can handle. This will automatically move forward as the client and server components are upgraded.
            </description></item></list></value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.UserID">
      <summary>
        Gets or sets the user ID to be used when connecting to SQL Server.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.UserID" /> property, or <c>string.Empty</c> if none has been supplied.
      </value>
      <exception cref="T:System.ArgumentNullException">
        To set the value to null, use <see cref="F:System.DBNull.Value" />.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.UserInstance">
      <summary>
        Gets or sets a value that indicates whether to redirect the connection from the default SQL Server Express instance to a runtime-initiated instance running under the account of the caller.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.UserInstance" /> property, or <see langword="false" /> if none has been supplied.
      </value>
      <exception cref="T:System.ArgumentNullException">
        To set the value to null, use <see cref="F:System.DBNull.Value" /> .
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.Values">
      <summary>
        Gets an <see cref="T:System.Collections.ICollection" /> that contains the values in the <see cref="T:Microsoft.Data.SqlClient.SqlConnectionStringBuilder" /> .
      </summary>
      <value>
        An <see cref="T:System.Collections.ICollection" /> that contains the values in the <see cref="T:Microsoft.Data.SqlClient.SqlConnectionStringBuilder" /> .
      </value>
      <seealso cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.Keys" />
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID">
      <summary>
        Gets or sets the name of the workstation connecting to SQL Server.
      </summary>
      <value>
        The value of the <see cref="P:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID" /> property, or <c>string.Empty</c> if none has been supplied.
      </value>
      <exception cref="T:System.ArgumentNullException">
        To set the value to null, use <see cref="F:System.DBNull.Value" /> .
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.Clear">
      <summary>
        Clears the contents of the <see cref="T:Microsoft.Data.SqlClient.SqlConnectionStringBuilder" /> instance.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)">
      <param name="keyword">
        The key to locate in the <see cref="T:Microsoft.Data.SqlClient.SqlConnectionStringBuilder" /> .
      </param>
      <summary>
        Determines whether the <see cref="T:Microsoft.Data.SqlClient.SqlConnectionStringBuilder" /> contains a specific key.
      </summary>
      <returns>
        <see langword="true" /> if the <see cref="T:Microsoft.Data.SqlClient.SqlConnectionStringBuilder" /> contains an element that has the specified key; otherwise, <see langword="false" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> is null (<see langword="Nothing" /> in Visual Basic)</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)">
      <param name="keyword">
        The key of the key/value pair to be removed from the connection string in this <see cref="T:Microsoft.Data.SqlClient.SqlConnectionStringBuilder" />.
      </param>
      <summary>
        Removes the entry with the specified key from the <see cref="T:Microsoft.Data.SqlClient.SqlConnectionStringBuilder" /> instance.
      </summary>
      <returns>
        <see langword="true" /> if the key existed within the connection string and was removed; <see langword="false" /> if the key did not exist.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> is null (<see langword="Nothing" /> in Visual Basic)
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)">
      <param name="keyword">
        The key to locate in the <see cref="T:Microsoft.Data.SqlClient.SqlConnectionStringBuilder" /> .
      </param>
      <summary>
        Indicates whether the specified key exists in this <see cref="T:Microsoft.Data.SqlClient.SqlConnectionStringBuilder" /> instance.
      </summary>
      <returns>
        <see langword="true" /> if the <see cref="T:Microsoft.Data.SqlClient.SqlConnectionStringBuilder" /> contains an entry with the specified key; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <param name="keyword">
        The key of the item to retrieve.
      </param>
      <param name="value">
        The value corresponding to <paramref name="keyword" /> .
      </param>
      <summary>
        Retrieves a value corresponding to the supplied key from this <see cref="T:Microsoft.Data.SqlClient.SqlConnectionStringBuilder" /> .
      </summary>
      <returns>
        <see langword="true" /> if <paramref name="keyword" /> was found within the connection string; otherwise, <see langword="false" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> contains a null value (<see langword="Nothing" /> in Visual Basic).
      </exception>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlCredential">
      <summary>
        <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> provides a more secure way to specify the password for a login attempt using SQL Server Authentication. <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> is comprised of a user id and a password that will be used for SQL Server Authentication. The password in a <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> object is of type <see cref="T:System.Security.SecureString" />. <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> cannot be inherited. Windows Authentication (<c>Integrated Security = true</c>) remains the most secure way to log in to a SQL Server database.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlCredential.#ctor(System.String,System.Security.SecureString)">
      <param name="userId">
        The user id.
      </param>
      <param name="password">
        The password; a <see cref="T:System.Security.SecureString" /> value marked as read-only.  Passing a read/write <see cref="T:System.Security.SecureString" /> parameter will raise an <see cref="T:System.ArgumentException" /> .
      </param>
      <summary>
        Creates an object of type <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> .
      </summary>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/overview-sqlclient-driver">
        Overview of the SqlClient driver
      </seealso>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCredential.Password">
      <summary>
        Gets the password component of the <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> object.
      </summary>
      <value>
        The password component of the <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> object.
      </value>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/overview-sqlclient-driver">
        Overview of the SqlClient driver
      </seealso>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlCredential.UserId">
      <summary>
        Gets the user ID component of the <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> object.
      </summary>
      <value>
        The user ID component of the <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> object.
      </value>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/overview-sqlclient-driver">
        Overview of the SqlClient driver
      </seealso>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlDataAdapter">
      <summary>
        Represents a set of data commands and a database connection that are used to fill the <see cref="T:System.Data.DataSet" /> and update a SQL Server database. This class cannot be inherited.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataAdapter.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlDataAdapter" /> class.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataAdapter.#ctor(Microsoft.Data.SqlClient.SqlCommand)">
      <param name="selectCommand">
        A <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> that is a Transact-SQL SELECT statement or stored procedure and is set as the <see cref="P:Microsoft.Data.SqlClient.SqlDataAdapter.SelectCommand" /> property of the <see cref="T:Microsoft.Data.SqlClient.SqlDataAdapter" />.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlDataAdapter" /> class with the specified <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> as the <see cref="P:Microsoft.Data.SqlClient.SqlDataAdapter.SelectCommand" /> property.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataAdapter.#ctor(System.String,Microsoft.Data.SqlClient.SqlConnection)">
      <param name="selectCommandText">
        A <see cref="T:System.String" /> that is a Transact-SQL SELECT statement or stored procedure to be used by the <see cref="P:Microsoft.Data.SqlClient.SqlDataAdapter.SelectCommand" /> property of the <see cref="T:Microsoft.Data.SqlClient.SqlDataAdapter" />.
      </param>
      <param name="selectConnection">
        A <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> that represents the connection. If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlDataAdapter" /> class with a <see cref="P:Microsoft.Data.SqlClient.SqlDataAdapter.SelectCommand" /> and a <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> object.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)">
      <param name="selectCommandText">
        A <see cref="T:System.String" /> that is a Transact-SQL SELECT statement or stored procedure to be used by the <see cref="P:Microsoft.Data.SqlClient.SqlDataAdapter.SelectCommand" /> property of the <see cref="T:Microsoft.Data.SqlClient.SqlDataAdapter" />.
      </param>
      <param name="selectConnectionString">
        The connection string. If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="M:Microsoft.Data.SqlClient.SqlDataAdapter.#ctor(System.String,Microsoft.Data.SqlClient.SqlConnection)" /> and <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlDataAdapter" /> class with a <see cref="P:Microsoft.Data.SqlClient.SqlDataAdapter.SelectCommand" /> and a connection string.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlDataAdapter.DeleteCommand">
      <summary>
        Gets or sets a Transact-SQL statement or stored procedure to delete records from the data set.
      </summary>
      <value>
        A <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the database that correspond to deleted rows in the <see cref="T:System.Data.DataSet" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlDataAdapter.InsertCommand">
      <summary>
        Gets or sets a Transact-SQL statement or stored procedure to insert new records into the data source.
      </summary>
      <value>
        A <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records into the database that correspond to new rows in the <see cref="T:System.Data.DataSet" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlDataAdapter.SelectCommand">
      <summary>
        Gets or sets a Transact-SQL statement or stored procedure used to select records in the data source.
      </summary>
      <value>
        A <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> to select records from the database for placement in the <see cref="T:System.Data.DataSet" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlDataAdapter.UpdateBatchSize">
      <summary>
        Gets or sets the number of rows that are processed in each round-trip to the server.
      </summary>
      <value>
        <para>
          The number of rows to process per-batch.
        </para>
        <list type="table">
          <listheader>
            <term>When value is</term>
            <description>Effect</description>
          </listheader>
          <item>
            <term>0</term>
            <description>There is no limit on the batch size.</description>
          </item>
          <item>
            <term>1</term>
            <description>Disables batch updating.</description>
          </item>
          <item>
            <term>&gt;1</term>
            <description>
              Changes are sent using batches of <see cref="P:Microsoft.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" /> operations at a time.
            </description>
          </item>
        </list>
        <para>
          When setting this to a value other than 1, all the commands associated with the <see cref="T:Microsoft.Data.SqlClient.SqlDataAdapter" /> have to have their <see cref="P:Microsoft.Data.SqlClient.SqlCommand.UpdatedRowSource" /> property set to <see cref="F:System.Data.UpdateRowSource.None" /> or <see cref="F:System.Data.UpdateRowSource.OutputParameters" />. An exception is thrown otherwise.
        </para>
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlDataAdapter.UpdateCommand">
      <summary>
        Gets or sets a Transact-SQL statement or stored procedure used to update records in the data source.
      </summary>
      <value>
        A <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the database that correspond to modified rows in the <see cref="T:System.Data.DataSet" />.
      </value>
    </member>
    <member name="E:Microsoft.Data.SqlClient.SqlDataAdapter.RowUpdated">
      <summary>
        Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> after a command is executed against the data source. The attempt to update is made, so the event fires.
      </summary>
    </member>
    <member name="E:Microsoft.Data.SqlClient.SqlDataAdapter.RowUpdating">
      <summary>
        Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is executed against the data source. The attempt to update is made, so the event fires.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataAdapter.AddToBatch(System.Data.IDbCommand)">
      <param name="command">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
      <returns>
        To be added.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataAdapter.ClearBatch">
      <summary>
        To be added.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <param name="dataRow">
        To be added.
      </param>
      <param name="command">
        To be added.
      </param>
      <param name="statementType">
        To be added.
      </param>
      <param name="tableMapping">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
      <returns>
        To be added.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <param name="dataRow">
        To be added.
      </param>
      <param name="command">
        To be added.
      </param>
      <param name="statementType">
        To be added.
      </param>
      <param name="tableMapping">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
      <returns>
        To be added.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataAdapter.ExecuteBatch">
      <summary>
        To be added.
      </summary>
      <returns>
        To be added.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
      <param name="commandIdentifier">
        To be added.
      </param>
      <param name="parameterIndex">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
      <returns>
        To be added.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
      <param name="commandIdentifier">
        To be added.
      </param>
      <param name="recordsAffected">
        To be added.
      </param>
      <param name="error">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
      <returns>
        To be added.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataAdapter.InitializeBatching">
      <summary>
        To be added.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <param name="value">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <param name="value">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataAdapter.TerminateBatching">
      <summary>
        To be added.
      </summary>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlDataReader">
      <summary>
        Provides a way of reading a forward-only stream of rows from a SQL Server database. This class cannot be inherited.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlDataReader.Connection">
      <summary>
        Gets the <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> associated with the <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" />.
      </summary>
      <value>
        The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> associated with the <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlDataReader.Depth">
      <summary>
        Gets a value that indicates the depth of nesting for the current row.
      </summary>
      <value>
        The depth of nesting for the current row.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlDataReader.FieldCount">
      <summary>
        Gets the number of columns in the current row.
      </summary>
      <value>
        When not positioned in a valid recordset, 0; otherwise the number of columns in the current row. The default is -1.
      </value>
      <exception cref="T:System.NotSupportedException">
        There is no current connection to an instance of SQL Server.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlDataReader.HasRows">
      <summary>
        Gets a value that indicates whether the <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> contains one or more rows.
      </summary>
      <value>
        <see langword="true" /> if the <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> contains one or more rows; otherwise <see langword="false" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlDataReader.IsClosed">
      <summary>
        Retrieves a Boolean value that indicates whether the specified <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> instance has been closed.
      </summary>
      <value>
        <see langword="true" /> if the specified <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> instance is closed; otherwise <see langword="false" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlDataReader.Item(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column in its native format given the column ordinal.
      </summary>
      <value>
        The value of the specified column in its native format.
      </value>
      <exception cref="T:System.IndexOutOfRangeException">
        The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlDataReader.Item(System.String)">
      <param name="name">
        The column name.
      </param>
      <summary>
        Gets the value of the specified column in its native format given the column name.
      </summary>
      <value>
        The value of the specified column in its native format.
      </value>
      <exception cref="T:System.IndexOutOfRangeException">
        No column with the specified name was found.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlDataReader.RecordsAffected">
      <summary>
        Gets the number of rows changed, inserted, or deleted by execution of the Transact-SQL statement.
      </summary>
      <value>
        The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlDataReader.SensitivityClassification">
      <summary>
        Gets the <see cref="T:Microsoft.Data.SqlClient.DataClassification.SensitivityClassification" /> information with the <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" />.
      </summary>
      <value>
        The <see cref="T:Microsoft.Data.SqlClient.DataClassification.SensitivityClassification" /> associated with the <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlDataReader.VisibleFieldCount">
      <summary>
        Gets the number of fields in the <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> that are not hidden.
      </summary>
      <value>
        The number of fields that are not hidden.
      </value>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.Close">
      <summary>
        Closes the <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> object.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a Boolean.
      </summary>
      <returns>
        The value of the column.
      </returns>
      <exception cref="T:System.InvalidCastException">
        The specified cast is not valid.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetByte(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a byte.
      </summary>
      <returns>
        The value of the specified column as a byte.
      </returns>
      <exception cref="T:System.InvalidCastException">
        The specified cast is not valid.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <param name="dataIndex">
        The index within the field from which to begin the read operation.
      </param>
      <param name="buffer">
        The buffer into which to read the stream of bytes.
      </param>
      <param name="bufferIndex">
        The index within the <paramref name="buffer" /> where the write operation is to start.
      </param>
      <param name="length">
        The maximum length to copy into the buffer.
      </param>
      <summary>
        Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.
      </summary>
      <returns>
        The actual number of bytes read.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetChar(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a single character.
      </summary>
      <returns>
        The value of the specified column.
      </returns>
      <exception cref="T:System.InvalidCastException">
        The specified cast is not valid.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <param name="dataIndex">
        The index within the field from which to begin the read operation.
      </param>
      <param name="buffer">
        The buffer into which to read the stream of bytes.
      </param>
      <param name="bufferIndex">
        The index within the <paramref name="buffer" /> where the write operation is to start.
      </param>
      <param name="length">
        The maximum length to copy into the buffer.
      </param>
      <summary>
        Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.
      </summary>
      <returns>
        The actual number of characters read.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)">
      <param name="i">
        The zero-based ordinal position of the column to find.
      </param>
      <summary>
        Gets a string representing the data type of the specified column.
      </summary>
      <returns>
        The string representing the data type of the specified column.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.
      </summary>
      <returns>
        The value of the specified column.
      </returns>
      <exception cref="T:System.InvalidCastException">
        The specified cast is not valid.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Retrieves the value of the specified column as a <see cref="T:System.DateTimeOffset" /> object.
      </summary>
      <returns>
        The value of the specified column.
      </returns>
      <exception cref="T:System.InvalidCastException">
        The specified cast is not valid.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.
      </summary>
      <returns>
        The value of the specified column.
      </returns>
      <exception cref="T:System.InvalidCastException">
        The specified cast is not valid.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a double-precision floating point number.
      </summary>
      <returns>
        The value of the specified column.
      </returns>
      <exception cref="T:System.InvalidCastException">
        The specified cast is not valid.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetEnumerator">
      <summary>
        Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" />.
      </summary>
      <returns>
        An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the <see cref="T:System.Type" /> that is the data type of the object.
      </summary>
      <returns>
        The <see cref="T:System.Type" /> that is the data type of the object. If the type does not exist on the client, in the case of a User-Defined Type (UDT) returned from the database, <b>GetFieldType</b> returns null.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)">
      <typeparam name="T">
        The type of the value to be returned.
      </typeparam>
      <param name="i">
        The column to be retrieved.
      </param>
      <summary>
        Synchronously gets the value of the specified column as a type. <see cref="M:Microsoft.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" /> is the asynchronous version of this method.
      </summary>
      <returns>
        The returned type object.
      </returns>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>The connection drops or is closed during the data retrieval.</item>
          <item>The <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</item>
          <item>There is no data ready to be read (for example, the first <see cref="M:Microsoft.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</item>
          <item>Tried to read a previously-read column in sequential mode.</item>
          <item>There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.</item>
        </list>
      </exception>
      <exception cref="T:System.IndexOutOfRangeException">
        Trying to read a column that does not exist.
      </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        The value of the column was null (<see cref="M:Microsoft.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />), retrieving a non-SQL type.
      </exception>
      <exception cref="T:System.InvalidCastException">
        <typeparamref name="T" /> doesn't match the type returned by SQL Server or cannot be cast.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
      <typeparam name="T">
        The type of the value to be returned.
      </typeparam>
      <param name="i">
        The column to be retrieved.
      </param>
      <param name="cancellationToken">
        The cancellation instruction, which propagates a notification that operations should be canceled. This does not guarantee the cancellation. A setting of <see langword="CancellationToken.None" /> makes this method equivalent to <see cref="M:Microsoft.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />. The returned task must be marked as cancelled.
      </param>
      <summary>
        Asynchronously gets the value of the specified column as a type. <see cref="M:Microsoft.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" /> is the synchronous version of this method.
      </summary>
      <returns>
        The returned type object.
      </returns>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>The connection drops or is closed during the data retrieval.</item>
          <item>The <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</item>
          <item>There is no data ready to be read (for example, the first <see cref="M:Microsoft.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</item>
          <item>Tried to read a previously-read column in sequential mode.</item>
          <item>There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.</item>
        </list>
      </exception>
      <exception cref="T:System.IndexOutOfRangeException">
        Trying to read a column that does not exist.
      </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        The value of the column was null (<see cref="M:Microsoft.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />), retrieving a non-SQL type.
      </exception>
      <exception cref="T:System.InvalidCastException">
        <typeparamref name="T" /> doesn't match the type returned by SQL Server or cannot be cast.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a single-precision floating point number.
      </summary>
      <returns>
        The value of the specified column.
      </returns>
      <exception cref="T:System.InvalidCastException">
        The specified cast is not valid.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a globally unique identifier (GUID).
      </summary>
      <returns>
        The value of the specified column.
      </returns>
      <exception cref="T:System.InvalidCastException">
        The specified cast is not valid.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a 16-bit signed integer.
      </summary>
      <returns>
        The value of the specified column.
      </returns>
      <exception cref="T:System.InvalidCastException">
        The specified cast is not valid.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a 32-bit signed integer.
      </summary>
      <returns>
        The value of the specified column.
      </returns>
      <exception cref="T:System.InvalidCastException">
        The specified cast is not valid.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a 64-bit signed integer.
      </summary>
      <returns>
        The value of the specified column.
      </returns>
      <exception cref="T:System.InvalidCastException">
        The specified cast is not valid.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetName(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the name of the specified column.
      </summary>
      <returns>
        The name of the specified column.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)">
      <param name="name">
        The name of the column.
      </param>
      <summary>
        Gets the column ordinal, given the name of the column.
      </summary>
      <returns>
        The zero-based column ordinal.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The name specified is not a valid column name.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)">
      <param name="i">
        An <see cref="T:System.Int32" /> representing the column ordinal.
      </param>
      <summary>
        Gets an <see langword="Object" /> that is a representation of the underlying provider-specific field type.
      </summary>
      <returns>
        Gets an <see cref="T:System.Object" /> that is a representation of the underlying provider-specific field type.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)">
      <param name="i">
        An <see cref="T:System.Int32" /> representing the column ordinal.
      </param>
      <summary>
        Gets an <see langword="Object" /> that is a representation of the underlying provider specific value.
      </summary>
      <returns>
        An <see cref="T:System.Object" /> that is a representation of the underlying provider specific value.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])">
      <param name="values">
        An array of <see cref="T:System.Object" /> into which to copy the column values.
      </param>
      <summary>
        Gets an array of objects that are a representation of the underlying provider specific values.
      </summary>
      <returns>
        The array of objects that are a representation of the underlying provider specific values.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.
      </summary>
      <returns>
        The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlBoolean" />.
      </summary>
      <returns>
        The value of the column.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlByte" />.
      </summary>
      <returns>
        The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlByte" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as <see cref="T:System.Data.SqlTypes.SqlBytes" />.
      </summary>
      <returns>
        The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlBytes" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as <see cref="T:System.Data.SqlTypes.SqlChars" />.
      </summary>
      <returns>
        The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlChars" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDateTime" />.
      </summary>
      <returns>
        The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlDateTime" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.
      </summary>
      <returns>
        The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDouble" />.
      </summary>
      <returns>
        The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlDouble" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlGuid" />.
      </summary>
      <returns>
        The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlGuid" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.
      </summary>
      <returns>
        The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.
      </summary>
      <returns>
        The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.
      </summary>
      <returns>
        The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetSqlJson(System.Int32)">
      <param name="i" />
      <summary>Gets the value of the specified column as a <see cref="T:Microsoft.Data.SqlTypes.SqlJson" />.</summary>
      <returns>A <see cref="T:Microsoft.Data.SqlTypes.SqlJson" /> object representing the column at the given ordinal.</returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.
      </summary>
      <returns>
        The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.
      </summary>
      <returns>
        The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlString" />.
      </summary>
      <returns>
        The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlString" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Returns the data value in the specified column as a SQL Server type.
      </summary>
      <returns>
        The value of the column expressed as a <see cref="T:System.Data.SqlDbType" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])">
      <param name="values">
        An array of <see cref="T:System.Object" /> into which to copy the values. The column values are expressed as SQL Server types.
      </param>
      <summary>
        Fills an array of <see cref="T:System.Object" /> that contains the values for all the columns in the record, expressed as SQL Server types.
      </summary>
      <returns>
        An integer indicating the number of columns copied.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as an XML value.
      </summary>
      <returns>
        A <see cref="T:System.Data.SqlTypes.SqlXml" /> value that contains the XML stored within the corresponding field.
      </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1
      </exception>
      <exception cref="T:System.InvalidOperationException">
        An attempt was made to read or access columns in a closed <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" />.
      </exception>
      <exception cref="T:System.InvalidCastException">
        The retrieved data is not compatible with the <see cref="T:System.Data.SqlTypes.SqlXml" /> type.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetSchemaTable">
      <summary>
        Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" />.
      </summary>
      <returns>
        A <see cref="T:System.Data.DataTable" /> that describes the column metadata.
      </returns>
      <exception cref="T:System.InvalidOperationException">
        The <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> is closed.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetStream(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Retrieves binary, image, varbinary, UDT, and variant data types as a <see cref="T:System.IO.Stream" />.
      </summary>
      <returns>
        A stream object.
      </returns>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>The connection drops or is closed during the data retrieval.</item>
          <item>The <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</item>
          <item>There is no data ready to be read (for example, the first <see cref="M:Microsoft.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</item>
          <item>Tried to read a previously-read column in sequential mode.</item>
          <item>There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.</item>
        </list>
      </exception>
      <exception cref="T:System.IndexOutOfRangeException">
        Trying to read a column that does not exist.
      </exception>
      <exception cref="T:System.InvalidCastException">
        <para>
          The returned type was not one of the types below:
        </para>
        <list type="bullet">
          <item>binary</item>
          <item>image</item>
          <item>varbinary</item>
          <item>udt</item>
        </list>
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetString(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column as a string.
      </summary>
      <returns>
        The value of the specified column.
      </returns>
      <exception cref="T:System.InvalidCastException">
        The specified cast is not valid.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)">
      <param name="i">
        The column to be retrieved.
      </param>
      <summary>
        Retrieves Char, NChar, NText, NVarChar, text, varChar, and Variant data types as a <see cref="T:System.IO.TextReader" />.
      </summary>
      <returns>
        The returned object.
      </returns>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>The connection drops or is closed during the data retrieval.</item>
          <item>The <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</item>
          <item>There is no data ready to be read (for example, the first <see cref="M:Microsoft.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</item>
          <item>Tried to read a previously-read column in sequential mode.</item>
          <item>There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.</item>
        </list>
      </exception>
      <exception cref="T:System.IndexOutOfRangeException">
        Trying to read a column that does not exist.
      </exception>
      <exception cref="T:System.InvalidCastException">
        <para>The returned type was not one of the types below:</para>
        <list type="bullet">
          <item>char</item>
          <item>nchar</item>
          <item>ntext</item>
          <item>nvarchar</item>
          <item>text</item>
          <item>varchar</item>
        </list>
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Retrieves the value of the specified column as a <see cref="T:System.TimeSpan" /> object.
      </summary>
      <returns>
        The value of the specified column.
      </returns>
      <exception cref="T:System.InvalidCastException">
        The specified cast is not valid.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetValue(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets the value of the specified column in its native format.
      </summary>
      <returns>
        This method returns <see cref="T:System.DBNull" /> for null database columns.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetValues(System.Object[])">
      <param name="values">
        An array of <see cref="T:System.Object" /> into which to copy the attribute columns.
      </param>
      <summary>
        Populates an array of objects with the column values of the current row.
      </summary>
      <returns>
        The number of instances of <see cref="T:System.Object" /> in the array.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)">
      <param name="i">
        The value of the specified column.
      </param>
      <summary>
        Retrieves data of type XML as an <see cref="T:System.Xml.XmlReader" />.
      </summary>
      <returns>
        The returned object.
      </returns>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>The connection drops or is closed during the data retrieval.</item>
          <item>The <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</item>
          <item>There is no data ready to be read (for example, the first <see cref="M:Microsoft.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</item>
          <item>Trying to read a previously read column in sequential mode.</item>
          <item>There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.</item>
        </list>
      </exception>
      <exception cref="T:System.IndexOutOfRangeException">
        Trying to read a column that does not exist.
      </exception>
      <exception cref="T:System.InvalidCastException">
        The returned type was not xml.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior)">
      <param name="condition">
        A <see cref="T:System.Data.CommandBehavior" /> enumeration.
      </param>
      <summary>
        Determines whether the specified <see cref="T:System.Data.CommandBehavior" /> matches that of the <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" />.
      </summary>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Data.CommandBehavior" /> is true, <see langword="false" /> otherwise.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)">
      <param name="i">
        The zero-based column ordinal.
      </param>
      <summary>
        Gets a value that indicates whether the column contains non-existent or missing values.
      </summary>
      <returns>
        <see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" /> ; otherwise <see langword="false" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
      <param name="i">
        The zero-based column to be retrieved.
      </param>
      <param name="cancellationToken">
        The cancellation instruction, which propagates a notification that operations should be canceled. This does not guarantee the cancellation. A setting of <see langword="CancellationToken.None" /> makes this method equivalent to <see cref="M:Microsoft.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />. The returned task must be marked as cancelled.
      </param>
      <summary>
        <para>
          An asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />, which gets a value that indicates whether the column contains non-existent or missing values.
        </para>
        <para>
          The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.
        </para>
      </summary>
      <returns>
        <see langword="true" /> if the specified column value is equivalent to <see langword="DBNull" /> otherwise <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>The connection drops or is closed during the data retrieval.</item>
          <item>The <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</item>
          <item>There is no data ready to be read (for example, the first <see cref="M:Microsoft.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</item>
          <item>Trying to read a previously read column in sequential mode.</item>
          <item>There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.</item>
        </list>
      </exception>
      <exception cref="T:System.IndexOutOfRangeException">
        Trying to read a column that does not exist.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.NextResult">
      <summary>
        Advances the data reader to the next result, when reading the results of batch Transact-SQL statements.
      </summary>
      <returns>
        <see langword="true" /> if there are more result sets; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <param name="cancellationToken">
        The cancellation instruction.
      </param>
      <summary>
        <para>
          An asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlDataReader.NextResult" />, which advances the data reader to the next result, when reading the results of batch Transact-SQL statements.
        </para>
        <para>
          The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.
        </para>
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidOperationException">
        Calling <see cref="M:Microsoft.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        SQL Server returned an error while executing the command text.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.Read">
      <summary>
        Advances the <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> to the next record.
      </summary>
      <returns>
        <see langword="true" /> if there are more rows; otherwise <see langword="false" /></returns>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        SQL Server returned an error while executing the command text.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)">
      <param name="cancellationToken">
        The cancellation instruction.
      </param>
      <summary>
        <para>
          An asynchronous version of <see cref="M:Microsoft.Data.SqlClient.SqlDataReader.Read" />, which advances the <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" /> to the next record.
        </para>
        <para>
          The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.
        </para>
      </summary>
      <returns>
        A task representing the asynchronous operation.
      </returns>
      <exception cref="T:System.InvalidOperationException">
        Calling <see cref="M:Microsoft.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        SQL Server returned an error while executing the command text.
      </exception>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlDependency">
      <summary>
        The <see cref="T:Microsoft.Data.SqlClient.SqlDependency" /> object represents a query notification dependency between an application and an instance of SQL Server. An application can create a <see cref="T:Microsoft.Data.SqlClient.SqlDependency" /> object and register to receive notifications via the <see cref="T:Microsoft.Data.SqlClient.OnChangeEventHandler" /> event handler.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDependency.#ctor">
      <summary>
        Creates a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlDependency" /> class with the default settings.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDependency.#ctor(Microsoft.Data.SqlClient.SqlCommand)">
      <param name="command">
        The <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object to associate with this <see cref="T:Microsoft.Data.SqlClient.SqlDependency" /> object. The constructor will set up a <see cref="T:Microsoft.Data.Sql.SqlNotificationRequest" /> object and bind it to the command.
      </param>
      <summary>
        Creates a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlDependency" /> class and associates it with the <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> parameter.
      </summary>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="command" /> parameter is NULL.
      </exception>
      <exception cref="T:System.InvalidOperationException">
        The <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object already has a <see cref="T:Microsoft.Data.Sql.SqlNotificationRequest" /> object assigned to its <see cref="P:Microsoft.Data.SqlClient.SqlCommand.Notification" /> property, and that <see cref="T:Microsoft.Data.Sql.SqlNotificationRequest" /> is not associated with this dependency.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDependency.#ctor(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Int32)">
      <param name="command">
        The <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object to associate with this <see cref="T:Microsoft.Data.SqlClient.SqlDependency" /> object. The constructor sets up a <see cref="T:Microsoft.Data.Sql.SqlNotificationRequest" /> object and bind it to the command.
      </param>
      <param name="options">
        The notification request options to be used by this dependency. <see langword="null" /> to use the default service.
      </param>
      <param name="timeout">
        The time-out for this notification in seconds. The default is 0, indicating that the server's time-out should be used.
      </param>
      <summary>
        Creates a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlDependency" /> class, associates it with the <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> parameter, and specifies notification options and a time-out value.
      </summary>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="command" /> parameter is NULL.
      </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The time-out value is less than zero.
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>
            The <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object already has a <see cref="T:Microsoft.Data.Sql.SqlNotificationRequest" /> object assigned to its <see cref="P:Microsoft.Data.SqlClient.SqlCommand.Notification" /> property and that <see cref="T:Microsoft.Data.Sql.SqlNotificationRequest" /> is not associated with this dependency.
          </item>
          <item>
            An attempt was made to create a <see cref="T:Microsoft.Data.SqlClient.SqlDependency" /> instance from within SQLCLR.
          </item>
        </list>
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlDependency.HasChanges">
      <summary>
        Gets a value that indicates whether one of the result sets associated with the dependency has changed.
      </summary>
      <value>
        A Boolean value indicating whether one of the result sets has changed.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlDependency.Id">
      <summary>
        Gets a value that uniquely identifies this instance of the <see cref="T:Microsoft.Data.SqlClient.SqlDependency" /> class.
      </summary>
      <value>
        A string representation of a GUID that is generated for each instance of the <see cref="T:Microsoft.Data.SqlClient.SqlDependency" /> class.
      </value>
    </member>
    <member name="E:Microsoft.Data.SqlClient.SqlDependency.OnChange">
      <summary>
        Occurs when a notification is received for any of the commands associated with this <see cref="T:Microsoft.Data.SqlClient.SqlDependency" /> object.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDependency.AddCommandDependency(Microsoft.Data.SqlClient.SqlCommand)">
      <param name="command">
        A <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object containing a statement that is valid for notifications.
      </param>
      <summary>
        Associates a <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object with this <see cref="T:Microsoft.Data.SqlClient.SqlDependency" /> instance.
      </summary>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="command" /> parameter is null.
      </exception>
      <exception cref="T:System.InvalidOperationException">
        The <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> object already has a <see cref="T:Microsoft.Data.Sql.SqlNotificationRequest" /> object assigned to its <see cref="P:Microsoft.Data.SqlClient.SqlCommand.Notification" /> property, and that <see cref="T:Microsoft.Data.Sql.SqlNotificationRequest" /> is not associated with this dependency.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDependency.Start(System.String)">
      <param name="connectionString">
        The connection string for the instance of SQL Server from which to obtain change notifications.
      </param>
      <summary>
        Starts the listener for receiving dependency change notifications from the instance of SQL Server specified by the connection string.
      </summary>
      <returns>
        <see langword="true" /> if the listener initialized successfully; <see langword="false" /> if a compatible listener already exists.</returns>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="connectionString" /> parameter is NULL.
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>The <paramref name="connectionString" /> parameter is the same as a previous call to this method, but the parameters are different.</item>
          <item>The method was called from within the CLR.</item>
        </list>
      </exception>
      <exception cref="T:System.Security.SecurityException">
        The caller does not have the required <see cref="T:Microsoft.Data.SqlClient.SqlClientPermission" /> code access security (CAS) permission.
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        A subsequent call to the method has been made with an equivalent <paramref name="connectionString" /> parameter with a different user, or a user that does not default to the same schema. Also, any underlying <b>SqlClient</b> exceptions.
      </exception>
      <seealso cref="P:Microsoft.Data.SqlClient.SqlConnection.ConnectionString" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDependency.Start(System.String,System.String)">
      <param name="connectionString">
        The connection string for the instance of SQL Server from which to obtain change notifications.
      </param>
      <param name="queue">
        An existing SQL Server Service Broker queue to be used. If <see langword="null" />, the default queue is used.
      </param>
      <summary>
        Starts the listener for receiving dependency change notifications from the instance of SQL Server specified by the connection string using the specified SQL Server Service Broker queue.
      </summary>
      <returns>
        <see langword="true" /> if the listener initialized successfully; <see langword="false" /> if a compatible listener already exists.</returns>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="connectionString" /> parameter is NULL.
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>The <paramref name="connectionString" /> parameter is the same as a previous call to this method, but the parameters are different.</item>
          <item>The method was called from within the CLR.</item>
        </list>
      </exception>
      <exception cref="T:System.Security.SecurityException">
        The caller does not have the required <see cref="T:Microsoft.Data.SqlClient.SqlClientPermission" /> code access security (CAS) permission.
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        A subsequent call to the method has been made with an equivalent <paramref name="connectionString" /> parameter but a different user, or a user that does not default to the same schema. Also, any underlying <b>SqlClient</b> exceptions.
      </exception>
      <seealso cref="P:Microsoft.Data.SqlClient.SqlConnection.ConnectionString" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDependency.Stop(System.String)">
      <param name="connectionString">
        Connection string for the instance of SQL Server that was used in a previous <see cref="M:Microsoft.Data.SqlClient.SqlDependency.Start(System.String)" /> call.
      </param>
      <summary>
        Stops a listener for a connection specified in a previous <see cref="M:Microsoft.Data.SqlClient.SqlDependency.Start(System.String)" /> call.
      </summary>
      <returns>
        <see langword="true" /> if the listener was completely stopped; <see langword="false" /> if the <see cref="T:System.AppDomain" /> was unbound from the listener, but there are is at least one other <see cref="T:System.AppDomain" /> using the same listener.</returns>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="connectionString" /> parameter is NULL.
      </exception>
      <exception cref="T:System.InvalidOperationException">
        The method was called from within SQLCLR.
      </exception>
      <exception cref="T:System.Security.SecurityException">
        The caller does not have the required <see cref="T:Microsoft.Data.SqlClient.SqlClientPermission" /> code access security (CAS) permission.
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        An underlying <b>SqlClient</b> exception occurred.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlDependency.Stop(System.String,System.String)">
      <param name="connectionString">
        Connection string for the instance of SQL Server that was used in a previous <see cref="M:Microsoft.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> call.
      </param>
      <param name="queue">
        The SQL Server Service Broker queue that was used in a previous <see cref="M:Microsoft.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> call.
      </param>
      <summary>
        Stops a listener for a connection specified in a previous <see cref="M:Microsoft.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> call.
      </summary>
      <returns>
        <see langword="true" /> if the listener was completely stopped; <see langword="false" /> if the <see cref="T:System.AppDomain" /> was unbound from the listener, but there is at least one other <see cref="T:System.AppDomain" /> using the same listener.</returns>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="connectionString" /> parameter is NULL.
      </exception>
      <exception cref="T:System.InvalidOperationException">
        The method was called from within SQLCLR.
      </exception>
      <exception cref="T:System.Security.SecurityException">
        The caller does not have the required <see cref="T:Microsoft.Data.SqlClient.SqlClientPermission" /> code access security (CAS) permission.
      </exception>
      <exception cref="T:Microsoft.Data.SqlClient.SqlException">
        And underlying <b>SqlClient</b> exception occurred.
      </exception>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlError">
      <summary>
        Collects information relevant to a warning or error returned by SQL Server.
      </summary>
      <seealso cref="T:Microsoft.Data.SqlClient.SqlErrorCollection" />
      <seealso cref="T:Microsoft.Data.SqlClient.SqlException" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlError.#ctor">
      <summary>Constructs a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlError" /> class.</summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlError.Class">
      <summary>
        Gets the severity level of the error returned from SQL Server.
      </summary>
      <value>
        A value from 1 to 25 that indicates the severity level of the error. The default is 0.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlError.LineNumber">
      <summary>
        Gets the line number within the Transact-SQL command batch or stored procedure that contains the error.
      </summary>
      <value>
        The line number within the Transact-SQL command batch or stored procedure that contains the error.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlError.Message">
      <summary>
        Gets the text describing the error.
      </summary>
      <value>
        The text describing the error. For more information on errors generated by SQL Server, see <see href="https://learn.microsoft.com/sql/relational-databases/errors-events/database-engine-events-and-errors">
          Database Engine Events and Errors
        </see>.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlError.Number">
      <summary>
        Gets a number that identifies the type of error.
      </summary>
      <value>
        The number that identifies the type of error.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlError.Procedure">
      <summary>
        Gets the name of the stored procedure or remote procedure call (RPC) that generated the error.
      </summary>
      <value>
        The name of the stored procedure or RPC. For more information on errors generated by SQL Server, see <see href="https://learn.microsoft.com/sql/relational-databases/errors-events/database-engine-events-and-errors">Database Engine Events and Errors</see>.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlError.Server">
      <summary>
        Gets the name of the instance of SQL Server that generated the error.
      </summary>
      <value>
        The name of the instance of SQL Server.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlError.Source">
      <summary>
        Gets the name of the provider that generated the error.
      </summary>
      <value>
        The name of the provider that generated the error.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlError.State">
      <summary>
        Some error messages can be raised at multiple points in the code for the Database Engine. For example, an 1105 error can be raised for several different conditions. Each specific condition that raises an error assigns a unique state code.
      </summary>
      <value>
        The state code.
      </value>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlError.ToString">
      <summary>
        Gets the complete text of the error message.
      </summary>
      <returns>
        The complete text of the error.
      </returns>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlErrorCollection">
      <summary>
        Collects all errors generated by the .NET Framework Data Provider for SQL Server. This class cannot be inherited.
      </summary>
      <seealso cref="T:Microsoft.Data.SqlClient.SqlError" />
      <seealso cref="T:Microsoft.Data.SqlClient.SqlException" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlErrorCollection.#ctor">
      <summary>Constructs and initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlErrorCollection" /> class.</summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlErrorCollection.Count">
      <summary>
        Gets the number of errors in the collection.
      </summary>
      <value>
        The total number of errors in the collection.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlErrorCollection.Item(System.Int32)">
      <param name="index">
        The zero-based index of the error to retrieve.
      </param>
      <summary>
        Gets the error at the specified index.
      </summary>
      <value>
        A <see cref="T:Microsoft.Data.SqlClient.SqlError" /> that contains the error at the specified index.
      </value>
      <exception cref="T:System.IndexOutOfRangeException">
        Index parameter is outside array bounds.
      </exception>
      <seealso cref="P:Microsoft.Data.SqlClient.SqlErrorCollection.Count" />
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlErrorCollection.System#Collections#ICollection#IsSynchronized">
      <summary>
        For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.
      </summary>
      <value>
        <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlErrorCollection.System#Collections#ICollection#SyncRoot">
      <summary>
        For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.
      </summary>
      <value>
        An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
      </value>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlErrorCollection.CopyTo(System.Array,System.Int32)">
      <param name="array">
        The <see cref="T:System.Array" /> to copy elements into.
      </param>
      <param name="index">
        The index from which to start copying into the <paramref name="array" /> parameter.
      </param>
      <summary>
        Copies the elements of the <see cref="T:Microsoft.Data.SqlClient.SqlErrorCollection" /> collection into an <see cref="T:System.Array" />, starting at the specified index.
      </summary>
      <exception cref="T:System.ArgumentException">
        The sum of <paramref name="index" /> and the number of elements in the <see cref="T:Microsoft.Data.SqlClient.SqlErrorCollection" /> collection is greater than the <see cref="P:System.Array.Length" /> of the <see cref="T:System.Array" />.
      </exception>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="array" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="index" /> is not valid for <paramref name="array" />.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlErrorCollection.CopyTo(Microsoft.Data.SqlClient.SqlError[],System.Int32)">
      <param name="array">
        The <see cref="T:Microsoft.Data.SqlClient.SqlErrorCollection" /> to copy the elements into.
      </param>
      <param name="index">
        The index from which to start copying into the <paramref name="array" /> parameter.
      </param>
      <summary>
        Copies the elements of the <see cref="T:Microsoft.Data.SqlClient.SqlErrorCollection" /> collection into a <see cref="T:Microsoft.Data.SqlClient.SqlErrorCollection" />, starting at the specified index.
      </summary>
      <exception cref="T:System.ArgumentException">
        The sum of <paramref name="index" /> and the number of elements in the <see cref="T:Microsoft.Data.SqlClient.SqlErrorCollection" /> collection is greater than the length of the <see cref="T:Microsoft.Data.SqlClient.SqlErrorCollection" />.
      </exception>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="array" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="index" /> is not valid for <paramref name="array" />.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlErrorCollection.GetEnumerator">
      <summary>
        Returns an enumerator that iterates through the <see cref="T:Microsoft.Data.SqlClient.SqlErrorCollection" />.
      </summary>
      <returns>
        An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:Microsoft.Data.SqlClient.SqlErrorCollection" />.
      </returns>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlException">
      <summary>
        The exception that is thrown when SQL Server returns a warning or error. This class cannot be inherited.
      </summary>
      <seealso cref="T:Microsoft.Data.SqlClient.SqlError" />
      <seealso cref="T:Microsoft.Data.SqlClient.SqlErrorCollection" />
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlException.Class">
      <summary>
        Gets the severity level of the error returned from the .NET Framework Data Provider for SQL Server.
      </summary>
      <value>
        A value from 1 to 25 that indicates the severity level of the error.
      </value>
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Number" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Source" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.State" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Server" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Procedure" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.LineNumber" />
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlException.ClientConnectionId">
      <summary>
        Represents the client connection ID. For more information, see <see href="https://learn.microsoft.com/sql/connect/ado-net/data-tracing">Data Tracing in ADO.NET</see>.
      </summary>
      <value>
        The client connection ID.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlException.Errors">
      <summary>
        Gets a collection of one or more <see cref="T:Microsoft.Data.SqlClient.SqlError" /> objects that give detailed information about exceptions generated by the .NET Framework Data Provider for SQL Server.
      </summary>
      <value>
        The collected instances of the <see cref="T:Microsoft.Data.SqlClient.SqlError" /> class.
      </value>
      <seealso cref="T:Microsoft.Data.SqlClient.SqlErrorCollection" />
      <seealso cref="T:Microsoft.Data.SqlClient.SqlError" />
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlException.LineNumber">
      <summary>
        Gets the line number within the Transact-SQL command batch or stored procedure that generated the error.
      </summary>
      <value>
        The line number within the Transact-SQL command batch or stored procedure that generated the error.
      </value>
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Number" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Source" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.State" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Class" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Server" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Procedure" />
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlException.Number">
      <summary>
        Gets a number that identifies the type of error.
      </summary>
      <value>
        The number that identifies the type of error.
      </value>
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.State" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Class" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Source" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Server" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Procedure" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.LineNumber" />
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlException.Procedure">
      <summary>
        Gets the name of the stored procedure or remote procedure call (RPC) that generated the error.
      </summary>
      <value>
        The name of the stored procedure or RPC.
      </value>
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Number" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.State" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Class" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Server" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Source" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.LineNumber" />
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlException.Server">
      <summary>
        Gets the name of the computer that is running an instance of SQL Server that generated the error.
      </summary>
      <value>
        The name of the computer running an instance of SQL Server.
      </value>
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Number" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.State" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Source" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Class" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Procedure" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.LineNumber" />
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlException.Source">
      <summary>
        Gets the name of the provider that generated the error.
      </summary>
      <value>
        The name of the provider that generated the error.
      </value>
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Number" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.State" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Class" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Server" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Procedure" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.LineNumber" />
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlException.State">
      <summary>
        Gets a numeric error code from SQL Server that represents an error, warning or "no data found" message. For more information about how to decode these values, see <see href="https://learn.microsoft.com/sql/relational-databases/errors-events/database-engine-events-and-errors">Database Engine Events and Errors</see>.
      </summary>
      <value>
        The number representing the error code.
      </value>
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Class" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Number" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Source" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Server" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.Procedure" />
      <seealso cref="P:Microsoft.Data.SqlClient.SqlException.LineNumber" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlException.ToString">
      <summary>
        Returns a string that represents the current <see cref="T:Microsoft.Data.SqlClient.SqlException" /> object, and includes the client connection ID (for more information, see <see cref="P:Microsoft.Data.SqlClient.SqlException.ClientConnectionId" />).
      </summary>
      <returns>
        A string that represents the current <see cref="T:Microsoft.Data.SqlClient.SqlException" /> object. <see cref="T:System.String" />.
      </returns>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlInfoMessageEventArgs">
      <summary>
        Provides data for the <see cref="E:Microsoft.Data.SqlClient.SqlConnection.InfoMessage" /> event.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlInfoMessageEventArgs.Errors">
      <summary>
        Gets the collection of warnings sent from the server.
      </summary>
      <value>
        The collection of warnings sent from the server.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlInfoMessageEventArgs.Message">
      <summary>
        Gets the full text of the error sent from the database.
      </summary>
      <value>
        The full text of the error.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlInfoMessageEventArgs.Source">
      <summary>
        Gets the name of the object that generated the error.
      </summary>
      <value>
        The name of the object that generated the error.
      </value>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlInfoMessageEventArgs.ToString">
      <summary>
        Retrieves a string representation of the <see cref="E:Microsoft.Data.SqlClient.SqlConnection.InfoMessage" /> event.
      </summary>
      <returns>
        A string representing the <see cref="E:Microsoft.Data.SqlClient.SqlConnection.InfoMessage" /> event.
      </returns>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlInfoMessageEventHandler">
      <param name="sender">
        The source of the event.
      </param>
      <param name="e">
        A <see cref="T:Microsoft.Data.SqlClient.SqlInfoMessageEventArgs" /> object that contains the event data.
      </param>
      <summary>
        Represents the method that will handle the <see cref="E:Microsoft.Data.SqlClient.SqlConnection.InfoMessage" /> event of a <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> .
      </summary>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlNotificationEventArgs">
      <summary>
        Represents the set of arguments passed to the notification event handler.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlNotificationEventArgs.#ctor(Microsoft.Data.SqlClient.SqlNotificationType,Microsoft.Data.SqlClient.SqlNotificationInfo,Microsoft.Data.SqlClient.SqlNotificationSource)">
      <param name="type">
        <see cref="T:Microsoft.Data.SqlClient.SqlNotificationType" /> value that indicates whether this notification is generated because of an actual change, or by the subscription.
      </param>
      <param name="info">
        <see cref="T:Microsoft.Data.SqlClient.SqlNotificationInfo" /> value that indicates the reason for the notification event. This may occur because the data in the store actually changed, or the notification became invalid (for example, it timed out).
      </param>
      <param name="source">
        <see cref="T:Microsoft.Data.SqlClient.SqlNotificationSource" /> value that indicates the source that generated the notification.
      </param>
      <summary>
        Creates a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlNotificationEventArgs" /> object.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlNotificationEventArgs.Info">
      <summary>
        Gets a value that indicates the reason for the notification event, such as a row in the database being modified or a table being truncated.
      </summary>
      <value>
        The notification event reason.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlNotificationEventArgs.Source">
      <summary>
        Gets a value that indicates the source that generated the notification, such as a change to the query data or the database's state.
      </summary>
      <value>
        The source of the notification.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlNotificationEventArgs.Type">
      <summary>
        Gets a value that indicates whether this notification is generated because of an actual change, or by the subscription.
      </summary>
      <value>
        A value indicating whether the notification was generated by a change or a subscription.
      </value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlNotificationInfo">
      <summary>
        This enumeration provides additional information about the different notifications that can be received by the dependency event handler.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationInfo.AlreadyChanged">
      <summary>
        The <see cref="T:Microsoft.Data.SqlClient.SqlDependency" /> object already fired, and new commands cannot be added to it.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationInfo.Alter">
      <summary>
        An underlying server object related to the query was modified.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationInfo.Delete">
      <summary>
        Data was changed by a DELETE statement.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationInfo.Drop">
      <summary>
        An underlying object related to the query was dropped.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationInfo.Error">
      <summary>
        An internal server error occurred.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationInfo.Expired">
      <summary>
        The <see cref="T:Microsoft.Data.SqlClient.SqlDependency" /> object has expired.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationInfo.Insert">
      <summary>
        Data was changed by an INSERT statement.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationInfo.Invalid">
      <summary>
        A statement was provided that cannot be notified (for example, an UPDATE statement).
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationInfo.Isolation">
      <summary>
        The statement was executed under an isolation mode that was not valid (for example, Snapshot).
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationInfo.Merge">
      <summary>
        Used to distinguish the server-side cause for a query notification firing.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationInfo.Options">
      <summary>
        The SET options were not set appropriately at subscription time.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationInfo.PreviousFire">
      <summary>
        A previous statement has caused query notifications to fire under the current transaction.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationInfo.Query">
      <summary>
        A SELECT statement that cannot be notified or was provided.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationInfo.Resource">
      <summary>
        Fires as a result of server resource pressure.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationInfo.Restart">
      <summary>
        The server was restarted (notifications are sent during restart.).
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationInfo.TemplateLimit">
      <summary>
        The subscribing query causes the number of templates on one of the target tables to exceed the maximum allowable limit.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationInfo.Truncate">
      <summary>
        One or more tables were truncated.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationInfo.Unknown">
      <summary>
        Used when the info option sent by the server was not recognized by the client.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationInfo.Update">
      <summary>
        Data was changed by an UPDATE statement.
      </summary>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlNotificationSource">
      <summary>
        Indicates the source of the notification received by the dependency event handler.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationSource.Client">
      <summary>
        A client-initiated notification occurred, such as a client-side time-out or as a result of attempting to add a command to a dependency that has already fired.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationSource.Data">
      <summary>
        Data has changed; for example, an INSERT, UPDATE, DELETE, or TRUNCATE operation occurred.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationSource.Database">
      <summary>
        The database state changed; for example, the database related to the query was dropped or detached.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationSource.Environment">
      <summary>
        The run-time environment was not compatible with notifications; for example, the isolation level was set to snapshot, or one or more SET options are not compatible.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationSource.Execution">
      <summary>
        A run-time error occurred during execution.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationSource.Object">
      <summary>
        A database object changed; for example, an underlying object related to the query was dropped or modified.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationSource.Owner">
      <summary>
        Internal only; not intended to be used in your code.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationSource.Statement">
      <summary>
        The Transact-SQL statement is not valid for notifications; for example, a SELECT statement that could not be notified or a non-SELECT statement was executed.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationSource.System">
      <summary>
        A system-related event occurred. For example, there was an internal error, the server was restarted, or resource pressure caused the invalidation.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationSource.Timeout">
      <summary>
        The subscription time-out expired.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationSource.Unknown">
      <summary>
        Used when the source option sent by the server was not recognized by the client.
      </summary>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlNotificationType">
      <summary>
        Describes the different notification types that can be received by an <see cref="T:Microsoft.Data.SqlClient.OnChangeEventHandler" /> event handler through the <see cref="T:Microsoft.Data.SqlClient.SqlNotificationEventArgs" /> parameter.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationType.Change">
      <summary>
        Data on the server being monitored changed. Use the <see cref="T:Microsoft.Data.SqlClient.SqlNotificationInfo" /> item to determine the details of the change.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationType.Subscribe">
      <summary>
        There was a failure to create a notification subscription. Use the <see cref="T:Microsoft.Data.SqlClient.SqlNotificationEventArgs" /> object's <see cref="T:Microsoft.Data.SqlClient.SqlNotificationInfo" /> item to determine the cause of the failure.
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.SqlNotificationType.Unknown">
      <summary>
        Used when the type option sent by the server was not recognized by the client.
      </summary>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlParameter">
      <summary>
        Represents a parameter to a <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> and optionally its mapping to <see cref="T:System.Data.DataSet" /> columns. This class cannot be inherited. For more information on parameters, see <see href="https://learn.microsoft.com/sql/connect/ado-net/configure-parameters">Configuring parameters</see></summary>
      <seealso cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />
      <seealso cref="T:Microsoft.Data.SqlClient.SqlCommand" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameter.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> class.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)">
      <param name="parameterName">
        The name of the parameter to map.
      </param>
      <param name="dbType">
        One of the <see cref="T:System.Data.SqlDbType" /> values.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> class that uses the parameter name and the data type.
      </summary>
      <exception cref="T:System.ArgumentException">
        The value supplied in the <paramref name="dbType" /> parameter is an invalid back-end data type.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)">
      <param name="parameterName">
        The name of the parameter to map.
      </param>
      <param name="dbType">
        One of the <see cref="T:System.Data.SqlDbType" /> values.
      </param>
      <param name="size">
        The length of the parameter.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> class that uses the parameter name, the <see cref="T:System.Data.SqlDbType" />, and the size.
      </summary>
      <exception cref="T:System.ArgumentException">
        The value supplied in the <paramref name="dbType" /> parameter is an invalid back-end data type.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <param name="parameterName">
        The name of the parameter to map.
      </param>
      <param name="dbType">
        One of the <see cref="T:System.Data.SqlDbType" /> values.
      </param>
      <param name="size">
        The length of the parameter.
      </param>
      <param name="direction">
        One of the <see cref="T:System.Data.ParameterDirection" /> values.
      </param>
      <param name="isNullable">
        <see langword="true" /> if the value of the field can be null; otherwise, <see langword="false" />.
      </param>
      <param name="precision">
        The total number of digits to the left and right of the decimal point to which <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> is resolved.
      </param>
      <param name="scale">
        The total number of decimal places to which <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> is resolved.
      </param>
      <param name="sourceColumn">
        The name of the source column (<see cref="P:Microsoft.Data.SqlClient.SqlParameter.SourceColumn" />) if this <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> is used in a call to <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.
      </param>
      <param name="sourceVersion">
        One of the <see cref="T:System.Data.DataRowVersion" /> values.
      </param>
      <param name="value">
        An <see cref="T:System.Object" /> that is the value of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" />.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> class that uses the parameter name, the type of the parameter, the size of the parameter, a <see cref="T:System.Data.ParameterDirection" />, the precision of the parameter, the scale of the parameter, the source column, a <see cref="T:System.Data.DataRowVersion" /> to use, and the value of the parameter.
      </summary>
      <exception cref="T:System.ArgumentException">
        The value supplied in the <paramref name="dbType" /> parameter is an invalid back-end data type.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)">
      <param name="parameterName">
        The name of the parameter to map.
      </param>
      <param name="dbType">
        One of the <see cref="T:System.Data.SqlDbType" /> values.
      </param>
      <param name="size">
        The length of the parameter.
      </param>
      <param name="direction">
        One of the <see cref="T:System.Data.ParameterDirection" /> values.
      </param>
      <param name="precision">
        The total number of digits to the left and right of the decimal point to which <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> is resolved.
      </param>
      <param name="scale">
        The total number of decimal places to which <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> is resolved.
      </param>
      <param name="sourceColumn">
        The name of the source column ( <see cref="P:Microsoft.Data.SqlClient.SqlParameter.SourceColumn" />) if this <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> is used in a call to <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> &gt;.
      </param>
      <param name="sourceVersion">
        One of the <see cref="T:System.Data.DataRowVersion" /> values.
      </param>
      <param name="sourceColumnNullMapping">
        <see langword="true" /> if the source column is nullable; <see langword="false" /> if it is not.
      </param>
      <param name="value">
        An <see cref="T:System.Object" /> that is the value of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" />.
      </param>
      <param name="xmlSchemaCollectionDatabase">
        The name of the database where the schema collection for this XML instance is located.
      </param>
      <param name="xmlSchemaCollectionOwningSchema">
        The owning relational schema where the schema collection for this XML instance is located.
      </param>
      <param name="xmlSchemaCollectionName">
        The name of the schema collection for this parameter.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> class that uses the parameter name, the type of the parameter, the length of the parameter the direction, the precision, the scale, the name of the source column, one of the <see cref="T:System.Data.DataRowVersion" /> values, a Boolean for source column mapping, the value of the <see langword="SqlParameter" />, the name of the database where the schema collection for this XML instance is located, the owning relational schema where the schema collection for this XML instance is located, and the name of the schema collection for this parameter.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)">
      <param name="parameterName">
        The name of the parameter to map.
      </param>
      <param name="dbType">
        One of the <see cref="T:System.Data.SqlDbType" /> values.
      </param>
      <param name="size">
        The length of the parameter.
      </param>
      <param name="sourceColumn">
        The name of the source column (<see cref="P:Microsoft.Data.SqlClient.SqlParameter.SourceColumn" />) if this <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> is used in a call to <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> &gt;.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> class that uses the parameter name, the <see cref="T:System.Data.SqlDbType" />, the size, and the source column name.
      </summary>
      <exception cref="T:System.ArgumentException">
        The value supplied in the <paramref name="dbType" /> parameter is an invalid back-end data type.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)">
      <param name="parameterName">
        The name of the parameter to map.
      </param>
      <param name="value">
        An <see cref="T:System.Object" /> that is the value of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" />.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> class that uses the parameter name and a value of the new <see cref="T:Microsoft.Data.SqlClient.SqlParameter" />.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.CompareInfo">
      <summary>
        Gets or sets the <see cref="T:System.Globalization.CompareInfo" /> object that defines how string comparisons should be performed for this parameter.
      </summary>
      <value>
        A <see cref="T:System.Globalization.CompareInfo" /> object that defines string comparison for this parameter.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.DbType">
      <summary>
        Gets or sets the <see cref="T:System.Data.SqlDbType" /> of the parameter.
      </summary>
      <value>
        One of the <see cref="T:System.Data.SqlDbType" /> values. The default is <c>NVARCHAR</c>.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.Direction">
      <summary>
        Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.
      </summary>
      <value>
        One of the <see cref="T:System.Data.ParameterDirection" /> values. The default is <see langword="Input" />.
      </value>
      <exception cref="T:System.ArgumentException">
        The property was not set to one of the valid <see cref="T:System.Data.ParameterDirection" /> values.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.ForceColumnEncryption">
      <summary>
        Enforces encryption of a parameter when using <see href="https://learn.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>. If SQL Server informs the driver that the parameter does not need to be encrypted, the query using the parameter will fail. This property provides additional protection against security attacks that involve a compromised SQL Server providing incorrect encryption metadata to the client, which may lead to data disclosure.
      </summary>
      <value>
        <see langword="true" /> if the parameter has a force column encryption; otherwise, <see langword="false" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.IsNullable">
      <summary>
        Gets or sets a value that indicates whether the parameter accepts null values. <see cref="P:Microsoft.Data.SqlClient.SqlParameter.IsNullable" /> is not used to validate the parameter's value and will not prevent sending or receiving a null value when executing a command.
      </summary>
      <value>
        <see langword="true" /> if null values are accepted; otherwise, <see langword="false" />. The default is <see langword="false" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.LocaleId">
      <summary>
        Gets or sets the locale identifier that determines conventions and language for a particular region.
      </summary>
      <value>
        The locale identifier associated with the parameter.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.Offset">
      <summary>
        Gets or sets the offset to the <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> property.
      </summary>
      <value>
        The offset to the <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" />. The default is 0.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.ParameterName">
      <summary>
        Gets or sets the name of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" />.
      </summary>
      <value>
        The name of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" />. The default is an empty string.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.Precision">
      <summary>
        Gets or sets the maximum number of digits used to represent the <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> property.
      </summary>
      <value>
        The maximum number of digits used to represent the <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> property. The default value is 0. This indicates that the data provider sets the precision for <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.Scale">
      <summary>
        Gets or sets the number of decimal places to which <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> is resolved.
      </summary>
      <value>
        The number of decimal places to which <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /> is resolved. The default is 0.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.Size">
      <summary>
        Gets or sets the maximum size, in bytes, of the data within the column.
      </summary>
      <value>
        The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.SourceColumn">
      <summary>
        Gets or sets the name of the source column mapped to the <see cref="T:System.Data.DataSet" /> and used for loading or returning the <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /></summary>
      <value>
        The name of the source column mapped to the <see cref="T:System.Data.DataSet" />. The default is an empty string.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.SourceColumnNullMapping">
      <summary>
        Sets or gets a value which indicates whether the source column is nullable. This allows <see cref="T:Microsoft.Data.SqlClient.SqlCommandBuilder" /> to correctly generate Update statements for nullable columns.
      </summary>
      <value>
        <see langword="true" /> if the source column is nullable; <see langword="false" /> if it is not.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.SourceVersion">
      <summary>
        Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when you load <see cref="P:Microsoft.Data.SqlClient.SqlParameter.Value" /></summary>
      <value>
        One of the <see cref="T:System.Data.DataRowVersion" /> values. The default is <see cref="F:System.Data.DataRowVersion.Current" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.SqlDbType">
      <summary>
        Gets or sets the <see cref="T:System.Data.SqlDbType" /> of the parameter.
      </summary>
      <value>
        One of the <see cref="T:System.Data.SqlDbType" /> values. The default is <see cref="F:System.Data.SqlDbType.NVarChar" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.SqlValue">
      <summary>
        Gets or sets the value of the parameter as an SQL type.
      </summary>
      <value>
        An <see cref="T:System.Object" /> that is the value of the parameter, using SQL types. The default value is <see langword="null" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.TypeName">
      <summary>
        Gets or sets the type name for a table-valued parameter.
      </summary>
      <value>
        The type name of the specified table-valued parameter.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.UdtTypeName">
      <summary>
        Gets or sets a <see cref="T:System.String" /> that represents a user-defined type as a parameter.
      </summary>
      <value>
        A <see cref="T:System.String" /> that represents the fully qualified name of a user-defined type in the database.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.Value">
      <summary>
        Gets or sets the value of the parameter.
      </summary>
      <value>
        An <see cref="T:System.Object" /> that is the value of the parameter. The default value is null.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase">
      <summary>
        Gets the name of the database where the schema collection for this XML instance is located.
      </summary>
      <value>
        The name of the database where the schema collection for this XML instance is located.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.XmlSchemaCollectionName">
      <summary>
        Gets the name of the schema collection for this XML instance.
      </summary>
      <value>
        The name of the schema collection for this XML instance.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema">
      <summary>
        The owning relational schema where the schema collection for this XML instance is located.
      </summary>
      <value>
        The owning relational schema for this XML instance.
      </value>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameter.ResetDbType">
      <summary>
        Resets the type associated with this <see cref="T:Microsoft.Data.SqlClient.SqlParameter" />.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameter.ResetSqlDbType">
      <summary>
        Resets the type associated with this <see cref="T:Microsoft.Data.SqlClient.SqlParameter" />.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameter.ToString">
      <summary>
        Gets a string that contains the <see cref="P:Microsoft.Data.SqlClient.SqlParameter.ParameterName" />.
      </summary>
      <returns>
        A string that contains the <see cref="P:Microsoft.Data.SqlClient.SqlParameter.ParameterName" />.
      </returns>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlParameterCollection">
      <summary>
        Represents a collection of parameters associated with a <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> and their respective mappings to columns in a <see cref="T:System.Data.DataSet" />. This class cannot be inherited.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameterCollection.Count">
      <summary>
        Returns an Integer that contains the number of elements in the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />. Read-only.
      </summary>
      <value>
        The number of elements in the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> as an Integer.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameterCollection.IsFixedSize">
      <summary>
        Gets a value that indicates whether the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> has a fixed size.
      </summary>
      <value>
        <see langword="true" /> if the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> has a fixed size; otherwise, <see langword="false" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameterCollection.IsReadOnly">
      <summary>
        Gets a value that indicates whether the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> is read-only.
      </summary>
      <value>
        <see langword="true" /> if the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> is read-only; otherwise, <see langword="false" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameterCollection.IsSynchronized">
      <summary>
        Gets a value that indicates whether the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> is synchronized.
      </summary>
      <value>
        <see langword="true" /> if the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> is synchronized; otherwise, <see langword="false" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameterCollection.Item(System.Int32)">
      <param name="index">
        The zero-based index of the parameter to retrieve.
      </param>
      <summary>
        Gets the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> at the specified index.
      </summary>
      <value>
        The <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> at the specified index.
      </value>
      <exception cref="T:System.IndexOutOfRangeException">
        The specified index does not exist.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameterCollection.Item(System.String)">
      <param name="parameterName">
        The name of the parameter to retrieve.
      </param>
      <summary>
        Gets the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> with the specified name.
      </summary>
      <value>
        The <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> with the specified name.
      </value>
      <exception cref="T:System.IndexOutOfRangeException">
        The specified <paramref name="parameterName" /> is not valid.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlParameterCollection.SyncRoot">
      <summary>
        Gets an object that can be used to synchronize access to the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </summary>
      <value>
        An object that can be used to synchronize access to the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </value>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.Add(Microsoft.Data.SqlClient.SqlParameter)">
      <param name="value">
        The <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> to add to the collection.
      </param>
      <summary>
        Adds the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object to the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </summary>
      <returns>
        A new <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object.
      </returns>
      <exception cref="T:System.ArgumentException">
        The <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> specified in the <paramref name="value" /> parameter is already added to this or another <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </exception>
      <exception cref="T:System.InvalidCastException">
        The parameter passed was not a <see cref="T:Microsoft.Data.SqlClient.SqlParameter" />.
      </exception>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="value" /> parameter is null.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.Add(System.Object)">
      <param name="value">
        An <see cref="T:System.Object" />.
      </param>
      <summary>
        Adds the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object to the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </summary>
      <returns>
        The index of the new <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType)">
      <param name="parameterName">
        The name of the parameter.
      </param>
      <param name="sqlDbType">
        One of the <see cref="T:System.Data.SqlDbType" /> values.
      </param>
      <summary>
        Adds a <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> to the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> given the parameter name and the data type.
      </summary>
      <returns>
        A new <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32)">
      <param name="parameterName">
        The name of the parameter.
      </param>
      <param name="sqlDbType">
        The <see cref="T:System.Data.SqlDbType" /> of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> to add to the collection.
      </param>
      <param name="size">
        The size as an <see cref="T:System.Int32" />.
      </param>
      <summary>
        Adds a <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> to the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />, given the specified parameter name, <see cref="T:System.Data.SqlDbType" /> and size.
      </summary>
      <returns>
        A new <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32,System.String)">
      <param name="parameterName">
        The name of the parameter.
      </param>
      <param name="sqlDbType">
        One of the <see cref="T:System.Data.SqlDbType" /> values.
      </param>
      <param name="size">
        The column length.
      </param>
      <param name="sourceColumn">
        The name of the source column (<see cref="P:Microsoft.Data.SqlClient.SqlParameter.SourceColumn" />) if this <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> is used in a call to <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.
      </param>
      <summary>
        Adds a <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> to the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> with the parameter name, the data type, and the column length.
      </summary>
      <returns>
        A new <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Object)">
      <param name="parameterName">
        The name of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> to add to the collection.
      </param>
      <param name="value">
        A <see cref="T:System.Object" />.
      </param>
      <summary>
        Adds the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object to the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </summary>
      <returns>
        A new <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object.
      </returns>
      <exception cref="T:System.ArgumentException">
        The <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> specified in the <paramref name="value" /> parameter is already added to this or another <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </exception>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="value" /> parameter is null.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.AddRange(Microsoft.Data.SqlClient.SqlParameter[])">
      <param name="values">
        The <see cref="T:System.Array" /> values to add.
      </param>
      <summary>
        Adds an array of values to the end of the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.AddRange(System.Array)">
      <param name="values">
        The <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> values to add.
      </param>
      <summary>
        Adds an array of <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> values to the end of the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)">
      <param name="parameterName">
        The name of the parameter.
      </param>
      <param name="value">
        The value to be added. Use <see cref="F:System.DBNull.Value" /> instead of null, to indicate a null value.
      </param>
      <summary>
        Adds a value to the end of the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </summary>
      <returns>
        A <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.Clear">
      <summary>
        Removes all the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> objects from the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.Contains(Microsoft.Data.SqlClient.SqlParameter)">
      <param name="value">
        The <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> value.
      </param>
      <summary>
        Determines whether the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> is in this <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </summary>
      <returns>
        <see langword="true" /> if the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> contains the value; otherwise, <see langword="false" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.Contains(System.Object)">
      <param name="value">
        The <see cref="T:System.Object" /> value.
      </param>
      <summary>
        Determines whether the specified <see cref="T:System.Object" /> is in this <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </summary>
      <returns>
        <see langword="true" /> if the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> contains the value; otherwise, <see langword="false" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.Contains(System.String)">
      <param name="value">
        The <see cref="T:System.String" /> value.
      </param>
      <summary>
        Determines whether the specified parameter name is in this <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </summary>
      <returns>
        <see langword="true" /> if the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> contains the value; otherwise, <see langword="false" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.CopyTo(System.Array,System.Int32)">
      <param name="array">
        The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the current <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </param>
      <param name="index">
        A 32-bit integer that represents the index in the <see cref="T:System.Array" /> at which copying starts.
      </param>
      <summary>
        Copies all the elements of the current <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> to the specified one-dimensional <see cref="T:System.Array" /> starting at the specified destination <see cref="T:System.Array" /> index.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.CopyTo(Microsoft.Data.SqlClient.SqlParameter[],System.Int32)">
      <param name="array">
        The <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> that is the destination of the elements copied from the current <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </param>
      <param name="index">
        A 32-bit integer that represents the index in the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> at which copying starts.
      </param>
      <summary>
        Copies all the elements of the current <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> to the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> starting at the specified destination index.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.GetEnumerator">
      <summary>
        Returns an enumerator that iterates through the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </summary>
      <returns>
        An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.GetParameter(System.Int32)">
      <param name="index">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
      <returns>
        To be added.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.GetParameter(System.String)">
      <param name="parameterName">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
      <returns>
        To be added.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.IndexOf(Microsoft.Data.SqlClient.SqlParameter)">
      <param name="value">
        The <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> to find.
      </param>
      <summary>
        Gets the location of the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> within the collection.
      </summary>
      <returns>
        The zero-based location of the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> that is a <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> within the collection. Returns -1 when the object does not exist in the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.IndexOf(System.Object)">
      <param name="value">
        The <see cref="T:System.Object" /> to find.
      </param>
      <summary>
        Gets the location of the specified <see cref="T:System.Object" /> within the collection.
      </summary>
      <returns>
        The zero-based location of the specified <see cref="T:System.Object" /> that is a <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> within the collection. Returns -1 when the object does not exist in the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.IndexOf(System.String)">
      <param name="parameterName">
        The case-sensitive name of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> to find.
      </param>
      <summary>
        Gets the location of the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> with the specified name.
      </summary>
      <returns>
        The zero-based location of the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> with the specified case-sensitive name. Returns -1 when the object does not exist in the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.Insert(System.Int32,Microsoft.Data.SqlClient.SqlParameter)">
      <param name="index">
        The zero-based index at which value should be inserted.
      </param>
      <param name="value">
        A <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object to be inserted in the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </param>
      <summary>
        Inserts a <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object into the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> at the specified index.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.Insert(System.Int32,System.Object)">
      <param name="index">
        The zero-based index at which value should be inserted.
      </param>
      <param name="value">
        An <see cref="T:System.Object" /> to be inserted in the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.
      </param>
      <summary>
        Inserts an <see cref="T:System.Object" /> into the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> at the specified index.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.Remove(Microsoft.Data.SqlClient.SqlParameter)">
      <param name="value">
        A <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object to remove from the collection.
      </param>
      <summary>
        Removes the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> from the collection.
      </summary>
      <exception cref="T:System.InvalidCastException">
        The parameter is not a <see cref="T:Microsoft.Data.SqlClient.SqlParameter" />.
      </exception>
      <exception cref="T:System.SystemException">
        The parameter does not exist in the collection.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.Remove(System.Object)">
      <param name="value">
        The object to remove from the collection.
      </param>
      <summary>
        Removes the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> from the collection.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.RemoveAt(System.Int32)">
      <param name="index">
        The zero-based index of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object to remove.
      </param>
      <summary>
        Removes the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> from the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> at the specified index.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.RemoveAt(System.String)">
      <param name="parameterName">
        The name of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> to remove.
      </param>
      <summary>
        Removes the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> from the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> at the specified parameter name.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
      <param name="index">
        To be added.
      </param>
      <param name="value">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
      <param name="parameterName">
        To be added.
      </param>
      <param name="value">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlRowsCopiedEventArgs">
      <summary>
        Represents the set of arguments passed to the <see cref="T:Microsoft.Data.SqlClient.SqlRowsCopiedEventHandler" /> .
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlRowsCopiedEventArgs.#ctor(System.Int64)">
      <param name="rowsCopied">
        An <see cref="T:System.Int64" /> that indicates the number of rows copied during the current bulk copy operation.
      </param>
      <summary>
        Creates a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlRowsCopiedEventArgs" /> object.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRowsCopiedEventArgs.Abort">
      <summary>
        Gets or sets a value that indicates whether the bulk copy operation should be aborted.
      </summary>
      <value>
        <see langword="true" /> if the bulk copy operation should be aborted; otherwise <see langword="false" />.</value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied">
      <summary>
        Gets a value that returns the number of rows copied during the current bulk copy operation.
      </summary>
      <value>
        <see langword="int" /> that returns the number of rows copied.
      </value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlRowsCopiedEventHandler">
      <param name="sender">
        The source of the event.
      </param>
      <param name="e">
        A <see cref="T:Microsoft.Data.SqlClient.SqlRowsCopiedEventArgs" /> object that contains the event data.
      </param>
      <summary>
        Represents the method that handles the <see cref="E:Microsoft.Data.SqlClient.SqlBulkCopy.SqlRowsCopied" /> event of a <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopy" /> .
      </summary>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlRowUpdatedEventArgs">
      <summary>
        Provides data for the <see cref="E:Microsoft.Data.SqlClient.SqlDataAdapter.RowUpdated" /> event.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <param name="row">
        The <see cref="T:System.Data.DataRow" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.
      </param>
      <param name="command">
        The <see cref="T:System.Data.IDbCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.
      </param>
      <param name="statementType">
        One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed.
      </param>
      <param name="tableMapping">
        The <see cref="T:System.Data.Common.DataTableMapping" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlRowUpdatedEventArgs" /> class.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRowUpdatedEventArgs.Command">
      <summary>
        Gets or sets the <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.
      </summary>
      <value>
        The <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.
      </value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlRowUpdatedEventHandler">
      <param name="sender">
        The source of the event.
      </param>
      <param name="e">
        The <see cref="T:Microsoft.Data.SqlClient.SqlRowUpdatedEventArgs" /> that contains the event data.
      </param>
      <summary>
        Represents the method that will handle the <see cref="E:Microsoft.Data.SqlClient.SqlDataAdapter.RowUpdated" /> event of a <see cref="T:Microsoft.Data.SqlClient.SqlDataAdapter" />.
      </summary>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlRowUpdatingEventArgs">
      <summary>
        Provides data for the <see cref="E:Microsoft.Data.SqlClient.SqlDataAdapter.RowUpdating" /> event.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <param name="row">
        The <see cref="T:System.Data.DataRow" /> to <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.
      </param>
      <param name="command">
        The <see cref="T:System.Data.IDbCommand" /> to execute during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.
      </param>
      <param name="statementType">
        One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed.
      </param>
      <param name="tableMapping">
        The <see cref="T:System.Data.Common.DataTableMapping" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlRowUpdatingEventArgs" /> class.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRowUpdatingEventArgs.BaseCommand">
      <summary>
        To be added.
      </summary>
      <value>
        To be added.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRowUpdatingEventArgs.Command">
      <summary>
        Gets or sets the <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> to execute when performing the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.
      </summary>
      <value>
        The <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> to execute when performing the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.
      </value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlRowUpdatingEventHandler">
      <param name="sender">
        The source of the event.
      </param>
      <param name="e">
        The <see cref="T:Microsoft.Data.SqlClient.SqlRowUpdatingEventArgs" /> that contains the event data.
      </param>
      <summary>
        Represents the method that will handle the <see cref="E:Microsoft.Data.SqlClient.SqlDataAdapter.RowUpdating" /> event of a <see cref="T:Microsoft.Data.SqlClient.SqlDataAdapter" />.
      </summary>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlTransaction">
      <summary>
        Represents a Transact-SQL transaction to be made in a SQL Server database. This class cannot be inherited.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlTransaction.Connection">
      <summary>
        Gets the <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> object associated with the transaction, or <see langword="null" /> if the transaction is no longer valid.
      </summary>
      <value>
        The <see cref="T:Microsoft.Data.SqlClient.SqlConnection" /> object associated with the transaction.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlTransaction.DbConnection">
      <summary>
        To be added.
      </summary>
      <value>
        To be added.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlTransaction.IsolationLevel">
      <summary>
        Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction.
      </summary>
      <value>
        The <see cref="T:System.Data.IsolationLevel" /> for this transaction. The default is <see cref="F:System.Data.IsolationLevel.ReadCommitted" />.
      </value>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlTransaction.Commit">
      <summary>
        Commits the database transaction.
      </summary>
      <exception cref="T:System.Exception">
        An error occurred while trying to commit the transaction.
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>The transaction has already been committed or rolled back.</item>
          <item>The connection is broken.</item>
        </list>
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlTransaction.Dispose(System.Boolean)">
      <summary>
        Releases the resources that are held by the object.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlTransaction.Rollback">
      <summary>
        Rolls back a transaction from a pending state.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlTransaction.Rollback(System.String)">
      <summary>
        Rolls back a transaction from a pending state.
      </summary>
      <exception cref="T:System.Exception">
        An error occurred while trying to commit the transaction.
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>The transaction has already been committed or rolled back.</item>
          <item>The connection is broken.</item>
        </list>
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlTransaction.Save(System.String)">
      <param name="savePointName">
        The name of the savepoint.
      </param>
      <summary>
        Creates a savepoint in the transaction that can be used to roll back a part of the transaction, and specifies the savepoint name.
      </summary>
      <exception cref="T:System.Exception">
        An error occurred while trying to commit the transaction.
      </exception>
      <exception cref="T:System.InvalidOperationException">
        <list type="bullet">
          <item>The transaction has already been committed or rolled back.</item>
          <item>The connection is broken.</item>
        </list>
      </exception>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlRetryingEventArgs">
      <summary>
        Represents the set of arguments passed to the <see cref="P:Microsoft.Data.SqlClient.SqlRetryLogicBaseProvider.Retrying" /> event.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlRetryingEventArgs.#ctor(System.Int32,System.TimeSpan,System.Collections.Generic.IList{System.Exception})">
      <param name="retryCount">
        The current retry attempt count.
      </param>
      <param name="delay">
        The delay that indicates how long the current thread will be suspended before the next iteration is invoked.
      </param>
      <param name="exceptions">
        The list of exceptions since the first retry that caused the retry logic to re-execute the function.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlRetryingEventArgs" /> class.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRetryingEventArgs.RetryCount">
      <summary>
        Retry-attempt-number, after the first exception occurrence.
      </summary>
      <value>
        <see cref="T:System.Int32" /> that returns the number of retry execution attempts; starting from 1.</value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRetryingEventArgs.Delay">
      <summary>
        Gets the current waiting time as a <see cref="T:System.TimeSpan" /> object.
      </summary>
      <value>
        <see cref="T:System.TimeSpan" /> The upcoming gap time before the next execution attempt.</value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRetryingEventArgs.Cancel">
      <summary>
        Gets or sets a value that indicates whether the retry logic should be canceled.
      </summary>
      <value>
        If set to <see langword="true" />, the execution attempt will be interrupted immediately.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRetryingEventArgs.Exceptions">
      <summary>
        Gets the list of exceptions since the first attempt failure.
      </summary>
      <value>
        List of occurred exceptions.
      </value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlRetryIntervalBaseEnumerator">
      <summary>
        Generates a sequence of time intervals.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRetryIntervalBaseEnumerator.GapTimeInterval">
      <summary>
        The default gap time of each interval.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRetryIntervalBaseEnumerator.MaxTimeInterval">
      <summary>
        The maximum allowed time interval value.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRetryIntervalBaseEnumerator.MinTimeInterval">
      <summary>
        The minimum allowed time interval value.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRetryIntervalBaseEnumerator.Current">
      <summary>
        Gets the element in the collection at the current position of the enumerator.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlRetryIntervalBaseEnumerator.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlRetryIntervalBaseEnumerator" /> class with a default value of zero for the gap time, minimum, and maximum interval time.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlRetryIntervalBaseEnumerator.#ctor(System.TimeSpan,System.TimeSpan,System.TimeSpan)">
      <param name="timeInterval">
        The gap time used to calculate the time delay before each attempt.
      </param>
      <param name="maxTime">
        The maximum time allowed as a gap time.
      </param>
      <param name="minTime">
        The minimum time allowed as a gap time.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlRetryIntervalBaseEnumerator" /> class.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The supplied arguments failed <see cref="M:Microsoft.Data.SqlClient.SqlRetryIntervalBaseEnumerator.Validate(System.TimeSpan,System.TimeSpan,System.TimeSpan)" /> validation.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlRetryIntervalBaseEnumerator.Reset">
      <summary>
        Sets the enumerator to its initial position, which is before the first element in the collection.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlRetryIntervalBaseEnumerator.Validate(System.TimeSpan,System.TimeSpan,System.TimeSpan)">
      <param name="timeInterval">
        The gap time of each interval. Must be between 0 and 120 seconds.
      </param>
      <param name="maxTimeInterval">
        Maximum time interval value. Must be between 0 and 120 seconds.
      </param>
      <param name="minTimeInterval">
        Minimum time interval value. Must be less than maximum time interval and between 0 and 120 seconds.
      </param>
      <summary>
        Validate the enumeration parameters.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The supplied arguments failed validation.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlRetryIntervalBaseEnumerator.GetNextInterval">
      <summary>
        Calculates the next interval time.
      </summary>
      <returns>
        Returns the next gap time interval.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlRetryIntervalBaseEnumerator.MoveNext">
      <summary>
        Advances the enumerator to the next element of the collection.
      </summary>
      <returns>
        Returns <see langword="true" />, if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlRetryIntervalBaseEnumerator.Dispose">
      <summary>
        Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlRetryIntervalBaseEnumerator.Clone">
      <summary>
        Creates a new object that is a copy of the current instance.
      </summary>
      <returns>
        A new object that is a copy of this instance.
      </returns>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlRetryLogicBase">
      <summary>
        Retrieves the next time interval with respect to the number of retries if a transient condition occurs.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRetryLogicBase.NumberOfTries">
      <summary>
        Maximum number of retries.
      </summary>
      <value>
        <see langword="int" /> that returns the maximum number of retry execution attempts that will be attempted after the first failure.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRetryLogicBase.Current">
      <summary>
        Current retry number starting from zero.
      </summary>
      <value>
        <see langword="int" /> that returns the number of retry execution attempts after the first failure.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRetryLogicBase.RetryIntervalEnumerator">
      <summary>
        The timer interval enumerator.
      </summary>
      <value>
        <see cref="T:Microsoft.Data.SqlClient.SqlRetryIntervalBaseEnumerator" /> value that indicates an enumerator to generate a sequence of time intervals.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRetryLogicBase.TransientPredicate">
      <summary>
        Delegate to a transient condition predicate. The function that this delegate points to must return a true value when an expected transient exception happens.
      </summary>
      <value>
        <see cref="T:System.Predicate`1" /> value that delegates to a function that receives a <see cref="T:System.Exception" /> input parameter.
      </value>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlRetryLogicBase.RetryCondition(System.Object)">
      <param name="sender">
        The sender object.
      </param>
      <summary>
        Pre-retry validation for the sender state.
      </summary>
      <returns>
        Returns <see langword="true" /> if the sender is authorized to retry the operation.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlRetryLogicBase.TryNextInterval(System.TimeSpan@)">
      <param name="intervalTime">
        The interval time that is generated by the <see cref="P:Microsoft.Data.SqlClient.SqlRetryLogicBase.RetryIntervalEnumerator" />.
      </param>
      <summary>
        Try to get the next interval time by using the enumerator if the counter does not exceed the number of retries.
      </summary>
      <returns>
        Returns <see langword="true" /> if the number of retry attempts has not been exceeded; otherwise <see langword="false" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlRetryLogicBase.Reset">
      <summary>
        Set the counters and enumerator to default values for next use.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlRetryLogicBase.Clone">
      <summary>
        Creates a new object that is a copy of the current instance.
      </summary>
      <returns>
        When implemented in a derived class, the method is expected to return a new object of the current instance. The default implementation throws <see cref="T:System.NotImplementedException" />.
      </returns>
      <exception cref="T:System.NotImplementedException">
        In all cases.
      </exception>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlRetryLogicBaseProvider">
      <summary>
        Applies retry logic on an operation through the <see cref="M:Microsoft.Data.SqlClient.SqlRetryLogicBaseProvider.Execute``1(System.Object,System.Func{``0})" /> or <see cref="M:Microsoft.Data.SqlClient.SqlRetryLogicBaseProvider.ExecuteAsync``1(System.Object,System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)" /> function.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRetryLogicBaseProvider.Retrying">
      <summary>
        Occurs before applying the calculated delay time and executing the function on a next attempt.
      </summary>
      <value>
        <see cref="T:System.EventHandler" /> with event argument of <see cref="T:Microsoft.Data.SqlClient.SqlRetryingEventArgs" /> object can be subscribed.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRetryLogicBaseProvider.RetryLogic">
      <summary>
        Defines the retry logic used to decide when to retry based on the encountered exception.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlRetryLogicBaseProvider.Execute``1(System.Object,System.Func{``0})">
      <typeparam name="TResult">
        The object that the `function` returns when executed.
      </typeparam>
      <param name="sender">
        The source of the event.
      </param>
      <param name="function">
        The operation to re-execute if a transient condition occurs.
      </param>
      <summary>
        Executes a function and applies retry logic, if enabled. **Note:**  Exceptions will be reported via an aggregate exception if the execution isn't successful via retry attempts.
      </summary>
      <returns>
        The return value of the <paramref name="function" /> if it runs without exception.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="function" /> parameter can't be <see langword="null" />.
      </exception>
      <exception cref="T:System.AggregateException">
        The collection of exceptions after all retry attempts have failed.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlRetryLogicBaseProvider.ExecuteAsync``1(System.Object,System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
      <typeparam name="TResult">
        The object that the <paramref name="function" /> returns in a Task when executed.
      </typeparam>
      <param name="sender">
        The source of the event.
      </param>
      <param name="function">
        The operation to re-execute if a transient condition occurs.
      </param>
      <param name="cancellationToken">
        The cancellation instruction.
      </param>
      <summary>
        Executes a function and applies retry logic, if enabled. The cancellation token can be used to request that the operation be abandoned before the execution attempts are exceeded. **Note:** Exceptions will be reported via the returned Task object, which will contain an aggregate exception if execution fails for all retry attempts.
      </summary>
      <returns>
        A task representing the asynchronous operation. The results of the task will be the return value of the <paramref name="function" />, if it runs without exception.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="function" /> parameter can't be <see langword="null" />.
      </exception>
      <exception cref="T:System.AggregateException">
        The collection of exceptions after failed retry attempts.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlRetryLogicBaseProvider.ExecuteAsync(System.Object,System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
      <param name="sender">
        The source of the event.
      </param>
      <param name="function">
        The operation to re-execute if a transient condition occurs.
      </param>
      <param name="cancellationToken">
        The cancellation instruction.
      </param>
      <summary>
        Executes a function and applies retry logic, if enabled. The cancellation token can be used to request that the operation be abandoned before the execution attempts are exceeded. ** Note:** Exceptions will be reported via the returned Task object, which will contain an aggregate exception if execution fails for all retry attempts.
      </summary>
      <returns>
        A Task or an exception.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="function" /> parameter can't be <see langword="null" />.
      </exception>
      <exception cref="T:System.AggregateException">
        The collection of exceptions after failed retry attempts.
      </exception>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlRetryLogicOption">
      <summary>
        Provides the retry logic parameters to create an instance of the <see cref="T:Microsoft.Data.SqlClient.SqlRetryLogicBaseProvider" /> class by using <see cref="T:Microsoft.Data.SqlClient.SqlConfigurableRetryFactory" /> methods.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.NumberOfTries">
      <summary>
        Sets the number of times to try and execute the function.
      </summary>
      <value>
        <see langword="int" /> between 1 and 60; 1 means to execute one time and if an error is encountered, don't retry.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.DeltaTime">
      <summary>
        Sets the gap time interval as a <see cref="T:System.TimeSpan" /> object.
      </summary>
      <value>
        <see cref="T:System.TimeSpan" /> The upcoming gap time before the next execution attempt; must be between 0 and 120 seconds.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.MinTimeInterval">
      <summary>
        Sets the minimum allowed gap time interval as a <see cref="T:System.TimeSpan" /> object.
      </summary>
      <value>
        <see cref="T:System.TimeSpan" /> The minimum upcoming gap time before the next execution attempt; the default value is <b>zero</b> and must be between 0 and 120 seconds.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.MaxTimeInterval">
      <summary>
        Sets the allowed maximum gap time interval as a <see cref="T:System.TimeSpan" /> object.
      </summary>
      <value>
        <see cref="T:System.TimeSpan" /> The maximum upcoming gap time interval before the next execution attempt; must be between 0 and 120 seconds.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.TransientErrors">
      <summary>
        Sets the list of transient error numbers on which to retry when they occur.
      </summary>
      <value>
        List of <see cref="P:Microsoft.Data.SqlClient.SqlException.Number" />; Set to <see langword="null" /> to use the internal list of exceptions from the <see cref="T:Microsoft.Data.SqlClient.SqlConfigurableRetryFactory" /> object.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.AuthorizedSqlCondition">
      <summary>
        Sets a pre-retry validation function on the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.CommandText" /> to only include specific SQL statements.
      </summary>
      <value>
        <see cref="T:System.Predicate`1" /> The pre-retry validation delegate function; <see langword="true" /> if the <see cref="P:Microsoft.Data.SqlClient.SqlCommand.CommandText" /> is authorized to retry the operation.
      </value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.SqlConfigurableRetryFactory">
      <summary>
        Provides different retry logic providers with a common list of transient errors.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConfigurableRetryFactory.CreateExponentialRetryProvider(Microsoft.Data.SqlClient.SqlRetryLogicOption)">
      <param name="retryLogicOption">
        An object of <see cref="T:Microsoft.Data.SqlClient.SqlRetryLogicOption" /> containing the configuration for the object.
      </param>
      <summary>
        Provides an exponential time interval retry logic provider.
      </summary>
      <returns>
        A <see cref="T:Microsoft.Data.SqlClient.SqlRetryLogicBaseProvider" /> object.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        If the <paramref name="retryLogicOption" /> parameter was null.
      </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        If at least one of the following conditions occurs:
        <list type="bullet"><item><see cref="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.NumberOfTries" /> is less than 1 or bigger than 60.
          </item><item><see cref="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.DeltaTime" /> is bigger than 120 seconds.
          </item><item><see cref="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.MinTimeInterval" /> is bigger than 120 seconds.
          </item><item><see cref="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.MaxTimeInterval" /> is bigger than 120 seconds.
          </item><item><see cref="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.MinTimeInterval" /> is not less than <see cref="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.MaxTimeInterval" />.
          </item></list></exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConfigurableRetryFactory.CreateIncrementalRetryProvider(Microsoft.Data.SqlClient.SqlRetryLogicOption)">
      <param name="retryLogicOption">
        An object of <see cref="T:Microsoft.Data.SqlClient.SqlRetryLogicOption" /> containing the configuration for the object.
      </param>
      <summary>
        Provides an incremental time interval retry logic provider.
      </summary>
      <returns>
        A <see cref="T:Microsoft.Data.SqlClient.SqlRetryLogicBaseProvider" /> object.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        If the <paramref name="retryLogicOption" /> parameter was null.
      </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        If at least one of the following conditions occurs:
        <list type="bullet"><item><see cref="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.NumberOfTries" /> is less than 1 or bigger than 60.
          </item><item><see cref="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.DeltaTime" /> is bigger than 120 seconds.
          </item><item><see cref="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.MinTimeInterval" /> is bigger than 120 seconds.
          </item><item><see cref="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.MaxTimeInterval" /> is bigger than 120 seconds.
          </item><item><see cref="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.MinTimeInterval" /> is not less than <see cref="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.MaxTimeInterval" />.
          </item></list></exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConfigurableRetryFactory.CreateFixedRetryProvider(Microsoft.Data.SqlClient.SqlRetryLogicOption)">
      <param name="retryLogicOption">
        An object of <see cref="T:Microsoft.Data.SqlClient.SqlRetryLogicOption" /> containing the configuration for the object.
      </param>
      <summary>
        Provides a fixed interval time retry logic provider.
      </summary>
      <returns>
        A <see cref="T:Microsoft.Data.SqlClient.SqlRetryLogicBaseProvider" /> object.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        If the `retryLogicOption` parameter was null.
      </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        If at least one of the following conditions occurs:
        <list type="bullet"><item><see cref="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.NumberOfTries" /> is less than 1 or bigger than 60.
          </item><item><see cref="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.DeltaTime" /> is bigger than 120 seconds.
          </item><item><see cref="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.MinTimeInterval" /> is bigger than 120 seconds.
          </item><item><see cref="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.MaxTimeInterval" /> is bigger than 120 seconds.
          </item><item><see cref="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.MinTimeInterval" /> is not less than <see cref="P:Microsoft.Data.SqlClient.SqlRetryLogicOption.MaxTimeInterval" />.
          </item></list></exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.SqlConfigurableRetryFactory.CreateNoneRetryProvider">
      <summary>
        Provides a non-retryable provider with a <see cref="T:Microsoft.Data.SqlClient.SqlRetryLogicBase.TransientPredicate" /> that returns <see langword="false" />.
      </summary>
      <returns>
        A <see cref="T:Microsoft.Data.SqlClient.SqlRetryLogicBaseProvider" /> object.
      </returns>
    </member>
    <member name="T:Microsoft.Data.SqlClient.Server.SqlDataRecord">
      <summary>
        Represents a single row of data and its metadata.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.#ctor(Microsoft.Data.SqlClient.Server.SqlMetaData[])">
      <param name="metaData">
        An array of <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> objects that describe each column in the <see cref="T:Microsoft.Data.SqlClient.Server.SqlDataRecord" />.
      </param>
      <summary>
        Initializes a new <see cref="T:Microsoft.Data.SqlClient.Server.SqlDataRecord" /> instance with the schema based on the array of <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> objects passed as an argument.
      </summary>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="metaData" /> is <see langword="null" />.
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount">
      <summary>
        Gets the number of columns in the data row. This property is read-only.
      </summary>
      <value>
        The number of columns in the data row as an integer.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.Item(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the common language runtime (CLR) type value for the column specified by the column <paramref name="ordinal" /> argument.
      </summary>
      <value>
        The CLR type value of the column specified by the <paramref name="ordinal" />.
      </value>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.Item(System.String)">
      <param name="name">
        The name of the column.
      </param>
      <summary>
        Gets the common language runtime (CLR) type value for the column specified by the column <paramref name="name" /> argument.
      </summary>
      <value>
        The CLR type value of the column specified by the <paramref name="name" />.
      </value>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetBoolean(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Boolean" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Boolean" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        The column specified by <paramref name="ordinal" /> is null.
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetByte(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Byte" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Byte" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        The column specified by <paramref name="ordinal" /> is null.
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="fieldOffset">
        The offset into the field value to start retrieving bytes.
      </param>
      <param name="buffer">
        The target buffer to which to copy bytes.
      </param>
      <param name="bufferOffset">
        The offset into the buffer to which to start copying bytes.
      </param>
      <param name="length">
        The number of bytes to copy to the buffer.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as an array of <see cref="T:System.Byte" /> objects.
      </summary>
      <returns>
        The number of bytes copied.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        The column specified by <paramref name="ordinal" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetChar(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Char" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Char" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        The column specified by <paramref name="ordinal" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="fieldOffset">
        The offset into the field value to start retrieving characters.
      </param>
      <param name="buffer">
        The target buffer to copy chars to.
      </param>
      <param name="bufferOffset">
        The offset into the buffer to start copying chars to.
      </param>
      <param name="length">
        The number of chars to copy to the buffer.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as an array of <see cref="T:System.Char" /> objects.
      </summary>
      <returns>
        The number of characters copied.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        The column specified by <paramref name="ordinal" /> is null.
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.System#Data#IDataRecord#GetData(System.Int32)">
      <param name="ordinal">
        To be added.
      </param>
      <summary>
        To be added.
      </summary>
      <returns>
        To be added.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetDataTypeName(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Returns the name of the data type for the column specified by the ordinal argument.
      </summary>
      <returns>
        A <see cref="T:System.String" /> that contains the data type of the column.
      </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetDateTime(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.DateTime" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.DateTime" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        The column specified by <paramref name="ordinal" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetDateTimeOffset(System.Int32)">
      <param name="ordinal">
        The zero-based column ordinal.
      </param>
      <summary>
        Returns the specified column's data as a <see cref="T:System.DateTimeOffset" />.
      </summary>
      <returns>
        The value of the specified column as a <see cref="T:System.DateTimeOffset" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetDecimal(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Decimal" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Decimal" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        The column specified by <paramref name="ordinal" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetDouble(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Double" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Double" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        The column specified by <paramref name="ordinal" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetFieldType(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Returns a <see cref="T:System.Type" /> object representing the common language runtime (CLR) type that maps to the SQL Server type of the column specified by the <paramref name="ordinal" /> argument.
      </summary>
      <returns>
        The column type as a <see cref="T:System.Type" /> object.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.TypeLoadException">
        The column is of a user-defined type that is not available to the calling application domain.
      </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        The column is of a user-defined type that is not available to the calling application domain.
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetFloat(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Single" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Single" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        The column specified by <paramref name="ordinal" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetGuid(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Guid" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Guid" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        The column specified by <paramref name="ordinal" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetInt16(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Int16" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Int16" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        The column specified by <paramref name="ordinal" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetInt32(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Int32" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Int32" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        The column specified by <paramref name="ordinal" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetInt64(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Int64" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Int64" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        The column specified by <paramref name="ordinal" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetName(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Returns the name of the column specified by the ordinal argument.
      </summary>
      <returns>
        A <see cref="T:System.String" /> containing the column name.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetOrdinal(System.String)">
      <param name="name">
        The name of the column to look up.
      </param>
      <summary>
        Returns the column ordinal specified by the column name.
      </summary>
      <returns>
        The zero-based ordinal of the column as an integer.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.IndexOutOfRangeException">
        The column name could not be found.
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetSqlBinary(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetSqlBoolean(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlBoolean" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Data.SqlTypes.SqlBoolean" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetSqlByte(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlByte" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Data.SqlTypes.SqlByte" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetSqlBytes(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlBytes" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Data.SqlTypes.SqlBytes" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetSqlChars(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlChars" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Data.SqlTypes.SqlChars" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetSqlDateTime(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlDateTime" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Data.SqlTypes.SqlDateTime" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetSqlDecimal(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetSqlDouble(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlDouble" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Data.SqlTypes.SqlDouble" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetSqlFieldType(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Returns a <see cref="T:System.Type" /> object that represents the type (as a SQL Server type, defined in <see cref="N:System.Data.SqlTypes" />) that maps to the SQL Server type of the column.
      </summary>
      <returns>
        The column type as a <see cref="T:System.Type" /> object.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.TypeLoadException">
        The column is of a user-defined type that is not available to the calling application domain.
      </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        The column is of a user-defined type that is not available to the calling application domain.
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetSqlGuid(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlGuid" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Data.SqlTypes.SqlGuid" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetSqlInt16(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetSqlInt32(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetSqlInt64(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetSqlMetaData(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Returns a <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> object, describing the metadata of the column specified by the column ordinal.
      </summary>
      <returns>
        The column metadata as a <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> object.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetSqlMoney(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetSqlSingle(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetSqlString(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlString" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Data.SqlTypes.SqlString" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetSqlValue(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Returns the data value stored in the column, expressed as a SQL Server type, specified by the column ordinal.
      </summary>
      <returns>
        The value of the column, expressed as a SQL Server type, as a <see cref="T:System.Object" />.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
      <seealso cref="N:System.Data.SqlTypes" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetSqlValues(System.Object[])">
      <param name="values">
        The array into which to copy the values column values.
      </param>
      <summary>
        Returns the values for all the columns in the record, expressed as SQL Server types, in an array.
      </summary>
      <returns>
        An <see cref="T:System.Int32" /> that indicates the number of columns copied.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
      <seealso cref="N:System.Data.SqlTypes" />
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetSqlXml(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlXml" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.Data.SqlTypes.SqlXml" />.
      </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetString(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Gets the value for the column specified by the ordinal as a <see cref="T:System.String" />.
      </summary>
      <returns>
        The column value as a <see cref="T:System.String" />.
      </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetTimeSpan(System.Int32)">
      <param name="ordinal">
        The zero-based column ordinal.
      </param>
      <summary>
        Returns the specified column's data as a <see cref="T:System.TimeSpan" />.
      </summary>
      <returns>
        The value of the specified column as a <see cref="T:System.TimeSpan" />.
      </returns>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetValue(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Returns the common language runtime (CLR) type value for the column specified by the ordinal argument.
      </summary>
      <returns>
        The CLR type value of the column specified by the ordinal.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.GetValues(System.Object[])">
      <param name="values">
        The array into which to copy the values column values.
      </param>
      <summary>
        Returns the values for all the columns in the record, expressed as common language runtime (CLR) types, in an array.
      </summary>
      <returns>
        An <see cref="T:System.Int32" /> that indicates the number of columns copied.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.InvalidCastException">
        There is a type mismatch.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.IsDBNull(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Returns <see langword="true" /> if the column specified by the column ordinal parameter is null.
      </summary>
      <returns>
        <see langword="true" /> if the column is null; <see langword="false" /> otherwise.
      </returns>
      <exception cref="T:System.IndexOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetBoolean(System.Int32,System.Boolean)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Boolean" /> value.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetByte(System.Int32,System.Byte)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Byte" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="fieldOffset">
        The offset into the field value to start copying bytes.
      </param>
      <param name="buffer">
        The target buffer from which to copy bytes.
      </param>
      <param name="bufferOffset">
        The offset into the buffer from which to start copying bytes.
      </param>
      <param name="length">
        The number of bytes to copy from the buffer.
      </param>
      <summary>
        Sets the data stored in the column to the specified array of <see cref="T:System.Byte" /> values.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetChar(System.Int32,System.Char)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Char" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="fieldOffset">
        The offset into the field value to start copying characters.
      </param>
      <param name="buffer">
        The target buffer from which to copy chars.
      </param>
      <param name="bufferOffset">
        The offset into the buffer from which to start copying chars.
      </param>
      <param name="length">
        The number of chars to copy from the buffer.
      </param>
      <summary>
        Sets the data stored in the column to the specified array of <see cref="T:System.Char" /> values.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetDateTime(System.Int32,System.DateTime)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.DateTime" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetDateTimeOffset(System.Int32,System.DateTimeOffset)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the value of the column specified to the <see cref="T:System.DateTimeOffset" /> value.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetDBNull(System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <summary>
        Sets the value in the specified column to <see cref="T:System.DBNull" />.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetDecimal(System.Int32,System.Decimal)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Decimal" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetDouble(System.Int32,System.Double)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Double" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetFloat(System.Int32,System.Single)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Single" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetGuid(System.Int32,System.Guid)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Guid" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetInt16(System.Int32,System.Int16)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Int16" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetInt32(System.Int32,System.Int32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Int32" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetInt64(System.Int32,System.Int64)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Int64" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetSqlBinary(System.Int32,System.Data.SqlTypes.SqlBinary)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlBinary" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetSqlBoolean(System.Int32,System.Data.SqlTypes.SqlBoolean)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlBoolean" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetSqlByte(System.Int32,System.Data.SqlTypes.SqlByte)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlByte" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetSqlBytes(System.Int32,System.Data.SqlTypes.SqlBytes)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlBytes" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetSqlChars(System.Int32,System.Data.SqlTypes.SqlChars)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlChars" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetSqlDateTime(System.Int32,System.Data.SqlTypes.SqlDateTime)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlDateTime" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetSqlDecimal(System.Int32,System.Data.SqlTypes.SqlDecimal)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlDecimal" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetSqlDouble(System.Int32,System.Data.SqlTypes.SqlDouble)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlDouble" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetSqlGuid(System.Int32,System.Data.SqlTypes.SqlGuid)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlGuid" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetSqlInt16(System.Int32,System.Data.SqlTypes.SqlInt16)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlInt16" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetSqlInt32(System.Int32,System.Data.SqlTypes.SqlInt32)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlInt32" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetSqlInt64(System.Int32,System.Data.SqlTypes.SqlInt64)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlInt64" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetSqlMoney(System.Int32,System.Data.SqlTypes.SqlMoney)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlMoney" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetSqlSingle(System.Int32,System.Data.SqlTypes.SqlSingle)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlSingle" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetSqlString(System.Int32,System.Data.SqlTypes.SqlString)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlString" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetSqlXml(System.Int32,System.Data.SqlTypes.SqlXml)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlXml" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetString(System.Int32,System.String)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the data stored in the column to the specified <see cref="T:System.String" /> value.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetTimeSpan(System.Int32,System.TimeSpan)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value of the column.
      </param>
      <summary>
        Sets the value of the column specified to the <see cref="T:System.TimeSpan" />.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> passed in is a negative number.
      </exception>
      <exception cref="T:System.ArgumentException">
        The <see cref="T:System.TimeSpan" /> value passed in is greater than 24 hours in length.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetValue(System.Int32,System.Object)">
      <param name="ordinal">
        The zero-based ordinal of the column.
      </param>
      <param name="value">
        The new value for the specified column.
      </param>
      <summary>
        Sets a new value, expressed as a common language runtime (CLR) type, for the column specified by the column ordinal.
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.Data.SqlClient.Server.SqlDataRecord.FieldCount" />).
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlDataRecord.SetValues(System.Object[])">
      <param name="values">
        The array of new values, expressed as CLR types boxed as <see cref="T:System.Object" /> references, for the <see cref="T:Microsoft.Data.SqlClient.Server.SqlDataRecord" /> instance.
      </param>
      <summary>
        Sets new values for all the columns in the <see cref="T:Microsoft.Data.SqlClient.Server.SqlDataRecord" />. These values are expressed as common language runtime (CLR) types.
      </summary>
      <returns>
        The number of column values set as an integer.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.ArgumentException">
        The size of values does not match the number of columns in the <see cref="T:Microsoft.Data.SqlClient.Server.SqlDataRecord" /> instance.
      </exception>
    </member>
    <member name="T:Microsoft.Data.SqlClient.Server.SqlMetaData">
      <summary>
        Specifies and retrieves metadata information from parameters and columns of <see cref="T:Microsoft.Data.SqlClient.Server.SqlDataRecord" /> objects. This class cannot be inherited.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType)">
      <param name="name">
        The name of the column.
      </param>
      <param name="dbType">
        The SQL Server type of the parameter or column.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> class with the specified column name and type.
      </summary>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="name" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.ArgumentException">
        A <see langword="SqlDbType" /> that is not allowed was passed to the constructor as <paramref name="dbType" />.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Boolean,System.Boolean,Microsoft.Data.SqlClient.SortOrder,System.Int32)">
      <param name="name">
        The name of the column.
      </param>
      <param name="dbType">
        The SQL Server type of the parameter or column.
      </param>
      <param name="useServerDefault">
        Specifies whether this column should use the default server value.
      </param>
      <param name="isUniqueKey">
        Specifies if the column in the table-valued parameter is unique.
      </param>
      <param name="columnSortOrder">
        Specifies the sort order for a column.
      </param>
      <param name="sortOrdinal">
        Specifies the ordinal of the sort column.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> class with the specified column name, and default server. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte)">
      <param name="name">
        The name of the parameter or column.
      </param>
      <param name="dbType">
        The SQL Server type of the parameter or column.
      </param>
      <param name="precision">
        The precision of the parameter or column.
      </param>
      <param name="scale">
        The scale of the parameter or column.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> class with the specified column name, type, precision, and scale.
      </summary>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="name" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.ArgumentException">
        A <see cref="T:System.Data.SqlDbType" /> that is not allowed was passed to the constructor as <paramref name="dbType" />, or <paramref name="scale" /> was greater than <paramref name="precision" />.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte,System.Boolean,System.Boolean,Microsoft.Data.SqlClient.SortOrder,System.Int32)">
      <param name="name">
        The name of the column.
      </param>
      <param name="dbType">
        The SQL Server type of the parameter or column.
      </param>
      <param name="precision">
        The precision of the parameter or column.
      </param>
      <param name="scale">
        The scale of the parameter or column.
      </param>
      <param name="useServerDefault">
        Specifies whether this column should use the default server value.
      </param>
      <param name="isUniqueKey">
        Specifies if the column in the table-valued parameter is unique.
      </param>
      <param name="columnSortOrder">
        Specifies the sort order for a column.
      </param>
      <param name="sortOrdinal">
        Specifies the ordinal of the sort column.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> class with the specified column name, type, precision, scale, and server default. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64)">
      <param name="name">
        The name of the column.
      </param>
      <param name="dbType">
        The SQL Server type of the parameter or column.
      </param>
      <param name="maxLength">
        The maximum length of the specified type.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> class with the specified column name, type, and maximum length.
      </summary>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="name" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.ArgumentException">
        A SqlDbType that is not allowed was passed to the constructor as <paramref name="dbType" />.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Boolean,System.Boolean,Microsoft.Data.SqlClient.SortOrder,System.Int32)">
      <param name="name">
        The name of the column.
      </param>
      <param name="dbType">
        The SQL Server type of the parameter or column.
      </param>
      <param name="maxLength">
        The maximum length of the specified type.
      </param>
      <param name="useServerDefault">
        Specifies whether this column should use the default server value.
      </param>
      <param name="isUniqueKey">
        Specifies if the column in the table-valued parameter is unique.
      </param>
      <param name="columnSortOrder">
        Specifies the sort order for a column.
      </param>
      <param name="sortOrdinal">
        Specifies the ordinal of the sort column.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> class with the specified column name, type, maximum length, and server default. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type)">
      <param name="name">
        The name of the column.
      </param>
      <param name="dbType">
        The SQL Server type of the parameter or column.
      </param>
      <param name="maxLength">
        The maximum length of the specified type.
      </param>
      <param name="precision">
        The precision of the parameter or column.
      </param>
      <param name="scale">
        The scale of the parameter or column.
      </param>
      <param name="locale">
        The locale ID of the parameter or column.
      </param>
      <param name="compareOptions">
        The comparison rules of the parameter or column.
      </param>
      <param name="userDefinedType">
        A <see cref="T:System.Type" /> instance that points to the UDT.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> class with the specified column name, type, maximum length, precision, scale, locale ID, compare options, and user-defined type (UDT).
      </summary>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="name" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.ArgumentException">
        A <see langword="SqlDbType" /> that is not allowed was passed to the constructor as <paramref name="dbType" />, or <paramref name="userDefinedType" /> points to a type that does not have <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> declared.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type,System.Boolean,System.Boolean,Microsoft.Data.SqlClient.SortOrder,System.Int32)">
      <param name="name">
        The name of the column.
      </param>
      <param name="dbType">
        The SQL Server type of the parameter or column.
      </param>
      <param name="maxLength">
        The maximum length of the specified type.
      </param>
      <param name="precision">
        The precision of the parameter or column.
      </param>
      <param name="scale">
        The scale of the parameter or column.
      </param>
      <param name="localeId">
        The locale ID of the parameter or column.
      </param>
      <param name="compareOptions">
        The comparison rules of the parameter or column.
      </param>
      <param name="userDefinedType">
        A <see cref="T:System.Type" /> instance that points to the UDT.
      </param>
      <param name="useServerDefault">
        Specifies whether this column should use the default server value.
      </param>
      <param name="isUniqueKey">
        Specifies if the column in the table-valued parameter is unique.
      </param>
      <param name="columnSortOrder">
        Specifies the sort order for a column.
      </param>
      <param name="sortOrdinal">
        Specifies the ordinal of the sort column.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> class with the specified column name, type, maximum length, precision, scale, locale ID, compare options, and user-defined type (UDT). This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions)">
      <param name="name">
        The name of the parameter or column.
      </param>
      <param name="dbType">
        The SQL Server type of the parameter or column.
      </param>
      <param name="maxLength">
        The maximum length of the specified type.
      </param>
      <param name="locale">
        The locale ID of the parameter or column.
      </param>
      <param name="compareOptions">
        The comparison rules of the parameter or column.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> class with the specified column name, type, maximum length, locale, and compare options.
      </summary>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="name" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.ArgumentException">
        A <see cref="T:System.Data.SqlDbType" /> that is not allowed was passed to the constructor as <paramref name="dbType" />.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Boolean,System.Boolean,Microsoft.Data.SqlClient.SortOrder,System.Int32)">
      <param name="name">
        The name of the column.
      </param>
      <param name="dbType">
        The SQL Server type of the parameter or column.
      </param>
      <param name="maxLength">
        The maximum length of the specified type.
      </param>
      <param name="locale">
        The locale ID of the parameter or column.
      </param>
      <param name="compareOptions">
        The comparison rules of the parameter or column.
      </param>
      <param name="useServerDefault">
        Specifies whether this column should use the default server value.
      </param>
      <param name="isUniqueKey">
        Specifies if the column in the table-valued parameter is unique.
      </param>
      <param name="columnSortOrder">
        Specifies the sort order for a column.
      </param>
      <param name="sortOrdinal">
        Specifies the ordinal of the sort column.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> class with the specified column name, type, maximum length, locale, compare options, and server default. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String)">
      <param name="name">
        The name of the column.
      </param>
      <param name="dbType">
        The SQL Server type of the parameter or column.
      </param>
      <param name="database">
        The database name of the XML schema collection of a typed XML instance.
      </param>
      <param name="owningSchema">
        The relational schema name of the XML schema collection of a typed XML instance.
      </param>
      <param name="objectName">
        The name of the XML schema collection of a typed XML instance.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> class with the specified column name, type, database name, owning schema, and object name.
      </summary>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="name" /> is <see langword="null" />, or <paramref name="objectName" /> is <see langword="null" /> when <paramref name="database" /> and <paramref name="owningSchema" /> are non- <see langword="null" />.
      </exception>
      <exception cref="T:System.ArgumentException">
        A SqlDbType that is not allowed was passed to the constructor as <paramref name="dbType" />.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String,System.Boolean,System.Boolean,Microsoft.Data.SqlClient.SortOrder,System.Int32)">
      <param name="name">
        The name of the column.
      </param>
      <param name="dbType">
        The SQL Server type of the parameter or column.
      </param>
      <param name="database">
        The database name of the XML schema collection of a typed XML instance.
      </param>
      <param name="owningSchema">
        The relational schema name of the XML schema collection of a typed XML instance.
      </param>
      <param name="objectName">
        The name of the XML schema collection of a typed XML instance.
      </param>
      <param name="useServerDefault">
        Specifies whether this column should use the default server value.
      </param>
      <param name="isUniqueKey">
        Specifies if the column in the table-valued parameter is unique.
      </param>
      <param name="columnSortOrder">
        Specifies the sort order for a column.
      </param>
      <param name="sortOrdinal">
        Specifies the ordinal of the sort column.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> class with the specified column name, database name, owning schema, object name, and default server. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Type)">
      <param name="name">
        The name of the column.
      </param>
      <param name="dbType">
        The SQL Server type of the parameter or column.
      </param>
      <param name="userDefinedType">
        A <see cref="T:System.Type" /> instance that points to the UDT.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> class with the specified column name, type, and user-defined type (UDT).
      </summary>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="name" /> is <see langword="null" />.
      </exception>
      <exception cref="T:System.ArgumentException">
        A <see cref="T:System.Data.SqlDbType" /> that is not allowed was passed to the constructor as <paramref name="dbType" />, or <paramref name="userDefinedType" /> points to a type that does not have <see cref="T:Microsoft.Data.SqlClient.Server.SqlUserDefinedTypeAttribute" /> declared.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Type,System.String)">
      <param name="name">
        The name of the column.
      </param>
      <param name="dbType">
        The SQL Server type of the parameter or column.
      </param>
      <param name="userDefinedType">
        A <see cref="T:System.Type" /> instance that points to the UDT.
      </param>
      <param name="serverTypeName">
        The SQL Server type name for <paramref name="userDefinedType" />.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> class with the specified column name, user-defined type (UDT), and SQLServer type.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Type,System.String,System.Boolean,System.Boolean,Microsoft.Data.SqlClient.SortOrder,System.Int32)">
      <param name="name">
        The name of the column.
      </param>
      <param name="dbType">
        The SQL Server type of the parameter or column.
      </param>
      <param name="userDefinedType">
        A <see cref="T:System.Type" /> instance that points to the UDT.
      </param>
      <param name="serverTypeName">
        The SQL Server type name for <paramref name="userDefinedType" />.
      </param>
      <param name="useServerDefault">
        Specifies whether this column should use the default server value.
      </param>
      <param name="isUniqueKey">
        Specifies if the column in the table-valued parameter is unique.
      </param>
      <param name="columnSortOrder">
        Specifies the sort order for a column.
      </param>
      <param name="sortOrdinal">
        Specifies the ordinal of the sort column.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> class with the specified column name, type, user-defined type, SQL Server type, and server default. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.
      </summary>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlMetaData.CompareOptions">
      <summary>
        Gets the comparison rules used for the column or parameter.
      </summary>
      <value>
        The comparison rules used for the column or parameter as a <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlMetaData.DbType">
      <summary>
        Gets the data type of the column or parameter.
      </summary>
      <value>
        The data type of the column or parameter as a <see cref="T:System.Data.DbType" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlMetaData.IsUniqueKey">
      <summary>
        Indicates if the column in the table-valued parameter is unique.
      </summary>
      <value>
        A <see cref="T:System.Boolean" /> value.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlMetaData.LocaleId">
      <summary>
        Gets the locale ID of the column or parameter.
      </summary>
      <value>
        The locale ID of the column or parameter as a <see cref="T:System.Int64" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlMetaData.Max">
      <summary>
        Gets the length of TEXT, NTEXT, and IMAGE data types.
      </summary>
      <value>
        The length of TEXT, NTEXT, and IMAGE data types.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlMetaData.MaxLength">
      <summary>
        Gets the maximum length of the column or parameter.
      </summary>
      <value>
        The maximum length of the column or parameter as a <see cref="T:System.Int64" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlMetaData.Name">
      <summary>
        Gets the name of the column or parameter.
      </summary>
      <value>
        The name of the column or parameter as a <see cref="T:System.String" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlMetaData.Precision">
      <summary>
        Gets the precision of the column or parameter.
      </summary>
      <value>
        The precision of the column or parameter as a <see cref="T:System.Byte" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlMetaData.Scale">
      <summary>
        Gets the scale of the column or parameter.
      </summary>
      <value>
        The scale of the column or parameter.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlMetaData.SortOrder">
      <summary>
        Returns the sort order for a column.
      </summary>
      <value>
        A <see cref="T:Microsoft.Data.SqlClient.SortOrder" /> object.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlMetaData.SortOrdinal">
      <summary>
        Returns the ordinal of the sort column.
      </summary>
      <value>
        The ordinal of the sort column.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlMetaData.SqlDbType">
      <summary>
        Gets the data type of the column or parameter.
      </summary>
      <value>
        The data type of the column or parameter as a <see cref="T:System.Data.DbType" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlMetaData.Type">
      <summary>
        Gets the common language runtime (CLR) type of user-defined type (UDT).
      </summary>
      <value>
        The CLR type name of a user-defined type as a <see cref="T:System.Type" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlMetaData.TypeName">
      <summary>
        Gets the three-part name of the user-defined type (UDT) or the SQL Server type represented by the instance.
      </summary>
      <value>
        The name of the UDT or SQL Server type as a <see cref="T:System.String" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlMetaData.UseServerDefault">
      <summary>
        Reports whether this column should use the default server value.
      </summary>
      <value>
        A <see cref="T:System.Boolean" /> value.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlMetaData.XmlSchemaCollectionDatabase">
      <summary>
        Gets the name of the database where the schema collection for this XML instance is located.
      </summary>
      <value>
        The name of the database where the schema collection for this XML instance is located as a <see cref="T:System.String" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlMetaData.XmlSchemaCollectionName">
      <summary>
        Gets the name of the schema collection for this XML instance.
      </summary>
      <value>
        The name of the schema collection for this XML instance as a <see cref="T:System.String" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.Server.SqlMetaData.XmlSchemaCollectionOwningSchema">
      <summary>
        Gets the owning relational schema where the schema collection for this XML instance is located.
      </summary>
      <value>
        The owning relational schema where the schema collection for this XML instance is located as a <see cref="T:System.String" />.
      </value>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Boolean)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Boolean" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Boolean" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.
      </exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Byte)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Byte" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Byte" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Byte[])">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified array of <see cref="T:System.Byte" /> values against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as an array of <see cref="T:System.Byte" /> values.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Char)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Char" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Char" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Char[])">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified array of <see cref="T:System.Char" /> values against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as an array <see cref="T:System.Char" /> values.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBinary)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Data.SqlTypes.SqlBinary" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBoolean)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Data.SqlTypes.SqlBoolean" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlBoolean" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlByte)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Data.SqlTypes.SqlByte" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlByte" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBytes)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Data.SqlTypes.SqlBytes" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlBytes" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlChars)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Data.SqlTypes.SqlChars" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlChars" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDateTime)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Data.SqlTypes.SqlDateTime" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlDateTime" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDecimal)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Data.SqlTypes.SqlDecimal" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDouble)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Data.SqlTypes.SqlDouble" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlDouble" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlGuid)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Data.SqlTypes.SqlGuid" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlGuid" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt16)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Data.SqlTypes.SqlInt16" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt32)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Data.SqlTypes.SqlInt32" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt64)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Data.SqlTypes.SqlInt64" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlMoney)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Data.SqlTypes.SqlMoney" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlSingle)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Data.SqlTypes.SqlSingle" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlString)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Data.SqlTypes.SqlString" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlString" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlXml)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Data.SqlTypes.SqlXml" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlXml" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.DateTime)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.DateTime" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.DateTime" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.DateTimeOffset)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.DateTimeOffset" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as an array of <see cref="T:System.DateTimeOffset" /> values.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Decimal)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Decimal" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Decimal" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Double)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Double" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Double" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Guid)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Guid" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Guid" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Int16)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Int16" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Int16" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Int32)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Int32" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Int32" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Int64)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Int64" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Int64" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Object)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Object" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Object" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.Single)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.Single" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.Single" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.String)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.String" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as a <see cref="T:System.String" />.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.Adjust(System.TimeSpan)">
      <param name="value">
        The value to validate against the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Validates the specified <see cref="T:System.TimeSpan" /> value against the metadata, and adjusts the value if necessary.
      </summary>
      <returns>
        The adjusted value as an array of <see cref="T:System.TimeSpan" /> values.
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not match the <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted.</exception>
    </member>
    <member name="M:Microsoft.Data.SqlClient.Server.SqlMetaData.InferFromValue(System.Object,System.String)">
      <param name="value">
        The object used from which the metadata is inferred.
      </param>
      <param name="name">
        The name assigned to the returned <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </param>
      <summary>
        Infers the metadata from the specified object and returns it as a <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </summary>
      <returns>
        The inferred metadata as a <see cref="T:Microsoft.Data.SqlClient.Server.SqlMetaData" /> instance.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        The <paramref name="value" /> is <see langword="null" />.
      </exception>
    </member>
    <member name="T:Microsoft.Data.SqlClient.DataClassification.ColumnSensitivity">
      <summary>
        Represents the Data Classification Sensitivity Information for columns as configured in Database.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.DataClassification.ColumnSensitivity.#ctor(System.Collections.Generic.IList{Microsoft.Data.SqlClient.DataClassification.SensitivityProperty})">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.DataClassification.ColumnSensitivity" /> class.
      </summary>
      <param name="sensitivityProperties">
        List of sensitivity properties.
      </param>
    </member>
    <member name="P:Microsoft.Data.SqlClient.DataClassification.ColumnSensitivity.SensitivityProperties">
      <summary>
        Returns the list of sensitivity properties as received from Server for this <see cref="T:Microsoft.Data.SqlClient.DataClassification.ColumnSensitivity" /> information.
      </summary>
      <value>
        List of sensitivity properties.
      </value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.DataClassification.InformationType">
      <summary>
        Represents the Data Classification Information Types as received from SQL Server for the active <see cref="T:Microsoft.Data.SqlClient.DataClassification.InformationType" /></summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.DataClassification.InformationType.#ctor(System.String,System.String)">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.DataClassification.InformationType" /> class.
      </summary>
      <param name="name">
        Name of Information Type.
      </param>
      <param name="id">
        ID of Information Type.
      </param>
    </member>
    <member name="P:Microsoft.Data.SqlClient.DataClassification.InformationType.Id">
      <summary>
        Gets the ID for this <see cref="T:Microsoft.Data.SqlClient.DataClassification.InformationType" /> object
      </summary>
      <value>
        ID of Information Type.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.DataClassification.InformationType.Name">
      <summary>
        Gets the name for this <see cref="T:Microsoft.Data.SqlClient.DataClassification.InformationType" /> object
      </summary>
      <value>
        Name of Information Type.
      </value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.DataClassification.Label">
      <summary>
        Represents the Data Classification Labels as received from SQL Server for the active <see cref="T:Microsoft.Data.SqlClient.DataClassification.InformationType" /></summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.DataClassification.Label.#ctor(System.String,System.String)">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.DataClassification.Label" /> class.
      </summary>
      <param name="name">
        Name of label.
      </param>
      <param name="id">
        ID of label.
      </param>
    </member>
    <member name="P:Microsoft.Data.SqlClient.DataClassification.Label.Id">
      <summary>
        Gets the ID for this <see cref="T:Microsoft.Data.SqlClient.DataClassification.Label" /> object
      </summary>
      <value>
        ID of label.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.DataClassification.Label.Name">
      <summary>
        Gets the name for this <see cref="T:Microsoft.Data.SqlClient.DataClassification.Label" /> object
      </summary>
      <value>
        Name of label.
      </value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.DataClassification.SensitivityRank">
      <summary>
        <para>
          A relative ranking of the sensitivity of a query or of a column that is part of per column data.
        </para>
        <para>
          It is an identifier based on a predefined set of values which define sensitivity rank. Used by other services like Advanced Threat Protection to detect anomalies based on their rank.
        </para>
      </summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.DataClassification.SensitivityRank.NOT_DEFINED">
      <summary>No sensitivity rank defined.</summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.DataClassification.SensitivityRank.NONE">
      <summary>Corresponds to rank value of 0.</summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.DataClassification.SensitivityRank.LOW">
      <summary>Corresponds to rank value of 10.</summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.DataClassification.SensitivityRank.MEDIUM">
      <summary>Corresponds to rank value 20.</summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.DataClassification.SensitivityRank.HIGH">
      <summary>Corresponds to rank value 30.</summary>
    </member>
    <member name="F:Microsoft.Data.SqlClient.DataClassification.SensitivityRank.CRITICAL">
      <summary>Corresponds to rank value 40.</summary>
    </member>
    <member name="T:Microsoft.Data.SqlClient.DataClassification.SensitivityClassification">
      <summary>
        Provides the functionality to retrieve Sensitivity Classification data as received from SQL Server for the active <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" />.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.DataClassification.SensitivityClassification.#ctor(System.Collections.Generic.IList{Microsoft.Data.SqlClient.DataClassification.Label},System.Collections.Generic.IList{Microsoft.Data.SqlClient.DataClassification.InformationType},System.Collections.Generic.IList{Microsoft.Data.SqlClient.DataClassification.ColumnSensitivity},Microsoft.Data.SqlClient.DataClassification.SensitivityRank)">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.DataClassification.SensitivityClassification" /> class.
      </summary>
      <param name="labels">
        List of labels.
      </param>
      <param name="informationTypes">
        List of information types.
      </param>
      <param name="columnSensitivity">
        List of column sensitivities.
      </param>
      <param name="sensitivityRank">
        Relative sensitivity rank for the query associated with the active <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" />.
      </param>
    </member>
    <member name="P:Microsoft.Data.SqlClient.DataClassification.SensitivityClassification.ColumnSensitivities">
      <summary>
        Returns the column sensitivity for this <see cref="T:Microsoft.Data.SqlClient.DataClassification.SensitivityClassification" /> Object
      </summary>
      <value>
        List of column sensitivities.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.DataClassification.SensitivityClassification.InformationTypes">
      <summary>
        Returns the information types collection for this <see cref="T:Microsoft.Data.SqlClient.DataClassification.SensitivityClassification" /> Object
      </summary>
      <value>
        List of information types.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.DataClassification.SensitivityClassification.Labels">
      <summary>
        Returns the labels collection for this <see cref="T:Microsoft.Data.SqlClient.DataClassification.SensitivityClassification" /> Object
      </summary>
      <value>
        List of labels.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.DataClassification.SensitivityClassification.SensitivityRank">
      <summary>
        Returns the relative sensitivity rank for the query associated with the active <see cref="T:Microsoft.Data.SqlClient.SqlDataReader" />.
      </summary>
      <value>
        Relative sensitivity ranking for this query.
      </value>
    </member>
    <member name="T:Microsoft.Data.SqlClient.DataClassification.SensitivityProperty">
      <summary>
        Represents the Data Classification Sensitivity Information for columns as configured in Database.
      </summary>
    </member>
    <member name="M:Microsoft.Data.SqlClient.DataClassification.SensitivityProperty.#ctor(Microsoft.Data.SqlClient.DataClassification.Label,Microsoft.Data.SqlClient.DataClassification.InformationType,Microsoft.Data.SqlClient.DataClassification.SensitivityRank)">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.DataClassification.SensitivityProperty" /> class.
      </summary>
      <param name="label">
        Label for this <see cref="T:Microsoft.Data.SqlClient.DataClassification.SensitivityProperty" />.
      </param>
      <param name="informationType">
        Information type for this <see cref="T:Microsoft.Data.SqlClient.DataClassification.SensitivityProperty" />.
      </param>
      <param name="sensitivityRank">
        Sensitivity rank for this <see cref="T:Microsoft.Data.SqlClient.DataClassification.SensitivityProperty" />.
      </param>
    </member>
    <member name="P:Microsoft.Data.SqlClient.DataClassification.SensitivityProperty.InformationType">
      <summary>
        Returns the information type for this <see cref="T:Microsoft.Data.SqlClient.DataClassification.SensitivityProperty" /> Object
      </summary>
      <value>
        Information type for this <see cref="T:Microsoft.Data.SqlClient.DataClassification.SensitivityProperty" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.DataClassification.SensitivityProperty.Label">
      <summary>
        Returns the label for this <see cref="T:Microsoft.Data.SqlClient.DataClassification.SensitivityProperty" /> Object
      </summary>
      <value>
        Label for this <see cref="T:Microsoft.Data.SqlClient.DataClassification.SensitivityProperty" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlClient.DataClassification.SensitivityProperty.SensitivityRank">
      <summary>
        Returns the sensitivity rank for this <see cref="T:Microsoft.Data.SqlClient.DataClassification.SensitivityProperty" /> Object
      </summary>
      <value>
        Sensitivity rank for this <see cref="T:Microsoft.Data.SqlClient.DataClassification.SensitivityProperty" />.
      </value>
    </member>
    <member name="T:Microsoft.Data.SqlTypes.SqlFileStream">
      <summary>
        Exposes SQL Server data that is stored with the FILESTREAM column attribute as a sequence of bytes.
      </summary>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql-server-data-type-mappings">
        SQL Server Data Type Mappings (ADO.NET)
      </seealso>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/sql-server-binary-large-value-data">
        SQL Server Binary and Large-Value Data (ADO.NET)
      </seealso>
    </member>
    <member name="M:Microsoft.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
      <param name="path">
        The logical path to the file. The path can be retrieved by using the Transact-SQL Pathname function on the underlying FILESTREAM column in the table.
      </param>
      <param name="transactionContext">
        The transaction context for the <see cref="T:Microsoft.Data.SqlTypes.SqlFileStream" /> object. Applications should return the byte array returned by calling the GET_FILESTREAM_TRANSACTION_CONTEXT method.
      </param>
      <param name="access">
        <para>
          The access mode to use when opening the file. Supported <see cref="T:System.IO.FileAccess" /> enumeration values are <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" />, and <see cref="F:System.IO.FileAccess.ReadWrite" />.
        </para>
        <para>
          When using <see cref="F:System.IO.FileAccess.Read" />, the <see cref="T:Microsoft.Data.SqlTypes.SqlFileStream" /> object can be used to read all the existing data.
        </para>
        <para>
          When using <see cref="F:System.IO.FileAccess.Write" />, <see cref="T:Microsoft.Data.SqlTypes.SqlFileStream" /> points to a zero byte file. Existing data will be overwritten when the object is closed and the transaction is committed.
        </para>
        <para>
          When using <see cref="F:System.IO.FileAccess.ReadWrite" />, the <see cref="T:Microsoft.Data.SqlTypes.SqlFileStream" /> points to a file which has all the existing data in it. The handle is positioned at the beginning of the file. You can use one of the <see cref="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" /> methods to move the handle position within the file to write or append new data.
        </para>
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlTypes.SqlFileStream" /> class.
      </summary>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is a null reference, or <paramref name="transactionContext" /> is null.
      </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters. <paramref name="path" /> begins with "\\\\.\\", for example "\\\\.\PHYSICALDRIVE0 ".
        </para>
        <para>
          The handle returned by the call to NTCreateFile is not of type FILE_TYPE_DISK. <paramref name="path" /> contains an unsupported value.
        </para>
      </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        The file cannot be found.
      </exception>
      <exception cref="T:System.IO.IOException">
        An I/O error occurred.
      </exception>
      <exception cref="T:System.Security.SecurityException">
        The caller does not have the required permission.
      </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        The specified <paramref name="path" /> is invalid, such as being on an unmapped drive.
      </exception>
      <exception cref="T:System.UnauthorizedAccessException">
        The access requested is not permitted by the operating system for the specified path. This occurs when Write or ReadWrite access is specified, and the file or directory is set for read-only access.
      </exception>
      <exception cref="T:System.InvalidOperationException">
        NtCreateFile fails with error code set to ERROR_SHARING_VIOLATION.
      </exception>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="M:Microsoft.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
      <param name="path">
        The logical path to the file. The path can be retrieved by using the Transact-SQL Pathname function on the underlying FILESTREAM column in the table.
      </param>
      <param name="transactionContext">
        The transaction context for the <see langword="SqlFileStream" /> object. When set to null, an implicit transaction will be used for the <see langword="SqlFileStream" /> object. Applications should return the byte array returned by calling the GET_FILESTREAM_TRANSACTION_CONTEXT method.
      </param>
      <param name="access">
        The access mode to use when opening the file. Supported <see cref="T:System.IO.FileAccess" /> enumeration values are <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" />, and <see cref="F:System.IO.FileAccess.ReadWrite" />. When using <see langword="FileAccess.Read" />, the <see cref="T:Microsoft.Data.SqlTypes.SqlFileStream" /> object can be used to read all the existing data.  When using <see langword="FileAccess.Write" />, <see cref="T:Microsoft.Data.SqlTypes.SqlFileStream" /> points to a zero byte file. Existing data will be overwritten when the object is closed and the transaction is committed.  When using <see langword="FileAccess.ReadWrite" />, the <see cref="T:Microsoft.Data.SqlTypes.SqlFileStream" /> points to a file which has all the existing data in it. The handle is positioned at the beginning of the file. You can use one of the <see cref="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" /> methods to move the handle position within the file to write or append new data.
      </param>
      <param name="options">
        Specifies the option to use while opening the file. Supported <see cref="T:System.IO.FileOptions" /> values are <see cref="F:System.IO.FileOptions.Asynchronous" />, <see cref="F:System.IO.FileOptions.WriteThrough" />, <see cref="F:System.IO.FileOptions.SequentialScan" />, and <see cref="F:System.IO.FileOptions.RandomAccess" />.
      </param>
      <param name="allocationSize">
        The allocation size to use while creating a file. If set to 0, the default value is used.
      </param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlTypes.SqlFileStream" /> class.
      </summary>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is a null reference, or <paramref name="transactionContext" /> is null.
      </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters. <paramref name="path" /> begins with "\\\\.\\", for example "\\\\.\PHYSICALDRIVE0 "
        </para>
        <para>
          The handle returned by call to NTCreateFile is not of type FILE_TYPE_DISK. <paramref name="options" /> contains an unsupported value.
        </para>
      </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        The file cannot be found.
      </exception>
      <exception cref="T:System.IO.IOException">
        An I/O error occurred.
      </exception>
      <exception cref="T:System.Security.SecurityException">
        The caller does not have the required permission.
      </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        The specified <paramref name="path" /> is invalid, such as being on an unmapped drive.
      </exception>
      <exception cref="T:System.UnauthorizedAccessException">
        The access requested is not permitted by the operating system for the specified path. This occurs when Write or ReadWrite access is specified, and the file or directory is set for read-only access.
      </exception>
      <exception cref="T:System.InvalidOperationException">
        NtCreateFile fails with error code set to ERROR_SHARING_VIOLATION.
      </exception>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="P:Microsoft.Data.SqlTypes.SqlFileStream.Name">
      <summary>
        Gets the logical path of the <see cref="T:Microsoft.Data.SqlTypes.SqlFileStream" /> passed to the constructor.
      </summary>
      <value>
        A string value indicating the name of the <see cref="T:Microsoft.Data.SqlTypes.SqlFileStream" />.
      </value>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="P:Microsoft.Data.SqlTypes.SqlFileStream.TransactionContext">
      <summary>
        Gets or sets the transaction context for this <see cref="T:Microsoft.Data.SqlTypes.SqlFileStream" /> object.
      </summary>
      <value>
        The <b>TransactionContext</b> array that was passed to the constructor for this <see cref="T:Microsoft.Data.SqlTypes.SqlFileStream" /> object.
      </value>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="P:Microsoft.Data.SqlTypes.SqlFileStream.CanRead">
      <summary>
        Gets a value indicating whether the current stream supports reading.
      </summary>
      <value>
        <see langword="true" /> if the current stream supports reading; otherwise, <see langword="false" />.
      </value>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="P:Microsoft.Data.SqlTypes.SqlFileStream.CanSeek">
      <summary>
        Gets a value indicating whether the current stream supports seeking.
      </summary>
      <value>
        <see langword="true" /> if the current stream supports seeking; otherwise, <see langword="false" />.
      </value>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="P:Microsoft.Data.SqlTypes.SqlFileStream.CanTimeout">
      <summary>
        Gets a value indicating whether the current stream can time out.
      </summary>
      <value>
        <see langword="true" /> if the current stream can time out; otherwise, <see langword="false" />.
      </value>
    </member>
    <member name="P:Microsoft.Data.SqlTypes.SqlFileStream.CanWrite">
      <summary>
        Gets a value indicating whether the current stream supports writing.
      </summary>
      <value>
        <see langword="true" /> if the current stream supports writing; otherwise, <see langword="false" />.
      </value>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="P:Microsoft.Data.SqlTypes.SqlFileStream.Length">
      <summary>
        Gets a value indicating the length of the current stream in bytes.
      </summary>
      <value>
        An <see cref="T:System.Int64" /> indicating the length of the current stream in bytes.
      </value>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="P:Microsoft.Data.SqlTypes.SqlFileStream.Position">
      <summary>
        Gets or sets the position within the current stream.
      </summary>
      <value>
        The current position within the <see cref="T:Microsoft.Data.SqlTypes.SqlFileStream" />.
      </value>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="P:Microsoft.Data.SqlTypes.SqlFileStream.ReadTimeout">
      <summary>
        Gets or sets a value, in milliseconds, that determines how long the stream will attempt to read before timing out.
      </summary>
      <value>
        A value, in milliseconds, that determines how long the stream will attempt to read before timing out.
      </value>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="P:Microsoft.Data.SqlTypes.SqlFileStream.WriteTimeout">
      <summary>
        Gets or sets a value, in milliseconds, that determines how long the stream will attempt to write before timing out.
      </summary>
      <value>
        A value, in milliseconds, that determines how long the stream will attempt to write before timing out.
      </value>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="M:Microsoft.Data.SqlTypes.SqlFileStream.Flush">
      <summary>
        Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
      </summary>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="M:Microsoft.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <param name="buffer">
        The buffer to read the data into.
      </param>
      <param name="offset">
        The byte offset in <paramref name="buffer" /> at which to begin writing data read from the stream.
      </param>
      <param name="count">
        The maximum number of bytes to read.
      </param>
      <param name="callback">
        An optional asynchronous callback, to be called when the read is complete.
      </param>
      <param name="state">
        A user-provided object that distinguishes this particular asynchronous read request from other requests
      </param>
      <summary>
        Begins an asynchronous read operation.
      </summary>
      <returns>
        An <see cref="T:System.IAsyncResult" /> that represents the asynchronous read, which could still be pending.
      </returns>
      <exception cref="T:System.NotSupportedException">
        Reading data is not supported on the stream.
      </exception>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="M:Microsoft.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)">
      <param name="asyncResult">
        The reference to the pending asynchronous request to finish.
      </param>
      <summary>
        Waits for the pending asynchronous read to complete.
      </summary>
      <returns>
        The number of bytes read from the stream, between zero (0) and the number of bytes you requested. Streams return zero (0) only at the end of the stream, otherwise, they should block until at least one byte is available.
      </returns>
      <exception cref="T:System.ArgumentException">
        The <see cref="T:System.IAsyncResult" /> object did not come from the corresponding <see cref="M:Microsoft.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method.
      </exception>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="M:Microsoft.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <param name="buffer">
        The buffer to write data from.
      </param>
      <param name="offset">
        The byte offset in <paramref name="buffer" /> from which to begin writing.
      </param>
      <param name="count">
        The maximum number of bytes to write.
      </param>
      <param name="callback">
        An optional asynchronous callback, to be called when the write is complete.
      </param>
      <param name="state">
        A user-provided object that distinguishes this particular asynchronous write request from other requests.
      </param>
      <summary>
        Begins an asynchronous write operation.
      </summary>
      <returns>
        An <see cref="T:System.IAsyncResult" /> that represents the asynchronous write, which could still be pending.
      </returns>
      <exception cref="T:System.NotSupportedException">
        Writing data is not supported on the stream.
      </exception>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="M:Microsoft.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)">
      <param name="asyncResult">
        A reference to the outstanding asynchronous I/O request.
      </param>
      <summary>
        Ends an asynchronous write operation.
      </summary>
      <exception cref="T:System.ArgumentException">
        The <see cref="T:System.IAsyncResult" /> object did not come from the corresponding <see cref="M:Microsoft.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method.
      </exception>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="M:Microsoft.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <param name="offset">
        A byte offset relative to the <paramref name="origin" /> parameter
      </param>
      <param name="origin">
        A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position
      </param>
      <summary>
        Sets the position within the current stream.
      </summary>
      <returns>
        The new position within the current stream.
      </returns>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="M:Microsoft.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)">
      <param name="value">
        The desired length of the current stream in bytes.
      </param>
      <summary>
        Sets the length of the current stream.
      </summary>
      <exception cref="T:System.NotSupportedException">
        The object does not support reading of data.
      </exception>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="M:Microsoft.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)">
      <param name="buffer">
        An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.
      </param>
      <param name="offset">
        The zero-based byte offset in buffer at which to begin storing the data read from the current stream.
      </param>
      <param name="count">
        The maximum number of bytes to be read from the current stream.
      </param>
      <summary>
        Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
      </summary>
      <returns>
        The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
      </returns>
      <exception cref="T:System.NotSupportedException">
        The object does not support reading of data.
      </exception>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="M:Microsoft.Data.SqlTypes.SqlFileStream.ReadByte">
      <summary>
        Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
      </summary>
      <returns>
        The unsigned byte cast to an <see cref="T:System.Int32" />, or -1 if at the end of the stream.
      </returns>
      <exception cref="T:System.NotSupportedException">
        The object does not support reading of data.
      </exception>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="M:Microsoft.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)">
      <param name="buffer">
        An array of bytes. This method copies <paramref name="count" /> bytes from <paramref name="buffer" /> to the current stream.
      </param>
      <param name="offset">
        The zero-based byte offset in <paramref name="buffer" /> at which to begin copying bytes to the current stream.
      </param>
      <param name="count">
        The number of bytes to be written to the current stream.
      </param>
      <summary>
        Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
      </summary>
      <exception cref="T:System.NotSupportedException">
        The object does not support writing of data.
      </exception>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="M:Microsoft.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)">
      <param name="value">
        The byte to write to the stream.
      </param>
      <summary>
        Writes a byte to the current position in the stream and advances the position within the stream by one byte.
      </summary>
      <exception cref="T:System.NotSupportedException">
        The object does not support writing of data.
      </exception>
      <seealso href="https://learn.microsoft.com/sql/connect/ado-net/sql/filestream-data">
        FILESTREAM Data in SQL Server 2008 (ADO.NET)
      </seealso>
    </member>
    <member name="T:Microsoft.Data.SqlTypes.SqlJson">
      <summary>Represents the JSON datatype in SQL Server.</summary>
    </member>
    <member name="M:Microsoft.Data.SqlTypes.SqlJson.#ctor">
      <summary>Parameterless constructor. Initializes a new instance of the SqlJson class which represents a null JSON value.</summary>
    </member>
    <member name="M:Microsoft.Data.SqlTypes.SqlJson.#ctor(System.String)">
      <param name="jsonString" />
      <summary>Takes a <see cref="T:System.String" /> as input and initializes a new instance of the SqlJson class.</summary>
    </member>
    <member name="M:Microsoft.Data.SqlTypes.SqlJson.#ctor(System.Text.Json.JsonDocument)">
      <param name="jsonDoc" />
      <summary>Takes a <see cref="T:System.Text.Json.JsonDocument" /> as input and initializes a new instance of the SqlJson class.</summary>
    </member>
    <member name="P:Microsoft.Data.SqlTypes.SqlJson.IsNull">
      <inheritdoc />
    </member>
    <member name="P:Microsoft.Data.SqlTypes.SqlJson.Null">
      <summary>Represents a null instance of the <see cref="T:Microsoft.Data.SqlTypes.SqlJson" /> type.</summary>
    </member>
    <member name="P:Microsoft.Data.SqlTypes.SqlJson.Value">
      <summary>Gets the string representation of the Json content of this <see cref="T:Microsoft.Data.SqlTypes.SqlJson" /> instance.</summary>
    </member>
  </members>
</doc>